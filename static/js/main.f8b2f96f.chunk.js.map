{"version":3,"sources":["reducers/quotationReducer.js","reducers/index.js","actions/types.js","store.js","actions/quotationStorageActions.js","components/JSnumberToWordProcessor/JSnumberToWordProcessor.js","actions/currencyStorageActions.js","actions/quotationTypes.js","components/quotations/Form.js","actions/currencyTypes.js","components/quotations/Form2.js","components/quotations/QuotesForm.js","components/quotations/Quotes.js","actions/lpoStorageActions.js","actions/lpoTypes.js","components/quotations/QuotesCard.js","components/layouts/Footer.js","components/quotations/QuotesHome.js","components/quotations/EditForm.js","components/quotations/Redirect.jsx","components/pages/NotFound.js","components/layouts/FormulaModal.js","components/quotations/QuotesCardModalAccordionLpoDetails.jsx","components/quotations/QuotesCardModalAccordionLpoExpenses.jsx","components/quotations/QuotesCardModalAccordion.jsx","components/quotations/QuotesCardModal.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","quotations","proformaInvoice","currency","exchangeRate","savedLPOsInState","newlySavedLPOsAfterDelete","combineReducers","quotation","state","action","type","payload","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","getStorageQuotations","localStorage","getItem","setItem","JSON","stringify","data","parse","length","getStorageProformaInvoice","undefined","totalQuoteAmount","lpoItemName","totalJobUnit","serviceCharge","discount","vat","addStorageQuotation","newTask","push","addStorageProformaInvoice","proforma","updateStorageQuotation","filter","id","deleteStorageQuotation","JSnumberToWordProcessor","processCurString","curString","curString_16","curString_15","curString_14","curString_13","curString_12","curString_11","curString_10","curString_9","curString_8","curString_7","curString_6","curString_5","curString_4","curString_3","curString_2","curString_1","curStringTenseAndUnit","processedWord","processedWordDummy","illion","subStrStart","subStrLength","mainWord","alternateWord","mainWord2","alternateWord2","Number","substr","processWordRegExMatch","llionRegEx","curStringNUMWord","curStringNUM1","curStringNUM2","NUM","curStringLength","llion1","llion2","llion3","llion4","ifMatchedRegEx","match","processRegExMatch","curString2Word","curString1","curString2","curString_NUM","hundred","tenseAndUnit","curStringTenseAndUnitWord","wordNum","funcTenseAndUnit","curStringTenseAndUnitToWord","tense_Unit","num","processedData","processedDataArray","numProcessor","newDecimal","displayNum","displayWord","split","join","newDecimalNum","sudoArr","concat","String","toFixed","newDecimalWord","Array","isArray","forEach","cur","toString","processNum","getStorageCurrency","senior","junior","sign","abbrevation","getStorageExchangeRate","naira","dollar","addStorageCurrency","toggleStorageExchangeRateForm","toggleStorageForm2","getQuotations","dispatch","a","res","addProformaInvoice","Form","itemName","itemDescription","itemUnit","itemPrice","currencySenior","nigCurrency","initCurrency","getAllQuotation","document","getElementById","style","opacity","props","addCurrency","setState","calculateNairaExchangeRate","click","usaCurrency","calculateDollarExchangeRate","valueChanged","e","target","name","value","valueSubmited","preventDefault","itemPriceSplit","isNaN","alert","itemPriceNaira","itemPriceDollar","ngn","usd","Big","div","times","newQuotationItem","uuid","addQuotation","display","toggleForm","this","placeholder1","inputGroupText1","placeholder2","inputGroupText2","placeholder4","inputGroupText4","onSubmit","onFocus","className","boxShadows","required","placeholder","onChange","onClick","step","React","Component","connect","map","boxShadow","Form2","reduce","acc","plus","proformaInvioce","ReactGA","event","category","label","toggleExchangeRateForm","placeholder3","inputGroupText3","defaultValue","backgroundColor","QuotesForm","toggle1","toggle2","exchangedNaira","exchangedDollar","submitExchangeRate","quotationExchangeRate","newExchangeRateRatio","confirm","addExchangeRate","toast","success","getExchangeRate","backgroundImage","transform","paddingBottom","classnames","marginTop","marginBottom","exchageRate","Quotes","storageCurrency","totalPrice","totalPrice0","totalPrice1","quotes","resetQuotes","clearAllQuotations","clearAllInvoice","warning","deleteQuote","deleteQuotation","allTotalPriceArray","itemId","itemUnit0","itemPrice0","itemPrice1","itemPriceTotal1","itemPriceTotal","itemPriceTotalJSNum","itemPriceTotal0","arr","Fragment","width","overflowX","border","color","key","to","cursor","bind","propType","PropTypes","array","isRequired","func","delete4rmStorageSavedLpo","LPOs","newlySavedProformaInvoice","lpoS","proforma_invoice","savedLPOsState","LPOsState","QuotesCard","totalJobUnit0","serviceCharge0","serviceCharge1","totalQuoteAmount0","totalQuoteAmount1","vat0","vat1","profit","profit0","profit1","totalValue","totalValue0","totalValue1","discountPayable","discountPayable0","discountPayable1","vatPayable","vatPayable0","vatPayable1","totalPayableWithVat","totalPayableWithVat0","totalPayableWithVat1","unitDiscount","unitDiscount0","unitDiscount1","unitProfit","unitProfit0","unitProfit1","unitPrice","unitPrice0","unitPrice1","unit1000Price","unit1000Price0","unit1000Price1","clearProformaInvoice","recalculateInvoice","storageProformaInvoice","info","saveProformaInvoice","getSavedProformaInvoiceInStorage","toggle_exchange_rate_form","toggle_form2","exchange_rate","quotations_length","displayRecalculateBTN","newInvoice","dateSaved","Date","toDateString","timeSaved","toLocaleTimeString","newInvoiceName","newProformaInvoice","duplicateOverwrite","invoice","toLowerCase","dark","getProformaInvoice","getCurrency","initProfit","minus","totalValueMinusDiscount","data-toggle","data-target","modalview","borderlessTable","pointerScale","Infinity","effects","listStyleType","borderRadius","Footer","thisYear","getFullYear","presentYear","textAlign","href","QuotesHome","pageview","location","pathname","search","EditForm","currencySign","toggleRecalculateBtnOnPriceEdit","toggleRecalculateBtnAfterEditingAnExpenseItemUnit","toggleRecalculateBtnAfterEditingAnExpenseItemPrice","updateQuotation","history","params","Redirect","NotFound","useEffect","FormulaModal","data-dismiss","QuotesCardModalAccordionLpoDetails","LPOsArr","defaultSavedProformaInvoice","currentInvoiceName","pushUploadedLpo2Storage","deleteLpo","error","uploadLpo","fontWeight","withRouter","QuotesCardModalAccordionLpoExpenses","expenses","items","itemUnitPriceNaira","itemUnitPriceDollar","QuotesCardModalAccordionLpoExpensesHeader","QuotesCardModalAccordion","lpoArr","newLpoArr","lpo","element","show","data-parent","date","time","QuotesCardModal","savedProformaInvoice","createVariablesArr","i","quote","index","fx","createVariables","lpoIndex","variables","Object","assign","allProcessedLpoInvoice","idIncreament","entries","valueO","x","allExpenses","lpoObj","quotationIndexObj","indexV","discriptionName","valueV","processedLpoInvoice","keys","App","initialize","exact","path","component","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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B,EAAU,MAyGf,KAArBA,EAAUpB,SAIZ8D,EACE1B,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,eACA,kBAOFiD,EACE,eACAhB,EACAb,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAnB,EACAV,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAtB,EACAP,EAAU,IACVA,EAAU,IACV,GACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAzB,EACAJ,EAAU,IACVA,EAAU,IACV,GACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACA5B,EACAD,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUpB,OAAe,CAG3B,IAAIwE,EAA8BF,EAChCvB,OAAO3B,EAAU,GAAKA,EAAU,KAElCkB,GAAiBkC,EAGjBhC,EACE,EACApB,EAAUpB,OACV,eACA,iBACA,eACA,kBAKFiD,EACE,eACAf,EACAd,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAlB,EACAX,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACArB,EACAR,EAAU,GACVA,EAAU,IACV,GACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAxB,EACAL,EAAU,IACVA,EAAU,IACV,GACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACA3B,EACAF,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,IAiMJ,GArLyB,KAArBA,EAAUpB,cAGQE,IAAhBkC,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUpB,OACV,eACA,iBACA,eACA,kBAKFiD,EACE,eACAd,EACAf,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAjB,EACAZ,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACApB,EACAT,EAAU,GACVA,EAAU,GACV,GACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAvB,EACAN,EAAU,IACVA,EAAU,IACV,GACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACA1B,EACAH,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUpB,SAIZ8D,EACE1B,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAhB,EACAb,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAnB,EACAV,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAtB,EACAP,EAAU,IACVA,EAAU,IACV,GACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAzB,EACAJ,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUpB,OAAe,CAG3B,IAAIwE,EAA8BF,EAChCvB,OAAO3B,EAAU,GAAKA,EAAU,KAElCkB,GAAiBkC,EAGjBhC,EACE,EACApB,EAAUpB,OACV,YACA,cACA,YACA,eAKFiD,EACE,YACAf,EACAd,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAlB,EACAX,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACArB,EACAR,EAAU,GACVA,EAAU,IACV,GACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAxB,EACAL,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,IAmKJ,GAvJyB,KAArBA,EAAUpB,cAGQE,IAAhBkC,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUpB,OACV,YACA,cACA,YACA,eAKFiD,EACE,YACAd,EACAf,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAjB,EACAZ,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACApB,EACAT,EAAU,GACVA,EAAU,GACV,GACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAvB,EACAN,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUpB,SAIZ8D,EACE1B,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAhB,EACAb,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAnB,EACAV,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAtB,EACAP,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUpB,OAAe,CAG3B,IAAIwE,EAA8BF,EAChCvB,OAAO3B,EAAU,GAAKA,EAAU,KAElCkB,GAAiBkC,EAGjBhC,EACE,EACApB,EAAUpB,OACV,WACA,aACA,WACA,cAKFiD,EACE,WACAf,EACAd,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAlB,EACAX,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACArB,EACAR,EAAU,GACVA,EAAU,IACV,GACA,GACA,GACA,IAqIJ,GAzHyB,KAArBA,EAAUpB,cAGQE,IAAhBkC,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUpB,OACV,WACA,aACA,WACA,cAKFiD,EACE,WACAd,EACAf,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAjB,EACAZ,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACApB,EACAT,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAYqB,IAArBA,EAAUpB,SAIZ8D,EACE1B,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,WACA,cAOFiD,EACE,WACAhB,EACAb,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAnB,EACAV,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAYqB,IAArBA,EAAUpB,OAAc,CAG1B,IAAIwE,EAA8BF,EAChCvB,OAAO3B,EAAU,GAAKA,EAAU,KAElCkB,GAAiBkC,EAGjBhC,EACE,EACApB,EAAUpB,OACV,WACA,aACA,WACA,cAKFiD,EACE,WACAf,EACAd,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAlB,EACAX,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,IAuGJ,GA3FyB,IAArBA,EAAUpB,cAGQE,IAAhBkC,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUpB,OACV,WACA,aACA,WACA,cAKFiD,EACE,WACAd,EACAf,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAjB,EACAZ,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAYqB,IAArBA,EAAUpB,SAIZ8D,EACE1B,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUpB,OACV,YACA,eAOFiD,EACE,YACAhB,EACAb,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAYqB,IAArBA,EAAUpB,OAAc,CAG1B,IAAIwE,EAA8BF,EAChCvB,OAAO3B,EAAU,GAAKA,EAAU,KAElCkB,GAAiBkC,EAGjBhC,EACE,EACApB,EAAUpB,OACV,YACA,cACA,YACA,eAKFiD,EACE,YACAf,EACAd,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,IAmDJ,GAvCyB,IAArBA,EAAUpB,cAGQE,IAAhBkC,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUpB,OACV,YACA,cACA,YACA,eAKFiD,EACE,YACAd,EACAf,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAaqB,IAArBA,EAAUpB,OAGZ,GAAwB,IAFF+C,OAAO3B,EAAU4B,OAAO,EAAG5B,EAAUpB,SAEhC,CACzB,IAAIyE,EAAa1B,OAAO3B,EAAU,GAAKA,EAAU,IACjDkB,EAAgBF,EAAc,gBAAkBkC,EAAQG,QAExDnC,EAAgBF,EAAc,WAWlC,GAAyB,IAArBhB,EAAUpB,OAAc,CAC1B,IAAIyE,EAAa1B,OAAO3B,EAAU,GAAKA,EAAU,IACjDkB,EAAgBgC,EAAQG,GAuB1B,OAbyB,IAArBrD,EAAUpB,SAEVsC,OADkBpC,IAAhBkC,EACcA,EAEA,QASbE,GAIHgC,EAAU,SAAUI,GA+GxB,MAvGe,CACb,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,UACA,UACA,YACA,WACA,WACA,SACA,aACA,aACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,SACA,aACA,aACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,QACA,YACA,YACA,cACA,aACA,aACA,YACA,cACA,cACA,aACA,QACA,YACA,YACA,cACA,aACA,aACA,YACA,cACA,cACA,aACA,QACA,YACA,YACA,cACA,aACA,aACA,YACA,cACA,cACA,aACA,UACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,SACA,aACA,aACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,SACA,aACA,aACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,WAtGWA,EAAM,IA4GrB,OAAO,SAAUA,GAEf,OA3kDiB,SAAUA,GAC3B,IAAItD,EACAuD,EAAgB,GAChBC,EAAqB,GAwBzB,SAASC,EAAazD,GACpB,IACI0D,EADAC,EAAa,EAEbC,EAAc,GAGd5D,EAAUpB,OAAS,IACrB+E,EAAa3D,EAAU4B,OAAO,EAAG5B,EAAUpB,QAG3CgF,EACE,iGAC4B,KAArB5D,EAAUpB,QACnB+E,EACE3D,EAAU4B,OAAO,EAAG,GACpB,IACA5B,EAAU4B,OAAO5B,EAAUpB,OAAS,GAAI,GACxC,IACAoB,EAAU4B,OAAO5B,EAAUpB,OAAS,GAAI,GACxC,IACAoB,EAAU4B,OAAO5B,EAAUpB,OAAS,EAAG,GACvC,IACAoB,EAAU4B,OAAO5B,EAAUpB,OAAS,EAAG,GACvC,IACAoB,EAAU4B,OAAO5B,EAAUpB,OAAS,EAAGoB,EAAUpB,QAGnDgF,EAAc7D,EAAiB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","file":"static/js/main.f8b2f96f.chunk.js","sourcesContent":["import {\r\n  GET_QUOTATIONS,\r\n  GET_EDIT_QUOTATION,\r\n  GET_PROFORMA_INVOICE,\r\n  GET_CURRENCY,\r\n  GET_EXCHANGE_RATE,\r\n  NAIRA_EXCHANGE_RATE,\r\n  DOLLAR_EXCHANGE_RATE,\r\n  ADD_QUOTATION,\r\n  CLEAR_ALL_QUOTATIONS,\r\n  ADD_PROFORMA_INVOICE,\r\n  ADD_CURRENCY,\r\n  ADD_EXCHANGE_RATE,\r\n  UPDATE_QUOTATION,\r\n  DELETE_QUOTATION,\r\n  SAVE_LPO_STATE,\r\n  DELETE_LPO,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  quotations: [],\r\n  proformaInvoice: {},\r\n  currency: {},\r\n  exchangeRate: {},\r\n  savedLPOsInState: [],\r\n  newlySavedLPOsAfterDelete: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_QUOTATIONS:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload,\r\n      };\r\n    case GET_EDIT_QUOTATION:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload,\r\n      };\r\n    case GET_PROFORMA_INVOICE:\r\n      return {\r\n        ...state,\r\n        proformaInvoice: action.payload,\r\n      };\r\n    case GET_CURRENCY:\r\n      return {\r\n        ...state,\r\n        currency: action.payload,\r\n      };\r\n    case GET_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        exchangeRate: action.payload,\r\n      };\r\n    case NAIRA_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload,\r\n      };\r\n    case DOLLAR_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload,\r\n      };\r\n    case ADD_QUOTATION:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload,\r\n      };\r\n    case CLEAR_ALL_QUOTATIONS:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload,\r\n      };\r\n    case ADD_PROFORMA_INVOICE:\r\n      return {\r\n        ...state,\r\n        proformaInvoice: action.payload,\r\n      };\r\n    case ADD_CURRENCY:\r\n      return {\r\n        ...state,\r\n        currency: action.payload,\r\n      };\r\n    case ADD_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        exchangeRate: action.payload,\r\n      };\r\n    case UPDATE_QUOTATION:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload,\r\n      };\r\n    case DELETE_QUOTATION:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload,\r\n      };\r\n    case SAVE_LPO_STATE:\r\n      return {\r\n        ...state,\r\n        savedLPOsInState: action.payload,\r\n      };\r\n    case DELETE_LPO:\r\n      return {\r\n        ...state,\r\n        newlySavedLPOsAfterDelete: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport quotationReducer from \"./quotationReducer\";\r\n\r\nexport default combineReducers({\r\n  quotation: quotationReducer\r\n});\r\n","export const GET_QUOTATIONS = \"GET_QUOTATIONS\";\r\nexport const GET_EDIT_QUOTATION = \"GET_EDIT_QUOTATION\";\r\nexport const GET_PROFORMA_INVOICE = \"GET_PROFORMA_INVOICE\";\r\nexport const GET_CURRENCY = \"GET_CURRENCY\";\r\nexport const GET_EXCHANGE_RATE = \"GET_EXCHANGE_RATE\";\r\nexport const ADD_QUOTATION = \"ADD_QUOTATION\";\r\nexport const CLEAR_ALL_QUOTATIONS = \"CLEAR_ALL_QUOTATIONS\";\r\nexport const ADD_PROFORMA_INVOICE = \"ADD_PROFORMA_INVOICE\";\r\nexport const ADD_CURRENCY = \"ADD_CURRENCY\";\r\nexport const ADD_EXCHANGE_RATE = \"ADD_EXCHANGE_RATE\";\r\nexport const UPDATE_QUOTATION = \"UPDATE_QUOTATION\";\r\nexport const DELETE_QUOTATION = \"DELETE_QUOTATION\";\r\nexport const NAIRA_EXCHANGE_RATE = \"NAIRA_EXCHANGE_RATE\";\r\nexport const DOLLAR_EXCHANGE_RATE = \"DOLLAR_EXCHANGE_RATE\";\r\nexport const SAVE_LPO_STATE = \"SAVE_LPO_STATE\";\r\nexport const DELETE_LPO = \"DELETE_LPO\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","export const getStorageQuotations = () => {\r\n  // Check  If Quotations Exist\r\n  if (\r\n    localStorage.getItem(\"quotations\") === null ||\r\n    localStorage.getItem(\"quotations\") === \"\"\r\n  ) {\r\n    localStorage.setItem(\"quotations\", JSON.stringify([]));\r\n  }\r\n\r\n  if (\r\n    localStorage.getItem(\"quotations_length\") === null ||\r\n    localStorage.getItem(\"quotations_length\") === \"\"\r\n  ) {\r\n    localStorage.setItem(\"quotations_length\", JSON.stringify(0));\r\n  }\r\n\r\n  // Get All Quotations\r\n  const data = JSON.parse(localStorage.getItem(\"quotations\"));\r\n\r\n  //  Save Length Of Quotations\r\n  localStorage.setItem(\"quotations_length\", JSON.stringify(data.length));\r\n\r\n  return data;\r\n};\r\n\r\nexport const getStorageProformaInvoice = () => {\r\n  const nullInvoice = {\r\n    totalQuoteAmount: \"0\",\r\n    lpoItemName: \"\",\r\n    totalJobUnit: \"0\",\r\n    serviceCharge: \"0\",\r\n    discount: \"0\",\r\n    vat: \"0\",\r\n  };\r\n  // Check  If Proforma Invoice Exist\r\n  if (\r\n    localStorage.getItem(\"proforma_invoice\") === null ||\r\n    localStorage.getItem(\"proforma_invoice\") === \"\" ||\r\n    localStorage.getItem(\"proforma_invoice\") === undefined\r\n  ) {\r\n    localStorage.setItem(\"proforma_invoice\", JSON.stringify(nullInvoice));\r\n  }\r\n\r\n  // Hide displayRecalculateBTN On Application Init Lunch\r\n  if (localStorage.getItem(\"displayRecalculateBTN\") === null) {\r\n    localStorage.setItem(\"displayRecalculateBTN\", false);\r\n  }\r\n\r\n  // Hide saveProformaInvoice On Application Init Lunch\r\n  if (localStorage.getItem(\"saveProformaInvoice\") === null) {\r\n    localStorage.setItem(\"saveProformaInvoice\", false);\r\n  }\r\n\r\n  // Save Saved Proforma Invoice To LS If Not In LS\r\n  if (localStorage.getItem(\"Saved Proforma Invoice\") === null) {\r\n    // localStorage.setItem(\"Saved Proforma Invoice\", \"{}\");\r\n    localStorage.setItem(\"Saved Proforma Invoice\", \"[]\");\r\n  }\r\n\r\n  // Get Proforma Invoice\r\n  const data = JSON.parse(localStorage.getItem(\"proforma_invoice\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const get_EditStorageQuotation = (site_ID) => {\r\n  const quotations = getStorageQuotations();\r\n  // Filter Out Todo\r\n  const newQuotations = quotations.filter(\r\n    (quotation) => quotation.id === site_ID\r\n  );\r\n\r\n  return newQuotations;\r\n};\r\n\r\nexport const addStorageQuotation = (newTask) => {\r\n  const data = getStorageQuotations();\r\n  // Add New Task To List\r\n  data.push(newTask);\r\n  // Save To Storage\r\n  localStorage.setItem(\"quotations\", JSON.stringify(data));\r\n\r\n  return data;\r\n};\r\n\r\nexport const clearAllStorageQuotations = () => {\r\n  localStorage.setItem(\"quotations\", JSON.stringify([]));\r\n  localStorage.setItem(\"quotations_length\", JSON.stringify(0));\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"quotations\"));\r\n  return data;\r\n};\r\n\r\nexport const addStorageProformaInvoice = (proforma) => {\r\n  localStorage.setItem(\"proforma_invoice\", JSON.stringify(proforma));\r\n};\r\n\r\nexport const updateStorageQuotation = (newTask) => {\r\n  const quotations = getStorageQuotations();\r\n  const data = quotations.filter((quotation) => quotation.id !== newTask.id);\r\n  // Add New Task To List\r\n  data.push(newTask);\r\n  // Save To Storage\r\n  localStorage.setItem(\"quotations\", JSON.stringify(data));\r\n  //  Save New Length Of Todo\r\n  localStorage.setItem(\"quotations_length\", JSON.stringify(data.length));\r\n\r\n  return data;\r\n};\r\n\r\nexport const deleteStorageQuotation = (id) => {\r\n  const quotations = getStorageQuotations();\r\n  const data = quotations.filter((quotation) => quotation.id !== id);\r\n  localStorage.setItem(\"quotations\", JSON.stringify(data));\r\n  //  Save New Length Of Todo\r\n  localStorage.setItem(\"quotations_length\", JSON.stringify(data.length));\r\n\r\n  return data;\r\n};\r\n","/*\r\n ** JavaScript Number To Word Processor Is Developed By Saheed Odulaja As A JavaScript Coding Exercise.\r\n ** Feel Free To Fork The Repository as There Is Always Room For Improvement.\r\n ** Also Be Kind Enough To Leave A STAR As A Mark Of Encouragement :)\r\n ** Reposiitory @ https://github.com/Sidodus/JavaScript-Number-To-Word-Processor.\r\n ** Edited To Suit proforma-invoice-caculator\r\n */\r\n\r\nexport const JSnumberToWordProcessor = (function () {\r\n  const processNum = function (num) {\r\n    let curString;\r\n    let processedData = \"\";\r\n    let processedDataArray = [];\r\n\r\n    // Process Number If Number Is An Array OR A Single Number\r\n    if (Array.isArray(num)) {\r\n      num.forEach(function (cur) {\r\n        curString = cur.toString();\r\n\r\n        // Process Number & Get Readable Number With Word\r\n        processedData = numProcessor(curString);\r\n\r\n        // Parse The Object Into An Array\r\n        processedDataArray.push(processedData);\r\n      });\r\n    } else if (num) {\r\n      curString = num.toString();\r\n\r\n      // Process Number & Get Readable Number With Word\r\n      processedData = numProcessor(curString);\r\n\r\n      // Parse The Object Into An Array\r\n      processedDataArray.push(processedData);\r\n    } // END OF if (Array.isArray(num))\r\n\r\n    // Number Processor(Format Number To A Readable Number & Call processCurString() To Process Number To Word)\r\n    function numProcessor(curString) {\r\n      let displayNum = 0;\r\n      let newDecimal = 0;\r\n      let displayWord = \"\";\r\n      let newDecimalWord = \"\";\r\n\r\n      if (curString.length > 18) {\r\n        displayNum = curString.substr(0, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord =\r\n          \"SORRY: THIS APP CURRENTLY SUPPORT ONLY NUMBERS BETWEEN ONE(1) & QUADRILLION ( 10 \\u00B9\\u2077 )\";\r\n      } else if (curString.length === 18) {\r\n        displayNum =\r\n          curString.substr(0, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 15, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 17) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 15, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 16) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 15, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 15) {\r\n        displayNum =\r\n          curString.substr(0, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 14) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 13) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 12) {\r\n        displayNum =\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 11) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 10) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 9) {\r\n        displayNum =\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 8) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 7) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 6) {\r\n        displayNum =\r\n          curString.substr(0, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 5) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 4) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 3) {\r\n        displayNum = curString;\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 2) {\r\n        displayNum = curString;\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 1) {\r\n        displayNum = curString;\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      }\r\n\r\n      // ..................................................................................\r\n      // Rework Decimal Number To 2 Decimal Place\r\n      newDecimal = displayNum.split(\",\").join(\"\");\r\n\r\n      // Format Decimal Number With '0.'\r\n      let sudoArr = [\"0.\"];\r\n\r\n      // Set toFixed(3) Should Decimal Number === \"1.00\" Else toFixed(2)\r\n      let newDecimalNum;\r\n      if (\r\n        Number(sudoArr.concat(String(newDecimal)).join(\"\")).toFixed(2) ===\r\n        \"1.00\"\r\n      ) {\r\n        newDecimalNum = \"100\";\r\n      } else {\r\n        newDecimalNum = Number(sudoArr.concat(String(newDecimal)).join(\"\"))\r\n          .toFixed(2)\r\n          .split(\".\")[1];\r\n      }\r\n\r\n      // Set 2 Decimal Place For Word\r\n      newDecimalWord = processCurString(newDecimalNum);\r\n\r\n      return {\r\n        displayNum,\r\n        newDecimalNum,\r\n        displayWord,\r\n        newDecimalWord,\r\n      };\r\n    } // END OF numProcessor()\r\n\r\n    return processedDataArray;\r\n  }; // END OF processNum(num)\r\n\r\n  // Process Number To Word\r\n  const processCurString = function (curString) {\r\n    if (curString === \"00\") {\r\n      curString = \"0\";\r\n    }\r\n\r\n    let curString_16,\r\n      curString_15,\r\n      curString_14,\r\n      curString_13,\r\n      curString_12,\r\n      curString_11,\r\n      curString_10,\r\n      curString_9,\r\n      curString_8,\r\n      curString_7,\r\n      curString_6,\r\n      curString_5,\r\n      curString_4,\r\n      curString_3,\r\n      curString_2,\r\n      curString_1;\r\n\r\n    let curStringTenseAndUnit = 0;\r\n    let processedWord = \"\";\r\n    let processedWordDummy = \"\";\r\n\r\n    curString_1 = wordNum(Number(curString[0]));\r\n    curString_2 = wordNum(Number(curString[1]));\r\n    curString_3 = wordNum(Number(curString[2]));\r\n    curString_4 = wordNum(Number(curString[3]));\r\n    curString_5 = wordNum(Number(curString[4]));\r\n    curString_6 = wordNum(Number(curString[5]));\r\n    curString_7 = wordNum(Number(curString[6]));\r\n    curString_8 = wordNum(Number(curString[7]));\r\n    curString_9 = wordNum(Number(curString[8]));\r\n    curString_10 = wordNum(Number(curString[9]));\r\n    curString_11 = wordNum(Number(curString[10]));\r\n    curString_12 = wordNum(Number(curString[11]));\r\n    curString_13 = wordNum(Number(curString[12]));\r\n    curString_14 = wordNum(Number(curString[13]));\r\n    curString_15 = wordNum(Number(curString[14]));\r\n    curString_16 = wordNum(Number(curString[15]));\r\n    // curString_17 = wordNum(Number(curString[16]));\r\n    // curString_18 = wordNum(Number(curString[17]));\r\n\r\n    // Format The illion eg Trillion, Billion, Million, Thousand etc\r\n    // NOTE: The mainWord2, & alternateWord2 is For processedWordDummy RegEX match()\r\n    function illion(\r\n      subStrStart,\r\n      subStrLength,\r\n      mainWord,\r\n      alternateWord,\r\n      mainWord2,\r\n      alternateWord2\r\n    ) {\r\n      if (Number(curString.substr(subStrStart, subStrLength)) === 0) {\r\n        processedWord += mainWord;\r\n        // Save To processedWordDummy For RegEX match()\r\n        processedWordDummy = mainWord2;\r\n      } else {\r\n        processedWord += alternateWord;\r\n        // Save To processedWordDummy For RegEX match()\r\n        processedWordDummy = alternateWord2;\r\n      }\r\n    } // END OF illion()\r\n\r\n    /*\r\n     ** Match RegEx With Privious illion eg Trillion, Billion, Million\r\n     ** Matched 'string' Means The If Statement Would Run\r\n     */\r\n    function processWordRegExMatch(\r\n      llionRegEx,\r\n      curStringNUMWord,\r\n      curStringNUM1,\r\n      curStringNUM2,\r\n      NUM,\r\n      curStringLength,\r\n      llion1,\r\n      llion2,\r\n      llion3,\r\n      llion4\r\n    ) {\r\n      let ifMatchedRegEx = llionRegEx;\r\n\r\n      if (processedWordDummy.match(ifMatchedRegEx)) {\r\n        // NOTE: The 2nd Set Of illion(3&4) would Be Parsed To processedWordDummy For RegEX match()\r\n        processRegExMatch(\r\n          curStringNUMWord,\r\n          curStringNUM1,\r\n          curStringNUM2,\r\n          NUM,\r\n          curStringLength,\r\n          llion1,\r\n          llion2,\r\n          llion3,\r\n          llion4\r\n        );\r\n      }\r\n    } // END OF processWordRegExMatch()\r\n\r\n    function processRegExMatch(\r\n      curString2Word,\r\n      curString1,\r\n      curString2,\r\n      NUM,\r\n      curStringLength,\r\n      llion1,\r\n      llion2\r\n    ) {\r\n      // Bind The Tense & Unit to Number\r\n      curStringTenseAndUnit = Number(curString1 + curString2);\r\n\r\n      // Handle The Hundred, Tense, & Unit\r\n      funcTenseAndUnit(curString2Word, \" Hundred\", curStringTenseAndUnit);\r\n\r\n      // Determine How The illion Is Formatted eg. Trillion, Billion, Million etc.\r\n      // This Reformats The Words If The Remaining Number Are Just LEADING ZERO's\r\n      // =================================================================================\r\n      // NOTE: The llion1, & llion2 is To Be Parsed To processedWordDummy For RegEX match()\r\n      // eslint-disable-next-line eqeqeq\r\n      if (curString2Word !== undefined || curStringTenseAndUnit != 0) {\r\n        illion(NUM, curStringLength, llion1, llion2, llion1, llion2);\r\n      } else {\r\n        illion(NUM, curStringLength, \"\", \"\", llion1, llion2);\r\n      }\r\n    } // END OF processRegExMatch()\r\n\r\n    // Convert All Tense & Unit To Word\r\n    function funcTenseAndUnit(curString_NUM, hundred, tenseAndUnit) {\r\n      if (curString_NUM !== undefined) {\r\n        processedWord += curString_NUM + hundred;\r\n      }\r\n      let curStringTenseAndUnitWord = wordNum(tenseAndUnit);\r\n\r\n      // Don't Display if Last Unit Is Zero\r\n      if (curStringTenseAndUnitWord !== undefined) {\r\n        // Prevent processedWord from Displaying Double Spacing Before (and) if curString_NUM == undefined\r\n        if (curString_NUM !== undefined) {\r\n          processedWord += \" and \" + curStringTenseAndUnitWord;\r\n        } else {\r\n          processedWord += \"and \" + curStringTenseAndUnitWord;\r\n        }\r\n      }\r\n    } // END OF funcTenseAndUnit()\r\n\r\n    // Handles 18 Length Number\r\n    if (curString.length === 18) {\r\n      // (1-3) ************************INIT ************************** 100,000,000,000,000,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456,789,012,345,678\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \",\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \"\r\n      );\r\n\r\n      // (4-6) ************************************************\r\n      // Don't Display Trillion If Previous Quadrillion Is Closed eg 100,000,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Quadrillion,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        6,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (7-9) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 100,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_7,\r\n        curString[7],\r\n        curString[8],\r\n        9,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (10-12) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 100,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_10,\r\n        curString[10],\r\n        curString[11],\r\n        12,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (13-15) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 100,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_13,\r\n        curString[13],\r\n        curString[14],\r\n        15,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (16-18) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_16,\r\n        curString[16],\r\n        curString[17],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 18)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 17 Length Number\r\n    if (curString.length === 17) {\r\n      // (1-2) ************************INIT ************************** 10,000,000,000,000,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345,678,901,234,567\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \",\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \"\r\n      );\r\n\r\n      // (3-5) ************************************************\r\n      // Don't Display Trillion If Previous Quadrillion Is Closed eg 10,000,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Quadrillion,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        5,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (6-8) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 10,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_6,\r\n        curString[6],\r\n        curString[7],\r\n        8,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (9-11) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 10,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_9,\r\n        curString[9],\r\n        curString[10],\r\n        11,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (12-14) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 10,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_12,\r\n        curString[12],\r\n        curString[13],\r\n        14,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (15-17) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_15,\r\n        curString[15],\r\n        curString[16],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 17)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 16 Length Number\r\n    if (curString.length === 16) {\r\n      // (1) ************************INIT ************************** 1,000,000,000,000,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \",\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \"\r\n      );\r\n\r\n      // (2-4) ************************************************\r\n      // Don't Display Trillion If Previous Quadrillion Is Closed eg 1,000,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Quadrillion,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        4,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (5-7) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 1,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_5,\r\n        curString[5],\r\n        curString[6],\r\n        7,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (8-10) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 1,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_8,\r\n        curString[8],\r\n        curString[9],\r\n        10,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // 11-13) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 1,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_11,\r\n        curString[11],\r\n        curString[12],\r\n        13,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (14-16) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_14,\r\n        curString[14],\r\n        curString[15],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 16)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 15 Length Number\r\n    if (curString.length === 15) {\r\n      // (1-3) ************************INIT ************************** 100,000,000,000,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456,789,012,345\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (4-6) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 100,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        6,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (7-9) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 100,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_7,\r\n        curString[7],\r\n        curString[8],\r\n        9,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (10-12) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 100,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_10,\r\n        curString[10],\r\n        curString[11],\r\n        12,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (13-15) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_13,\r\n        curString[13],\r\n        curString[14],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 15)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 14 Length Number\r\n    if (curString.length === 14) {\r\n      // (1-2) ************************INIT ************************** 10,000,000,000,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345,678,901,234\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (3-5) ************************************************\r\n      // Don't Display Billion If Previous Billion Is Closed eg 10,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        5,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (6-8) ************************************************\r\n      // Don't Display Billion If Previous Billion Is Closed eg 10,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_6,\r\n        curString[6],\r\n        curString[7],\r\n        8,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (9-11) ************************************************\r\n      // Don't Display Million If Previous Million Is Closed eg 10,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_9,\r\n        curString[9],\r\n        curString[10],\r\n        11,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (12-14) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_12,\r\n        curString[12],\r\n        curString[13],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 14)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 13 Length Number\r\n    if (curString.length === 13) {\r\n      // (1) ************************INIT ************************** 1,000,000,000,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (2-4) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 1,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        4,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (5-7) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 1,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_5,\r\n        curString[5],\r\n        curString[6],\r\n        7,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (8-10) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 1,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_8,\r\n        curString[8],\r\n        curString[9],\r\n        10,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (11-13) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_11,\r\n        curString[11],\r\n        curString[12],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 13)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 12 Length Number\r\n    if (curString.length === 12) {\r\n      // (1-3) ************************INIT ************************** 100,000,000,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456,789,012\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (4-6) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 100,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        6,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (7-9) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 100,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_7,\r\n        curString[7],\r\n        curString[8],\r\n        9,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (10-12) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_10,\r\n        curString[10],\r\n        curString[11],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 12)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 11 Length Number\r\n    if (curString.length === 11) {\r\n      // (1-2) ************************INIT ************************** 10,000,000,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345,678,901\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (3-5) ************************************************\r\n      // Don't Display Billion If Previous Billion Is Closed eg 10,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        5,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (6-8) ************************************************\r\n      // Don't Display Million If Previous Million Is Closed eg 10,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_6,\r\n        curString[6],\r\n        curString[7],\r\n        8,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (9-11) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_9,\r\n        curString[9],\r\n        curString[10],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 11)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 10 Length Number\r\n    if (curString.length === 10) {\r\n      // (1) ************************INIT ************************** 1,000,000,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (2-4) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 1,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        4,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (5-7) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 1,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_5,\r\n        curString[5],\r\n        curString[6],\r\n        7,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (8-10) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_8,\r\n        curString[8],\r\n        curString[9],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 10)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 9 Length Number\r\n    if (curString.length === 9) {\r\n      // (1-3) ************************INIT ************************** 100,000,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456,789\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (4-6) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 100,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        6,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (7-9) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_7,\r\n        curString[7],\r\n        curString[8],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 9)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 8 Length Number\r\n    if (curString.length === 8) {\r\n      // (1-2) ************************INIT ************************** 10,000,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345,678\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (3-5) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 10,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        5,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (6-8) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_6,\r\n        curString[6],\r\n        curString[7],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 8)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 7 Length Number\r\n    if (curString.length === 7) {\r\n      // (1) ************************INIT ************************** 1,000,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (2-4) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 1,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        4,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (5-7) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_5,\r\n        curString[5],\r\n        curString[6],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 7)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 6 Length Number\r\n    if (curString.length === 6) {\r\n      // (1-3) ************************INIT ************************** 100,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (4-6) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 6)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 5 Length Number\r\n    if (curString.length === 5) {\r\n      // (1-2) ************************INIT ************************** 10,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (3-5) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 5)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 4 Length Number\r\n    if (curString.length === 4) {\r\n      // (1) ************************INIT ************************** 1,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (2-4) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 4)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 3 Length Number\r\n    // (1-3) ************************INIT ************************** 123 etc.\r\n    if (curString.length === 3) {\r\n      let curStringSubStr = Number(curString.substr(1, curString.length));\r\n\r\n      if (curStringSubStr !== 0) {\r\n        let tense_Unit = Number(curString[1] + curString[2]);\r\n        processedWord = curString_1 + \" Hundred and \" + wordNum(tense_Unit);\r\n      } else {\r\n        processedWord = curString_1 + \" Hundred\";\r\n      }\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 3)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 2 Length Number\r\n    // (1 & 2) ************************INIT ************************** 12 etc.\r\n    if (curString.length === 2) {\r\n      let tense_Unit = Number(curString[0] + curString[1]);\r\n      processedWord = wordNum(tense_Unit);\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 2)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 1 Length Number\r\n    // (1) ************************INIT ************************** 1 etc.\r\n    if (curString.length === 1) {\r\n      if (curString_1 !== undefined) {\r\n        processedWord = curString_1;\r\n      } else {\r\n        processedWord = \"Zero\";\r\n      }\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 1)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    return processedWord;\r\n  }; // END OF processCurString()\r\n\r\n  // Default Tense & Unit\r\n  const wordNum = function (num) {\r\n    /*\r\n     ** Num Checking Must Not Include 0, Else It Will Make App Buggy\r\n     ** Leading 0s are Read As undefined and Left Out Within Hundred, Tense & Unit (This Is To Ensure Readability)\r\n     ** 0 ('Zero')  Is Included Within {if(curString.length === 1)} Statement\r\n     */\r\n    let newNum = num - 1;\r\n\r\n    let firstNum = [\r\n      \"One\",\r\n      \"Two\",\r\n      \"Three\",\r\n      \"Four\",\r\n      \"Five\",\r\n      \"Six\",\r\n      \"Seven\",\r\n      \"Eight\",\r\n      \"Nine\",\r\n      \"Ten\",\r\n      \"Eleven\",\r\n      \"Twelve\",\r\n      \"Thirteen\",\r\n      \"Fourteen\",\r\n      \"Fifteen\",\r\n      \"Sixteen\",\r\n      \"Seventeen\",\r\n      \"Eighteen\",\r\n      \"Nineteen\",\r\n      \"Twenty\",\r\n      \"Twenty-One\",\r\n      \"Twenty-Two\",\r\n      \"Twenty-Three\",\r\n      \"Twenty-Four\",\r\n      \"Twenty-Five\",\r\n      \"Twenty-Six\",\r\n      \"Twenty-Seven\",\r\n      \"Twenty-Eight\",\r\n      \"Twenty-Nine\",\r\n      \"Thirty\",\r\n      \"Thirty-One\",\r\n      \"Thirty-Two\",\r\n      \"Thirty-Three\",\r\n      \"Thirty-Four\",\r\n      \"Thirty-Five\",\r\n      \"Thirty-Six\",\r\n      \"Thirty-Seven\",\r\n      \"Thirty-Eight\",\r\n      \"Thirty-Nine\",\r\n      \"Forty\",\r\n      \"Forty-One\",\r\n      \"Forty-Two\",\r\n      \"Forty-Three\",\r\n      \"Forty-Four\",\r\n      \"Forty-Five\",\r\n      \"Forty-Six\",\r\n      \"Forty-Seven\",\r\n      \"Forty-Eight\",\r\n      \"Forty-Nine\",\r\n      \"Fifty\",\r\n      \"Fifty-One\",\r\n      \"Fifty-Two\",\r\n      \"Fifty-Three\",\r\n      \"Fifty-Four\",\r\n      \"Fifty-Five\",\r\n      \"Fifty-Six\",\r\n      \"Fifty-Seven\",\r\n      \"Fifty-Eight\",\r\n      \"Fifty-Nine\",\r\n      \"Sixty\",\r\n      \"Sixty-One\",\r\n      \"Sixty-Two\",\r\n      \"Sixty-Three\",\r\n      \"Sixty-Four\",\r\n      \"Sixty-Five\",\r\n      \"Sixty-Six\",\r\n      \"Sixty-Seven\",\r\n      \"Sixty-Eight\",\r\n      \"Sixty-Nine\",\r\n      \"Seventy\",\r\n      \"Seventy-One\",\r\n      \"Seventy-Two\",\r\n      \"Seventy-Three\",\r\n      \"Seventy-Four\",\r\n      \"Seventy-Five\",\r\n      \"Seventy-Six\",\r\n      \"Seventy-Seven\",\r\n      \"Seventy-Eight\",\r\n      \"Seventy-Nine\",\r\n      \"Eighty\",\r\n      \"Eighty-One\",\r\n      \"Eighty-Two\",\r\n      \"Eighty-Three\",\r\n      \"Eighty-Four\",\r\n      \"Eighty-Five\",\r\n      \"Eighty-Six\",\r\n      \"Eighty-Seven\",\r\n      \"Eighty-Eight\",\r\n      \"Eighty-Nine\",\r\n      \"Ninety\",\r\n      \"Ninety-One\",\r\n      \"Ninety-Two\",\r\n      \"Ninety-Three\",\r\n      \"Ninety-Four\",\r\n      \"Ninety-Five\",\r\n      \"Ninety-Six\",\r\n      \"Ninety-Seven\",\r\n      \"Ninety-Eight\",\r\n      \"Ninety-Nine\",\r\n      \"Hundred\",\r\n    ];\r\n\r\n    return firstNum[newNum];\r\n  }; // END OF wordNum()\r\n\r\n  return function (num) {\r\n    let numSplit = String(num).split(\".\");\r\n    return processNum(numSplit);\r\n  }; // END OF process()\r\n})(); // END OF numberToWord\r\n","import { getStorageQuotations } from \"./quotationStorageActions\";\r\nimport { JSnumberToWordProcessor } from \"../components/JSnumberToWordProcessor/JSnumberToWordProcessor\";\r\n\r\nexport const getStorageCurrency = () => {\r\n  if (localStorage.getItem(\"currency\") === null) {\r\n    localStorage.setItem(\r\n      \"currency\",\r\n      JSON.stringify({\r\n        senior: \"Naira\",\r\n        junior: \"kobo\",\r\n        sign: \"₦\",\r\n        abbrevation: \"NGN\",\r\n      })\r\n    );\r\n  }\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"currency\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const getStorageExchangeRate = () => {\r\n  if (localStorage.getItem(\"exchange_rate\") === null) {\r\n    localStorage.setItem(\r\n      \"exchange_rate\",\r\n      JSON.stringify({ naira: 365, dollar: 1 })\r\n    );\r\n  }\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"exchange_rate\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const calculateNairaStorageExchangeRate = (exchangeRate) => {\r\n  const getAllQuotation = getStorageQuotations();\r\n\r\n  const quotationExchangeRate = getAllQuotation.map((quotations) => ({\r\n    id: quotations.id,\r\n    itemName: quotations.itemName,\r\n    itemDescription: quotations.itemDescription,\r\n    itemUnit: quotations.itemUnit,\r\n    itemPriceNaira:\r\n      JSnumberToWordProcessor(quotations.itemPriceNaira).length === 2\r\n        ? JSnumberToWordProcessor(quotations.itemPriceNaira)[0].displayNum +\r\n          \".\" +\r\n          JSnumberToWordProcessor(quotations.itemPriceNaira)[1].displayNum\r\n        : JSnumberToWordProcessor(quotations.itemPriceNaira)[0].displayNum,\r\n    itemPriceDollar:\r\n      JSnumberToWordProcessor(quotations.itemPriceDollar).length === 2\r\n        ? JSnumberToWordProcessor(quotations.itemPriceDollar)[0].displayNum +\r\n          \".\" +\r\n          JSnumberToWordProcessor(quotations.itemPriceDollar)[1].displayNum\r\n        : JSnumberToWordProcessor(quotations.itemPriceDollar)[0].displayNum,\r\n  }));\r\n\r\n  const newQuotationExchangeRate = quotationExchangeRate.map((quotations) => ({\r\n    id: quotations.id,\r\n    itemName: quotations.itemName,\r\n    itemDescription: quotations.itemDescription,\r\n    itemUnit: quotations.itemUnit,\r\n    itemPriceNaira: quotations.itemPriceNaira.split(\",\").join(\"\"),\r\n    itemPriceDollar: quotations.itemPriceDollar.split(\",\").join(\"\"),\r\n  }));\r\n\r\n  return newQuotationExchangeRate;\r\n};\r\n\r\nexport const calculateDollarStorageExchangeRate = (exchangeRate) => {\r\n  const getAllQuotation = getStorageQuotations();\r\n\r\n  const quotationExchangeRate = getAllQuotation.map((quotations) => ({\r\n    id: quotations.id,\r\n    itemName: quotations.itemName,\r\n    itemDescription: quotations.itemDescription,\r\n    itemUnit: quotations.itemUnit,\r\n    itemPriceNaira:\r\n      JSnumberToWordProcessor(quotations.itemPriceNaira).length === 2\r\n        ? JSnumberToWordProcessor(quotations.itemPriceNaira)[0].displayNum +\r\n          \".\" +\r\n          JSnumberToWordProcessor(quotations.itemPriceNaira)[1].displayNum\r\n        : JSnumberToWordProcessor(quotations.itemPriceNaira)[0].displayNum,\r\n    itemPriceDollar:\r\n      JSnumberToWordProcessor(quotations.itemPriceDollar).length === 2\r\n        ? JSnumberToWordProcessor(quotations.itemPriceDollar)[0].displayNum +\r\n          \".\" +\r\n          JSnumberToWordProcessor(quotations.itemPriceDollar)[1].displayNum\r\n        : JSnumberToWordProcessor(quotations.itemPriceDollar)[0].displayNum,\r\n  }));\r\n\r\n  const newQuotationExchangeRate = quotationExchangeRate.map((quotations) => ({\r\n    id: quotations.id,\r\n    itemName: quotations.itemName,\r\n    itemDescription: quotations.itemDescription,\r\n    itemUnit: quotations.itemUnit,\r\n    itemPriceNaira: quotations.itemPriceNaira.split(\",\").join(\"\"),\r\n    itemPriceDollar: quotations.itemPriceDollar.split(\",\").join(\"\"),\r\n  }));\r\n\r\n  return newQuotationExchangeRate;\r\n};\r\n\r\nexport const addStorageCurrency = (currency) => {\r\n  localStorage.setItem(\r\n    \"currency\",\r\n    JSON.stringify({\r\n      senior: currency.senior,\r\n      junior: currency.junior,\r\n      sign: currency.sign,\r\n      abbrevation: currency.abbrevation,\r\n    })\r\n  );\r\n};\r\n\r\nexport const addStorageExchangeRate = (exchageRate) => {\r\n  localStorage.setItem(\r\n    \"exchange_rate\",\r\n    JSON.stringify({\r\n      naira: exchageRate.naira,\r\n      dollar: exchageRate.dollar,\r\n    })\r\n  );\r\n};\r\n\r\nexport const toggleStorageExchangeRateForm = () => {\r\n  if (localStorage.getItem(\"toggle_exchange_rate_form\") === null) {\r\n    localStorage.setItem(\"toggle_exchange_rate_form\", JSON.stringify(false));\r\n  }\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"toggle_exchange_rate_form\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const toggleStorageForm2 = () => {\r\n  if (localStorage.getItem(\"toggle_form2\") === null) {\r\n    localStorage.setItem(\"toggle_form2\", JSON.stringify(false));\r\n  }\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"toggle_form2\"));\r\n\r\n  return data;\r\n};\r\n","import {\r\n  GET_QUOTATIONS,\r\n  GET_EDIT_QUOTATION,\r\n  GET_PROFORMA_INVOICE,\r\n  ADD_QUOTATION,\r\n  CLEAR_ALL_QUOTATIONS,\r\n  ADD_PROFORMA_INVOICE,\r\n  UPDATE_QUOTATION,\r\n  DELETE_QUOTATION\r\n} from \"./types\";\r\n\r\nimport {\r\n  getStorageQuotations,\r\n  get_EditStorageQuotation,\r\n  addStorageQuotation,\r\n  clearAllStorageQuotations,\r\n  updateStorageQuotation,\r\n  deleteStorageQuotation,\r\n  addStorageProformaInvoice,\r\n  getStorageProformaInvoice\r\n} from \"./quotationStorageActions\";\r\n\r\nexport const getQuotations = () => async dispatch => {\r\n  // Get Quotations From Storage & Push To State\r\n  const res = await getStorageQuotations();\r\n  dispatch({\r\n    type: GET_QUOTATIONS,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const getProformaInvoice = () => async dispatch => {\r\n  // Get Quotations From Storage & Push To State\r\n  const res = await getStorageProformaInvoice();\r\n  dispatch({\r\n    type: GET_PROFORMA_INVOICE,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const get_editQuotation = quotation => async dispatch => {\r\n  // Get & Edit Quotation From Storage & State\r\n  const res = await get_EditStorageQuotation(quotation.id);\r\n  dispatch({\r\n    type: GET_EDIT_QUOTATION,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const addQuotation = quotation => async dispatch => {\r\n  // Add Quotation To Storage & State\r\n  const res = await addStorageQuotation(quotation);\r\n  dispatch({\r\n    type: ADD_QUOTATION,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const clearAllQuotations = () => dispatch => {\r\n  // Add Quotation To Storage & State\r\n  const res = clearAllStorageQuotations();\r\n  dispatch({\r\n    type: CLEAR_ALL_QUOTATIONS,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const addProformaInvoice = proforma => async dispatch => {\r\n  // Add Proforma Invoice To Storage & State\r\n  addStorageProformaInvoice(proforma);\r\n\r\n  dispatch({\r\n    type: ADD_PROFORMA_INVOICE,\r\n    payload: proforma\r\n  });\r\n};\r\n\r\nexport const updateQuotation = quotation => async dispatch => {\r\n  // Update Quotation In Storage & State\r\n  const res = await updateStorageQuotation(quotation);\r\n  dispatch({\r\n    type: UPDATE_QUOTATION,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const deleteQuotation = id => async dispatch => {\r\n  // Delete Quotation From Storage & State\r\n  const res = await deleteStorageQuotation(id);\r\n  dispatch({\r\n    type: DELETE_QUOTATION,\r\n    payload: res\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addQuotation } from \"../../actions/quotationTypes\";\r\n\r\nimport {\r\n  addCurrency,\r\n  calculateNairaExchangeRate,\r\n  calculateDollarExchangeRate,\r\n} from \"../../actions/currencyTypes\";\r\nimport {\r\n  getStorageCurrency,\r\n  getStorageExchangeRate,\r\n  toggleStorageExchangeRateForm,\r\n  toggleStorageForm2,\r\n} from \"../../actions/currencyStorageActions\";\r\nimport {\r\n  getStorageQuotations,\r\n  getStorageProformaInvoice,\r\n} from \"../../actions/quotationStorageActions\";\r\n\r\nimport Big from \"big.js\";\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    itemName: \"\",\r\n    itemDescription: \"\",\r\n    itemUnit: \"\",\r\n    itemPrice: \"\",\r\n    currencySenior: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // set toggle For ExchangeRate Form\r\n    toggleStorageExchangeRateForm();\r\n    toggleStorageForm2();\r\n\r\n    let currency = getStorageCurrency();\r\n\r\n    // Set Currency Flag Display\r\n    if (currency.senior === \"Naira\") {\r\n      // addCurrency\r\n      document.getElementById(\"nigCurr\").style.opacity = \"1\";\r\n      document.getElementById(\"usaCurr\").style.opacity = \"0.5\";\r\n    } else if (currency.senior === \"Dollar\") {\r\n      document.getElementById(\"usaCurr\").style.opacity = \"1\";\r\n      document.getElementById(\"nigCurr\").style.opacity = \"0.5\";\r\n    }\r\n\r\n    this.setState({ currencySenior: currency.senior });\r\n  }\r\n\r\n  nigCurrency = () => {\r\n    let initCurrency = getStorageCurrency();\r\n    let getAllQuotation = getStorageQuotations();\r\n\r\n    const exchangeRate = getStorageExchangeRate();\r\n    const naira = Number(exchangeRate.naira);\r\n    const dollar = Number(exchangeRate.dollar);\r\n\r\n    const currency = {\r\n      senior: \"Naira\",\r\n      junior: \"kobo\",\r\n      sign: \"₦\",\r\n      abbrevation: \"NGN\",\r\n    };\r\n\r\n    document.getElementById(\"nigCurr\").style.opacity = \"1\";\r\n    document.getElementById(\"usaCurr\").style.opacity = \"0.5\";\r\n\r\n    this.props.addCurrency(currency);\r\n    this.setState({ currencySenior: currency.senior });\r\n\r\n    if (initCurrency.senior !== currency.senior) {\r\n      if (getAllQuotation.length !== 0) {\r\n        this.props.calculateNairaExchangeRate(naira, dollar);\r\n\r\n        // Recalculate Proforma Invoice\r\n        const getProformaInvoice = getStorageProformaInvoice();\r\n        if (getProformaInvoice.totalQuoteAmount !== 0) {\r\n          document.getElementById(\"recalculateInvoice\").click();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  usaCurrency = () => {\r\n    let initCurrency = getStorageCurrency();\r\n    let getAllQuotation = getStorageQuotations();\r\n\r\n    const exchangeRate = getStorageExchangeRate();\r\n    const naira = Number(exchangeRate.naira);\r\n    const dollar = Number(exchangeRate.dollar);\r\n\r\n    const currency = {\r\n      senior: \"Dollar\",\r\n      junior: \"cent\",\r\n      sign: \"$\",\r\n      abbrevation: \"USD\",\r\n    };\r\n\r\n    document.getElementById(\"usaCurr\").style.opacity = \"1\";\r\n    document.getElementById(\"nigCurr\").style.opacity = \"0.5\";\r\n\r\n    this.props.addCurrency(currency);\r\n    this.setState({ currencySenior: currency.senior });\r\n\r\n    if (initCurrency.senior !== currency.senior) {\r\n      if (getAllQuotation.length !== 0) {\r\n        this.props.calculateDollarExchangeRate(naira, dollar);\r\n\r\n        // Recalculate Proforma Invoice\r\n        const getProformaInvoice = getStorageProformaInvoice();\r\n        if (getProformaInvoice.totalQuoteAmount !== 0) {\r\n          document.getElementById(\"recalculateInvoice\").click();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  valueChanged = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  valueSubmited = (e) => {\r\n    e.preventDefault();\r\n\r\n    let { itemName, itemDescription, itemUnit, itemPrice } = this.state;\r\n\r\n    /*\r\n     ** Add '0' To ItemPrice If It's e.g '.88'\r\n     ** ItemPrice Would Now Be '0.88'\r\n     */\r\n    let itemPriceSplit = itemPrice.split(\".\");\r\n    if (itemPriceSplit.length === 2) {\r\n      if (itemPriceSplit[0] === \"\") {\r\n        itemPrice = \"0.\" + itemPriceSplit[1];\r\n      }\r\n    }\r\n\r\n    // Item Price Must Be a Number\r\n    if (isNaN(itemPrice)) {\r\n      alert(\"Enter A Valid Number As Item Amount\");\r\n    } else {\r\n      // Set itemUnit Default Value\r\n      if (itemUnit === \"\") {\r\n        itemUnit = \"1\";\r\n      }\r\n\r\n      /*  Split Item Price Into itemPriceNaira & itemPriceDollar\r\n       ** Calculate Both Item Price Based On Exchange Rate\r\n       */\r\n      let itemPriceNaira;\r\n      let itemPriceDollar;\r\n\r\n      const currency = JSON.parse(localStorage.getItem(\"currency\")).senior;\r\n      const ngn = Number(\r\n        JSON.parse(localStorage.getItem(\"exchange_rate\")).naira\r\n      );\r\n      const usd = Number(\r\n        JSON.parse(localStorage.getItem(\"exchange_rate\")).dollar\r\n      );\r\n\r\n      let exchangeRate;\r\n      if (ngn > usd) {\r\n        exchangeRate = ngn / usd;\r\n      } else if (usd > ngn) {\r\n        exchangeRate = usd / ngn;\r\n      }\r\n\r\n      if (currency === \"Naira\") {\r\n        itemPriceNaira = itemPrice;\r\n        /*\r\n         **  If New Exchange Rate Ratio Is Higher Than Storage Exchange Rate Ratio,\r\n         **  Divide The New Exchange Rate Ratio With Naira To Get Dollar Value.\r\n         **  This Occures If Dollar Value Is Greater Than Naira Value, Else Vise-Visa\r\n         */\r\n        itemPriceDollar =\r\n          usd < ngn\r\n            ? Big(itemPriceNaira).div(exchangeRate).toFixed()\r\n            : Big(itemPriceNaira).times(exchangeRate).toFixed();\r\n      } else if (currency === \"Dollar\") {\r\n        itemPriceDollar = itemPrice;\r\n        /*\r\n         **  If New Exchange Rate Ratio Is Higher Than Storage Exchange Rate Ratio,\r\n         **  Multiply The New Exchange Rate Ratio With Dollar To Get Naira Value.\r\n         **  This Occures If Dollar Value Is Greater Than Naira Value, Else Vise-Visa\r\n         */\r\n        itemPriceNaira =\r\n          usd < ngn\r\n            ? Big(itemPriceDollar).times(exchangeRate).toFixed()\r\n            : Big(itemPriceDollar).div(exchangeRate).toFixed();\r\n      }\r\n\r\n      const newQuotationItem = {\r\n        id: uuid(),\r\n        itemName,\r\n        itemDescription,\r\n        itemUnit,\r\n        itemPriceNaira,\r\n        itemPriceDollar,\r\n      };\r\n\r\n      this.setState({\r\n        itemName: \"\",\r\n        itemDescription: \"\",\r\n        itemUnit: \"\",\r\n        itemPrice: \"\",\r\n      });\r\n\r\n      this.props.addQuotation(newQuotationItem);\r\n\r\n      // Display clearAllInvoice BTN\r\n      document.getElementById(\"clearAllInvoice\").style.display = \"block\";\r\n\r\n      // Reveal the Recalculate BTN only when there is need for recalculation\r\n      document.getElementById(\"recalculateInvoice\").style.display = \"block\";\r\n      // Hide saveProformaInvoice BTN\r\n      document.getElementById(\"saveProformaInvoice\").style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  toggleForm = () => {\r\n    // Colapse Exchange Rate Form OnFocus\r\n    if (toggleStorageExchangeRateForm() === true) {\r\n      document.getElementById(\"setExchangeRateBtn\").click();\r\n    }\r\n\r\n    // Colapse Form2 On Focus\r\n    if (toggleStorageForm2() === true) {\r\n      document.getElementById(\"generateInvoice\").click();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      itemName,\r\n      itemDescription,\r\n      itemPrice,\r\n      itemUnit,\r\n      currencySenior,\r\n    } = this.state;\r\n\r\n    const {\r\n      placeholder1,\r\n      inputGroupText1,\r\n      placeholder2,\r\n      inputGroupText2,\r\n      placeholder4,\r\n      inputGroupText4,\r\n    } = this.props;\r\n    return (\r\n      <form onSubmit={this.valueSubmited} onFocus={this.toggleForm}>\r\n        <div className=\"input-group mb-3 boxShadows\" style={boxShadows}>\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText1}</span>\r\n          </div>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"itemName\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder1}\r\n            value={itemName}\r\n            onChange={this.valueChanged}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"itemDescription\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder2}\r\n            value={itemDescription}\r\n            onChange={this.valueChanged}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">{inputGroupText2}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3 boxShadows\" style={boxShadows}>\r\n          <div className=\"input-group-prepend\">\r\n            <span\r\n              id=\"nigCurr\"\r\n              className=\"input-group-text nigeriaCurrencyImage btn btn-outline-success form-control\"\r\n              onClick={this.nigCurrency}\r\n            >\r\n              <input type=\"button\" />\r\n            </span>\r\n            <span\r\n              id=\"usaCurr\"\r\n              className=\"input-group-text usaCurrencyImage btn btn-outline-success form-control\"\r\n              onClick={this.usaCurrency}\r\n            >\r\n              <input type=\"button\" className=\"usaCurrencyImage2\" />\r\n            </span>\r\n          </div>\r\n          <input\r\n            required\r\n            type=\"number\"\r\n            step=\"0.00005\"\r\n            name=\"itemPrice\"\r\n            className=\"form-control\"\r\n            placeholder={\"Enter Amount In \" + currencySenior}\r\n            value={itemPrice}\r\n            onChange={this.valueChanged}\r\n          />\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText4}</span>\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            name=\"itemUnit\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder4}\r\n            value={itemUnit}\r\n            onChange={this.valueChanged}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"form-control btn btn-secondary\"\r\n          style={boxShadows}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  quotations: PropTypes.array.isRequired,\r\n  addQuotation: PropTypes.func.isRequired,\r\n  addCurrency: PropTypes.func.isRequired,\r\n  calculateNairaExchangeRate: PropTypes.func.isRequired,\r\n  calculateDollarExchangeRate: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quotations: state.quotation.quotations,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addQuotation,\r\n  addCurrency,\r\n  calculateNairaExchangeRate,\r\n  calculateDollarExchangeRate,\r\n})(Form);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n","import {\r\n  GET_CURRENCY,\r\n  ADD_CURRENCY,\r\n  GET_EXCHANGE_RATE,\r\n  ADD_EXCHANGE_RATE,\r\n  NAIRA_EXCHANGE_RATE,\r\n  DOLLAR_EXCHANGE_RATE\r\n} from \"./types\";\r\nimport {\r\n  getStorageExchangeRate,\r\n  getStorageCurrency,\r\n  addStorageCurrency,\r\n  addStorageExchangeRate,\r\n  calculateNairaStorageExchangeRate,\r\n  calculateDollarStorageExchangeRate\r\n} from \"./currencyStorageActions\";\r\n\r\nexport const getCurrency = () => async dispatch => {\r\n  // Get Quotations From Storage & Push To State\r\n  const res = await getStorageCurrency();\r\n  dispatch({\r\n    type: GET_CURRENCY,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const getExchangeRate = () => async dispatch => {\r\n  // Get Quotations From Storage & Push To State\r\n  const res = await getStorageExchangeRate();\r\n  dispatch({\r\n    type: GET_EXCHANGE_RATE,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const addCurrency = currency => async dispatch => {\r\n  // Add Proforma Invoice To Storage & State\r\n  addStorageCurrency(currency);\r\n\r\n  dispatch({\r\n    type: ADD_CURRENCY,\r\n    payload: currency\r\n  });\r\n};\r\n\r\nexport const addExchangeRate = exchangeRate => async dispatch => {\r\n  // Add Proforma Invoice To Storage & State\r\n  addStorageExchangeRate(exchangeRate);\r\n\r\n  dispatch({\r\n    type: ADD_EXCHANGE_RATE,\r\n    payload: exchangeRate\r\n  });\r\n};\r\n\r\nexport const calculateNairaExchangeRate = (ngn, usd) => async dispatch => {\r\n  let exchangeRate;\r\n  if (Number(ngn) > Number(usd)) {\r\n    exchangeRate = Number(ngn) / Number(usd);\r\n  } else if (Number(usd) > Number(ngn)) {\r\n    exchangeRate = Number(usd) / Number(ngn);\r\n  }\r\n  // Add Proforma Invoice To Storage & State\r\n  const res = calculateNairaStorageExchangeRate(exchangeRate);\r\n  dispatch({\r\n    type: NAIRA_EXCHANGE_RATE,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const calculateDollarExchangeRate = (ngn, usd) => async dispatch => {\r\n  let exchangeRate;\r\n  if (Number(ngn) > Number(usd)) {\r\n    exchangeRate = Number(ngn) / Number(usd);\r\n  } else if (Number(usd) > Number(ngn)) {\r\n    exchangeRate = Number(usd) / Number(ngn);\r\n  }\r\n  // Add Proforma Invoice To Storage & State\r\n  const res = calculateDollarStorageExchangeRate(exchangeRate);\r\n  dispatch({\r\n    type: DOLLAR_EXCHANGE_RATE,\r\n    payload: res\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProformaInvoice } from \"../../actions/quotationTypes\";\r\n\r\nimport { getStorageQuotations } from \"../../actions/quotationStorageActions\";\r\nimport { toggleStorageExchangeRateForm } from \"../../actions/currencyStorageActions\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport Big from \"big.js\";\r\n\r\nclass Form2 extends React.Component {\r\n  state = {\r\n    lpoItemName: \"\",\r\n    totalJobUnit: \"\",\r\n    serviceCharge: \"\",\r\n    vat: \"\",\r\n    discount: \"0\",\r\n  };\r\n\r\n  valueChanged = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  valueSubmited = (e) => {\r\n    e.preventDefault();\r\n\r\n    let {\r\n      lpoItemName,\r\n      totalJobUnit,\r\n      serviceCharge,\r\n      vat,\r\n      discount,\r\n    } = this.state;\r\n\r\n    // If VAT Is Empty, Make  VAT (0)\r\n    if (vat === \"\") {\r\n      vat = \"0\";\r\n    }\r\n\r\n    const quotations = getStorageQuotations();\r\n\r\n    // Only Run If There Are Expences\r\n    if (quotations.length !== 0) {\r\n      // Calculate Base On Current Currency\r\n      let totalQuoteAmount;\r\n      if (JSON.parse(localStorage.getItem(\"currency\")).senior === \"Naira\") {\r\n        totalQuoteAmount = quotations\r\n          .map((quotation) =>\r\n            Big(quotation.itemUnit).times(quotation.itemPriceNaira).toFixed()\r\n          )\r\n          .reduce((acc, value) => Big(acc).plus(value).toFixed());\r\n      } else if (\r\n        JSON.parse(localStorage.getItem(\"currency\")).senior === \"Dollar\"\r\n      ) {\r\n        totalQuoteAmount = quotations\r\n          .map((quotation) =>\r\n            Big(quotation.itemUnit).times(quotation.itemPriceDollar).toFixed()\r\n          )\r\n          .reduce((acc, value) => Big(acc).plus(value).toFixed());\r\n      }\r\n\r\n      const proformaInvioce = {\r\n        totalQuoteAmount: Big(totalQuoteAmount).toFixed(),\r\n        lpoItemName,\r\n        totalJobUnit: Big(totalJobUnit).toFixed(),\r\n        serviceCharge: Big(serviceCharge).toFixed(),\r\n        vat: Big(vat).toFixed(),\r\n        discount,\r\n      };\r\n\r\n      this.props.addProformaInvoice(proformaInvioce);\r\n\r\n      // Report Button Click To Google Analytics\r\n      ReactGA.event({\r\n        category: \"Button\",\r\n        action: \"Clicked Calculate BTN\",\r\n        label: \"Form2\",\r\n      });\r\n\r\n      this.setState({\r\n        lpoItemName: \"\",\r\n        totalJobUnit: \"\",\r\n        serviceCharge: \"\",\r\n        vat: \"\",\r\n        discount: \"0\",\r\n      });\r\n      // Show Clear Invoice & Recalculate BTN\r\n      document.getElementById(\"clearInvoice\").style.display = \"block\";\r\n      document.getElementById(\"recalculateInvoice\").style.display = \"none\";\r\n      // Set recalculateInvoice in LS to false\r\n      localStorage.setItem(\"displayRecalculateBTN\", false);\r\n      // Set saveProformaInvoice in LS to true\r\n      localStorage.setItem(\"saveProformaInvoice\", true);\r\n      // Display saveProformaInvoice BTN\r\n      document.getElementById(\"saveProformaInvoice\").style.display = \"block\";\r\n      // Close Form\r\n      document.getElementById(\"generateInvoice\").click();\r\n    } else {\r\n      alert(\"You  Must Enter At Least 1 Expense In (STEP 1)\");\r\n    }\r\n  };\r\n\r\n  toggleExchangeRateForm = () => {\r\n    if (toggleStorageExchangeRateForm() === true) {\r\n      // Colapse Exchange Rate Form\r\n      document.getElementById(\"setExchangeRateBtn\").click();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      lpoItemName,\r\n      totalJobUnit,\r\n      serviceCharge,\r\n      vat,\r\n      discount,\r\n    } = this.state;\r\n\r\n    const {\r\n      placeholder1,\r\n      inputGroupText1,\r\n      placeholder2,\r\n      inputGroupText2,\r\n      placeholder3,\r\n      inputGroupText3,\r\n      placeholder4,\r\n      inputGroupText4,\r\n    } = this.props;\r\n    return (\r\n      <form\r\n        onSubmit={this.valueSubmited}\r\n        onFocus={this.toggleExchangeRateForm}\r\n        className=\"card card-header table-responsive\"\r\n      >\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"lpoItemName\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder4}\r\n            value={lpoItemName}\r\n            onChange={this.valueChanged}\r\n          />\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText4}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText3}</span>\r\n          </div>\r\n          <input\r\n            required\r\n            type=\"number\"\r\n            name=\"totalJobUnit\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder3}\r\n            value={totalJobUnit}\r\n            onChange={this.valueChanged}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <input\r\n            required\r\n            type=\"number\"\r\n            step=\"0.02\"\r\n            name=\"serviceCharge\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder2}\r\n            value={serviceCharge}\r\n            onChange={this.valueChanged}\r\n          />\r\n          <div className=\"input-group-append\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText2}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText1}</span>\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.1\"\r\n            name=\"vat\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder1}\r\n            value={vat}\r\n            onChange={this.valueChanged}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mx-auto my-3 pointerScale\">\r\n          <select\r\n            name=\"discount\"\r\n            value={discount}\r\n            onChange={this.valueChanged}\r\n            className=\"custom-select-sm bg-secondary text-white pointerScale\"\r\n            style={boxShadows}\r\n          >\r\n            <option defaultValue=\"0\" className=\"bg-success\">\r\n              Grant Discount On Bulk Job (Optional)\r\n            </option>\r\n            <option value=\"2\" style={{ backgroundColor: \"gray\" }}>\r\n              2% Discount\r\n            </option>\r\n            <option value=\"3\">3% Discount</option>\r\n            <option value=\"4\" style={{ backgroundColor: \"gray\" }}>\r\n              4% Discount\r\n            </option>\r\n            <option value=\"5\">5% Discount</option>\r\n            <option value=\"6\" style={{ backgroundColor: \"gray\" }}>\r\n              6% Discount\r\n            </option>\r\n            <option value=\"7\">7% Discount</option>\r\n            <option value=\"8\" style={{ backgroundColor: \"gray\" }}>\r\n              8% Discount\r\n            </option>\r\n            <option value=\"9\">9% Discount</option>\r\n            <option value=\"10\" style={{ backgroundColor: \"gray\" }}>\r\n              10% Discount\r\n            </option>\r\n            <option value=\"11\">11% Discount</option>\r\n            <option value=\"12\" style={{ backgroundColor: \"gray\" }}>\r\n              12% Discount\r\n            </option>\r\n            <option value=\"13\">13% Discount</option>\r\n            <option value=\"14\" style={{ backgroundColor: \"gray\" }}>\r\n              14% Discount\r\n            </option>\r\n            <option value=\"15\">15% Discount</option>\r\n            <option value=\"16\" style={{ backgroundColor: \"gray\" }}>\r\n              16% Discount\r\n            </option>\r\n            <option value=\"17\">17% Discount</option>\r\n            <option value=\"18\" style={{ backgroundColor: \"gray\" }}>\r\n              18% Discount\r\n            </option>\r\n            <option value=\"19\">19% Discount</option>\r\n            <option value=\"20\" style={{ backgroundColor: \"gray\" }}>\r\n              20% Discount\r\n            </option>\r\n            <option value=\"21\">21% Discount</option>\r\n            <option value=\"22\" style={{ backgroundColor: \"gray\" }}>\r\n              22% Discount\r\n            </option>\r\n            <option value=\"23\">23% Discount</option>\r\n            <option value=\"24\" style={{ backgroundColor: \"gray\" }}>\r\n              24% Discount\r\n            </option>\r\n            <option value=\"25\">25% Discount</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 mx-auto p-1\" style={boxShadows}>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Calculate\"\r\n              className=\"form-control btn btn-success btn-sm\"\r\n              style={boxShadows}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm2.propTypes = {\r\n  addProformaInvoice: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addProformaInvoice })(Form2);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExchangeRate, getExchangeRate } from \"../../actions/currencyTypes\";\r\nimport { getStorageExchangeRate } from \"../../actions/currencyStorageActions\";\r\nimport Form from \"./Form\";\r\nimport Form2 from \"./Form2\";\r\n\r\nimport classnames from \"classnames\";\r\nimport { getStorageQuotations } from \"../../actions/quotationStorageActions\";\r\nimport { getQuotations } from \"../../actions/quotationTypes\";\r\n\r\nimport Big from \"big.js\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass QuotesForm extends Component {\r\n  state = {\r\n    toggle1: false,\r\n    toggle2: false,\r\n    naira: \"\",\r\n    dollar: \"\",\r\n    exchangedNaira: \"\",\r\n    exchangedDollar: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getExchangeRate();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    const exchangeRate = getStorageExchangeRate();\r\n\r\n    this.setState({\r\n      exchangedNaira: exchangeRate.naira,\r\n      exchangedDollar: exchangeRate.dollar,\r\n    });\r\n  }\r\n\r\n  toggle1 = () => {\r\n    this.setState({ toggle1: !this.state.toggle1 });\r\n\r\n    // Manage Exchange Form Toggle\r\n    if (this.state.toggle1 === true) {\r\n      localStorage.setItem(\"toggle_exchange_rate_form\", JSON.stringify(false));\r\n    } else if (this.state.toggle1 === false) {\r\n      localStorage.setItem(\"toggle_exchange_rate_form\", JSON.stringify(true));\r\n    }\r\n  };\r\n\r\n  toggle2 = () => {\r\n    this.setState({ toggle2: !this.state.toggle2 });\r\n\r\n    // Manage Exchange Form Toggle\r\n    if (this.state.toggle2 === true) {\r\n      localStorage.setItem(\"toggle_form2\", JSON.stringify(false));\r\n    } else if (this.state.toggle2 === false) {\r\n      localStorage.setItem(\"toggle_form2\", JSON.stringify(true));\r\n    }\r\n  };\r\n\r\n  valueChanged = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitExchangeRate = (e) => {\r\n    e.preventDefault();\r\n\r\n    let { naira, dollar } = this.state;\r\n\r\n    // Get All Quotations From Storage\r\n    const getAllQuotation = getStorageQuotations();\r\n    let quotationExchangeRate;\r\n\r\n    // Ensure New ExchangeRate Value Isn't Zero (0)\r\n    if (Number(naira) <= 0 || Number(dollar) <= 0) {\r\n      alert(\"New Exchange Rate Value Must Be Greater Than 0\");\r\n    } else {\r\n      // Report Button Click To Google Analytics\r\n      ReactGA.event({\r\n        category: \"Button\",\r\n        action: \"Clicked CHANGE EXCHANGE RATE BTN\",\r\n        label: \"QuotesForm\",\r\n      });\r\n\r\n      let newExchangeRateRatio;\r\n      if (Number(naira) === Number(dollar)) {\r\n        newExchangeRateRatio = Number(naira) / Number(dollar);\r\n      } else if (Number(naira) > Number(dollar)) {\r\n        newExchangeRateRatio = Number(naira) / Number(dollar);\r\n      } else if (Number(dollar) > Number(naira)) {\r\n        newExchangeRateRatio = Number(dollar) / Number(naira);\r\n      }\r\n\r\n      // Prevent Execution If No Expenses\r\n      if (getAllQuotation.length !== 0) {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        let confirmBaseCurrency = confirm(\r\n          \"--------- RETAIN DOLLAR (USD) AS THE BASE CURRENCY --------- \\n \\n The Base Currency Would Be The Constant Currency In Which The 2nd Currency Would Be Recalculated From... \\n \\n --------- BASE CURRENCY DETAILS --------- \\n DOLLAR = OK \\n NAIRA = Cancel\"\r\n        );\r\n\r\n        // eslint-disable-next-line no-unused-vars\r\n        let baseCurrency;\r\n\r\n        if (confirmBaseCurrency) {\r\n          baseCurrency = \"Dollar\";\r\n\r\n          quotationExchangeRate = getAllQuotation.map((quotations) => ({\r\n            id: quotations.id,\r\n            itemName: quotations.itemName,\r\n            itemDescription: quotations.itemDescription,\r\n            itemUnit: quotations.itemUnit,\r\n            /*\r\n             **  If New Exchange Rate Ratio Is Higher Than Storage Exchange Rate Ratio,\r\n             **  Multiply The New Exchange Rate Ratio With Dollar To Get Naira Value.\r\n             **  This Occures If Dollar Value Is Greater Than Naira Value, Else Vise-Visa\r\n             */\r\n            itemPriceNaira:\r\n              dollar < naira\r\n                ? Big(quotations.itemPriceDollar)\r\n                    .times(newExchangeRateRatio)\r\n                    .toFixed()\r\n                : Big(quotations.itemPriceDollar)\r\n                    .div(newExchangeRateRatio)\r\n                    .toFixed(),\r\n            itemPriceDollar: quotations.itemPriceDollar,\r\n          }));\r\n        } else {\r\n          baseCurrency = \"Naira\";\r\n\r\n          quotationExchangeRate = getAllQuotation.map((quotations) => ({\r\n            id: quotations.id,\r\n            itemName: quotations.itemName,\r\n            itemDescription: quotations.itemDescription,\r\n            itemUnit: quotations.itemUnit,\r\n            itemPriceNaira: quotations.itemPriceNaira,\r\n            /*\r\n             **  If New Exchange Rate Ratio Is Higher Than Storage Exchange Rate Ratio,\r\n             **  Divide The New Exchange Rate Ratio With Naira To Get Dollar Value.\r\n             **  This Occures If Dollar Value Is Greater Than Naira Value, Else Vise-Visa\r\n             */\r\n            itemPriceDollar:\r\n              dollar < naira\r\n                ? Big(quotations.itemPriceNaira)\r\n                    .div(newExchangeRateRatio)\r\n                    .toFixed()\r\n                : Big(quotations.itemPriceNaira)\r\n                    .times(newExchangeRateRatio)\r\n                    .toFixed(),\r\n          }));\r\n        }\r\n        localStorage.setItem(\r\n          \"quotations\",\r\n          JSON.stringify(quotationExchangeRate)\r\n        );\r\n        this.props.getQuotations();\r\n\r\n        // Reveal the Recalculate BTN only when there is need for recalculation\r\n        document.getElementById(\"recalculateInvoice\").style.display = \"block\";\r\n        // Set displayRecalculateBTN in LS to true\r\n        localStorage.setItem(\"displayRecalculateBTN\", true);\r\n        // Hide saveProformaInvoice BTN\r\n        document.getElementById(\"saveProformaInvoice\").style.display = \"none\";\r\n        // Set saveProformaInvoice in LS to false\r\n        localStorage.setItem(\"saveProformaInvoice\", false);\r\n      }\r\n      this.setState({ naira: \"\", dollar: \"\" });\r\n      this.props.addExchangeRate({ naira, dollar });\r\n\r\n      toast.success(\r\n        `Exchange Rate Successfull Changed To $${dollar} : ₦${naira} `\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      toggle1,\r\n      toggle2,\r\n      naira,\r\n      dollar,\r\n      exchangedNaira,\r\n      exchangedDollar,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient(lightgray 5%, white 12%,gray 5%,  lightgray 60%)\",\r\n            transform: \"rotate(180deg)\",\r\n          }}\r\n        >\r\n          <br />\r\n        </div>\r\n        <div\r\n          className=\"container-fluid pt-3 pb-3 px-5 mb-1\"\r\n          // Main Background Styling\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient(lightgray 2%, gray 15%, lightgray 90%)\",\r\n            transform: \"rotate(180deg)\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"row\"\r\n            // Inner Background Styling\r\n            style={{\r\n              backgroundImage:\r\n                \"linear-gradient(lightgray 1%, white 30%, rgb(187, 202, 131) 100%)\",\r\n              transform: \"rotate(180deg)\",\r\n              paddingBottom: \"10px\",\r\n              boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\",\r\n            }}\r\n          >\r\n            <div className=\"col-sm-7\">\r\n              <h4 className=\"text-center text-secondary\">\r\n                <i className=\"fa fa-align-center fa-sm\" /> STEP 1\r\n              </h4>\r\n              <div>\r\n                <label>\r\n                  <b>Enter Quotation Details...</b>\r\n                </label>\r\n                {toggle1 ? (\r\n                  <form\r\n                    onSubmit={this.submitExchangeRate}\r\n                    id=\"form2\"\r\n                    className=\"input-group mb-3\"\r\n                    style={boxShadows}\r\n                  >\r\n                    <div className=\"input-group-append\">\r\n                      <span className=\"input-group-text bg-dark text-white\">\r\n                        ₦{exchangedNaira}\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.02\"\r\n                      name=\"naira\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Nigerian Naira (NGN)\"\r\n                      value={naira}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                    <button className=\"btn btn-sm btn-info\" style={boxShadows}>\r\n                      CHANGE EXCHANGE RATE\r\n                    </button>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.02\"\r\n                      name=\"dollar\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"US Dollar (USD)\"\r\n                      value={dollar}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <span className=\"input-group-text bg-dark text-white\">\r\n                        ${exchangedDollar}\r\n                      </span>\r\n                    </div>\r\n                  </form>\r\n                ) : null}\r\n                <div\r\n                  onClick={this.toggle1}\r\n                  id=\"setExchangeRateBtn\"\r\n                  className=\"btn btn-outline-primary btn-sm float-right mb-2\"\r\n                  style={boxShadows}\r\n                >\r\n                  Set Exchange Rate\r\n                </div>\r\n              </div>\r\n              <Form\r\n                placeholder1=\"e.g. Graphics Design\"\r\n                inputGroupText1=\"Item Name\"\r\n                placeholder2=\"e.g. Designing Flyer Artwork Based On Spec\"\r\n                inputGroupText2=\"Description\"\r\n                placeholder4=\"(1 Unit is the default value)\"\r\n                inputGroupText4=\"Item Unit\"\r\n              />\r\n            </div>\r\n            <div className=\"col-sm-5 mt-4 pt-2\">\r\n              <h4 className=\"text-center text-secondary\">\r\n                <i className=\"fa fa-align-center fa-sm\" /> STEP 2\r\n              </h4>\r\n              <button\r\n                id=\"generateInvoice\"\r\n                className={classnames(\"btn form-control\", {\r\n                  \"btn-secondary\": !this.state.toggle2,\r\n                  \"btn-outline-success\": this.state.toggle2,\r\n                })}\r\n                style={boxShadows}\r\n                onClick={this.toggle2}\r\n              >\r\n                Generate Invoice\r\n              </button>\r\n              {toggle2 ? (\r\n                <div className=\"mt-1 col-sm-12\">\r\n                  <Form2\r\n                    placeholder1=\"% (0 is the default value)\"\r\n                    inputGroupText1=\"VAT (in %)\"\r\n                    placeholder2=\"e.g. 25%\"\r\n                    inputGroupText2=\"Service Charge (in %)\"\r\n                    placeholder3=\"Total Job (Unit Number)\"\r\n                    inputGroupText3=\"(000's)\"\r\n                    placeholder4=\"Job Name\"\r\n                    inputGroupText4=\"LPO Item Name\"\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient(lightgray 5%, white 12%,gray 5%,  lightgray 60%)\",\r\n            marginTop: \"-2px\",\r\n            marginBottom: \"7px\",\r\n          }}\r\n        >\r\n          <br />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nQuotesForm.propTypes = {\r\n  addExchangeRate: PropTypes.func.isRequired,\r\n  getExchangeRate: PropTypes.func.isRequired,\r\n  getQuotations: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exchangeRate: state.quotation.exchangeRate,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addExchangeRate,\r\n  getExchangeRate,\r\n  getQuotations,\r\n})(QuotesForm);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getQuotations,\r\n  deleteQuotation,\r\n  clearAllQuotations,\r\n  addProformaInvoice,\r\n} from \"../../actions/quotationTypes\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { JSnumberToWordProcessor } from \"../JSnumberToWordProcessor/JSnumberToWordProcessor\";\r\nimport { getStorageQuotations } from \"../../actions/quotationStorageActions\";\r\nimport { getStorageCurrency } from \"../../actions/currencyStorageActions\";\r\n\r\nimport Big from \"big.js\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Quotes extends Component {\r\n  state = {\r\n    storageCurrency: {},\r\n\r\n    totalPrice: \"\",\r\n    totalPrice0: \"\",\r\n    totalPrice1: \"\",\r\n    quotes: [],\r\n  };\r\n  componentDidMount() {\r\n    this.props.getQuotations();\r\n\r\n    // Hide Clear Btn If No Expenses\r\n    if (JSON.parse(localStorage.getItem(\"quotations\")).length === 0) {\r\n      document.getElementById(\"clearAllInvoice\").style.display = \"none\";\r\n    } else {\r\n      document.getElementById(\"clearAllInvoice\").style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    const storageCurrency = getStorageCurrency();\r\n\r\n    const { quotations } = props;\r\n\r\n    if (quotations !== undefined) {\r\n      const allTotalPriceArray = [];\r\n\r\n      const quotes = quotations.map((quotation) => {\r\n        const itemId = quotation.id;\r\n        const itemName = quotation.itemName;\r\n        const itemDescription = quotation.itemDescription;\r\n        const itemUnit = quotation.itemUnit;\r\n        const itemUnit0 = JSnumberToWordProcessor(String(itemUnit))[0];\r\n        // const itemPrice = quotation.itemPriceNaira;\r\n        let itemPrice;\r\n        if (JSON.parse(localStorage.getItem(\"currency\")).senior === \"Naira\") {\r\n          itemPrice = quotation.itemPriceNaira;\r\n        } else if (\r\n          JSON.parse(localStorage.getItem(\"currency\")).senior === \"Dollar\"\r\n        ) {\r\n          itemPrice = quotation.itemPriceDollar;\r\n        }\r\n        const itemPrice0 = JSnumberToWordProcessor(String(itemPrice))[0];\r\n        let itemPrice1 = JSnumberToWordProcessor(String(itemPrice))[1];\r\n\r\n        if (itemPrice1 === undefined) {\r\n          itemPrice1 = JSnumberToWordProcessor(String(\"0.00\"))[1];\r\n        }\r\n\r\n        const itemPriceTotal = Big(itemUnit).times(itemPrice).toFixed();\r\n        const itemPriceTotalJSNum = JSnumberToWordProcessor(\r\n          String(itemPriceTotal)\r\n        );\r\n        const itemPriceTotal0 = itemPriceTotalJSNum[0];\r\n        let itemPriceTotal1;\r\n        if (itemPriceTotalJSNum.length === 2) {\r\n          itemPriceTotal1 = itemPriceTotalJSNum[1];\r\n        } else {\r\n          itemPriceTotal1 = JSnumberToWordProcessor(String(\"0.00\"))[1];\r\n        }\r\n\r\n        allTotalPriceArray.push(itemPriceTotal);\r\n\r\n        return {\r\n          itemId,\r\n          itemName,\r\n          itemDescription,\r\n          itemUnit,\r\n          itemUnit0,\r\n          itemPrice,\r\n          itemPrice0,\r\n          itemPrice1,\r\n          itemPriceTotal,\r\n          itemPriceTotal0,\r\n          itemPriceTotal1,\r\n        };\r\n      });\r\n\r\n      // Calculate Total Price\r\n      let totalPrice = \"0.00\";\r\n      let totalPrice0 = JSnumberToWordProcessor(String(totalPrice))[0];\r\n      let totalPrice1 = JSnumberToWordProcessor(String(totalPrice))[1];\r\n\r\n      if (props.quotations.length !== 0) {\r\n        let reduceAllTotalPriceArray = allTotalPriceArray.reduce((acc, arr) => {\r\n          return Big(acc).plus(arr).toFixed(2);\r\n        });\r\n\r\n        totalPrice = reduceAllTotalPriceArray;\r\n        totalPrice0 = JSnumberToWordProcessor(String(totalPrice))[0];\r\n        // Only Change totalPrice Value If reduceAllTotalPriceArray Has Decimal Number\r\n        if (JSnumberToWordProcessor(String(totalPrice)).length === 2) {\r\n          totalPrice1 = JSnumberToWordProcessor(String(totalPrice))[1];\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        storageCurrency,\r\n\r\n        totalPrice,\r\n        totalPrice0,\r\n        totalPrice1,\r\n\r\n        quotes,\r\n      });\r\n    }\r\n  }\r\n\r\n  resetQuotes = () => {\r\n    const nullInvoice = {\r\n      totalQuoteAmount: \"0\",\r\n      lpoItemName: \"\",\r\n      totalJobUnit: \"0\",\r\n      serviceCharge: \"0\",\r\n      vat: \"0\",\r\n      discount: \"0\",\r\n    };\r\n\r\n    // Clear Expenses & Invoice\r\n    this.props.addProformaInvoice(nullInvoice);\r\n    this.props.clearAllQuotations();\r\n\r\n    // Hide clearAllInvoice, Recalculate  & Clear Btn Under Invoice\r\n    document.getElementById(\"clearInvoice\").style.display = \"none\";\r\n    document.getElementById(\"clearAllInvoice\").style.display = \"none\";\r\n    document.getElementById(\"recalculateInvoice\").style.display = \"none\";\r\n    // Hide saveProformaInvoice BTN\r\n    document.getElementById(\"saveProformaInvoice\").style.display = \"none\";\r\n    // Set recalculateInvoice in LS to false\r\n    localStorage.setItem(\"displayRecalculateBTN\", false);\r\n    // Set saveProformaInvoice in LS to false\r\n    localStorage.setItem(\"saveProformaInvoice\", false);\r\n  };\r\n\r\n  clearAllInvoice = () => {\r\n    const confirmDelete = window.confirm(\r\n      \"Confirm Delete Of All Expenses With Proforma Invoice\"\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      this.resetQuotes();\r\n\r\n      toast.warning(`Successfully Cleared All Expenses With Proforma Invoice`);\r\n    }\r\n  };\r\n\r\n  deleteQuote = (id) => {\r\n    const confirmDelete = window.confirm(\"Confirm Delete Of Expense\");\r\n    // Dispatch\r\n    if (confirmDelete) {\r\n      this.props.deleteQuotation(id);\r\n\r\n      const quotationsLength = getStorageQuotations();\r\n\r\n      if (quotationsLength.length === 0) {\r\n        this.resetQuotes();\r\n      }\r\n      // Reveal the Recalculate BTN only when there is need for recalculation\r\n      document.getElementById(\"recalculateInvoice\").style.display = \"block\";\r\n      // Set recalculateInvoice in LS to false\r\n      localStorage.setItem(\"displayRecalculateBTN\", true);\r\n      // Hide saveProformaInvoice BTN\r\n      document.getElementById(\"saveProformaInvoice\").style.display = \"none\";\r\n      // Set saveProformaInvoice in LS to false\r\n      localStorage.setItem(\"saveProformaInvoice\", false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      storageCurrency,\r\n      totalPrice,\r\n      totalPrice0,\r\n      totalPrice1,\r\n      quotes,\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <table\r\n          className=\"table table-striped table-bordered text-center\"\r\n          // Use This Style Props Without Border Instead of .table-responsive\r\n          style={{\r\n            display: \"block\",\r\n            width: \"100%\",\r\n            overflowX: \"auto\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          <thead className=\"thead-inverse\">\r\n            <tr className=\"table-borderless text-center\">\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"firebrick\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                EXPENSES\r\n              </th>\r\n              <th></th>\r\n              <th></th>\r\n              <th></th>\r\n              <th\r\n                id=\"clearAllInvoice\"\r\n                className=\"text-center btn btn-sm btn-danger float-right\"\r\n                style={boxShadows}\r\n                onClick={this.clearAllInvoice}\r\n              >\r\n                Clear All\r\n              </th>\r\n            </tr>\r\n            <tr className=\"table-primary\">\r\n              <th>Item Name</th>\r\n              <th>Description</th>\r\n              <th>Unit</th>\r\n              <th>Unit Price</th>\r\n              <th>Total Price</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {quotes.map((quotation) => (\r\n              <tr key={quotation.itemId}>\r\n                <td>{quotation.itemName}</td>\r\n                <td>{quotation.itemDescription}</td>\r\n                <td>{quotation.itemUnit0.displayNum}</td>\r\n                <td>\r\n                  {storageCurrency.sign}\r\n                  {quotation.itemPrice0.displayNum + \".\"}\r\n                  <small>{quotation.itemPrice1.newDecimalNum}</small>{\" \"}\r\n                </td>\r\n                <td>\r\n                  {storageCurrency.sign}\r\n                  {quotation.itemPriceTotal0.displayNum + \".\"}\r\n                  <small>{quotation.itemPriceTotal1.newDecimalNum}</small>{\" \"}\r\n                </td>\r\n                <td>\r\n                  <Link to={`/update/${quotation.itemId}`}>\r\n                    <i\r\n                      className=\"fa fa-pencil-alt text-success editDeletePointerScale\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />{\" \"}\r\n                  </Link>\r\n                  {\"\"}\r\n                  <i\r\n                    className=\"fa fa-times text-danger editDeletePointerScale\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={this.deleteQuote.bind(this, quotation.itemId)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            {/* ......... tableLinnerGraphichs Top......... */}\r\n            <tr className=\"table-sm\">\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n            {/* ......... tableLinnerGraphichs Bottom......... */}\r\n            <tr className=\"h5 text-secondary\">\r\n              <td className=\"text-primary pointerScale\" style={boxShadows}>\r\n                TOTAL\r\n              </td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              {Number(totalPrice) === 0 ? (\r\n                <td className=\"text-success pointerScale\" style={boxShadows}>\r\n                  {storageCurrency.sign}\r\n                  {totalPrice0.displayNum + \".\"}\r\n                  <small>{totalPrice1.newDecimalNum}</small>{\" \"}\r\n                </td>\r\n              ) : (\r\n                <td className=\"text-danger pointerScale\" style={boxShadows}>\r\n                  {storageCurrency.sign}\r\n                  {totalPrice0.displayNum + \".\"}\r\n                  <small>{totalPrice1.newDecimalNum}</small>{\" \"}\r\n                </td>\r\n              )}\r\n            </tr>\r\n            {/* ......... tableLinnerGraphichs Top......... */}\r\n            <tr className=\"table-sm\">\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n            {/* ......... tableLinnerGraphichs Bottom......... */}\r\n          </tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nQuotes.propType = {\r\n  quotations: PropTypes.array.isRequired,\r\n  getQuotations: PropTypes.func.isRequired,\r\n  deleteQuotation: PropTypes.func.isRequired,\r\n  clearAllQuotations: PropTypes.func.isRequired,\r\n  addProformaInvoice: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quotations: state.quotation.quotations,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuotations,\r\n  deleteQuotation,\r\n  clearAllQuotations,\r\n  addProformaInvoice,\r\n})(Quotes);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n","export const savedLPOsStateStorage = () => {\r\n  const lattestSavedLPOs = JSON.parse(\r\n    localStorage.getItem(\"Saved Proforma Invoice\")\r\n  );\r\n\r\n  return lattestSavedLPOs;\r\n};\r\n\r\nexport const pushUploadedLpo2Storage = (invoice) => {\r\n  localStorage.setItem(\"toggle_exchange_rate_form\", JSON.stringify(false));\r\n  localStorage.setItem(\"toggle_form2\", JSON.stringify(false));\r\n  localStorage.setItem(\"currency\", JSON.stringify(invoice.currency));\r\n  localStorage.setItem(\"exchange_rate\", JSON.stringify(invoice.exchange_rate));\r\n  localStorage.setItem(\r\n    \"proforma_invoice\",\r\n    JSON.stringify(invoice.proforma_invoice)\r\n  );\r\n  localStorage.setItem(\"quotations\", JSON.stringify(invoice.quotations));\r\n  localStorage.setItem(\r\n    \"quotations_length\",\r\n    JSON.stringify(invoice.quotations_length)\r\n  );\r\n  localStorage.setItem(\"displayRecalculateBTN\", JSON.stringify(false));\r\n  localStorage.setItem(\"saveProformaInvoice\", JSON.stringify(false));\r\n};\r\n\r\nexport const delete4rmStorageSavedLpo = (LPOs) => {\r\n  const defaultSavedProformaInvoice = JSON.parse(\r\n    localStorage.getItem(\"Saved Proforma Invoice\")\r\n  );\r\n\r\n  const newlySavedProformaInvoice = defaultSavedProformaInvoice.filter(\r\n    (lpoS) => lpoS.proforma_invoice.lpoItemName !== LPOs.lpoItemName\r\n  );\r\n\r\n  localStorage.setItem(\r\n    \"Saved Proforma Invoice\",\r\n    JSON.stringify(newlySavedProformaInvoice)\r\n  );\r\n\r\n  return newlySavedProformaInvoice;\r\n};\r\n","import { SAVE_LPO_STATE, DELETE_LPO } from \"./types\";\r\nimport {\r\n  savedLPOsStateStorage,\r\n  delete4rmStorageSavedLpo,\r\n} from \"./lpoStorageActions\";\r\n\r\nexport const savedLPOsState = () => async (dispatch) => {\r\n  // Populate LS With New State\r\n  const LPOsState = savedLPOsStateStorage();\r\n\r\n  // Push  Selected Invoice To State\r\n  dispatch({\r\n    type: SAVE_LPO_STATE,\r\n    payload: LPOsState,\r\n  });\r\n};\r\n\r\nexport const deleteLpo = (LPOs) => async (dispatch) => {\r\n  // Construct New LPOs & Populate To LS\r\n  const newlySavedProformaInvoice = delete4rmStorageSavedLpo(LPOs);\r\n  dispatch({\r\n    type: DELETE_LPO,\r\n    payload: newlySavedProformaInvoice,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProformaInvoice,\r\n  addProformaInvoice,\r\n} from \"../../actions/quotationTypes\";\r\nimport { savedLPOsState } from \"../../actions/lpoTypes\";\r\n\r\nimport { JSnumberToWordProcessor } from \"../JSnumberToWordProcessor/JSnumberToWordProcessor\";\r\nimport {\r\n  getStorageQuotations,\r\n  getStorageProformaInvoice,\r\n} from \"../../actions/quotationStorageActions\";\r\nimport { getCurrency } from \"../../actions/currencyTypes\";\r\nimport { getStorageCurrency } from \"../../actions/currencyStorageActions\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport Big from \"big.js\";\r\n\r\nimport classnames from \"classnames\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass QuotesCard extends Component {\r\n  state = {\r\n    proforma: \"1\",\r\n    storageCurrency: {},\r\n\r\n    lpoItemName: \"\",\r\n\r\n    totalJobUnit: \"\",\r\n    totalJobUnit0: {},\r\n    serviceCharge: \"\",\r\n    serviceCharge0: {},\r\n    serviceCharge1: {},\r\n    totalQuoteAmount: \"\",\r\n    totalQuoteAmount0: {},\r\n    totalQuoteAmount1: {},\r\n    discount: \"\",\r\n    vat: \"\",\r\n    vat0: {},\r\n    vat1: {},\r\n    profit: \"\",\r\n    profit0: {},\r\n    profit1: {},\r\n    totalValue: \"\",\r\n    totalValue0: {},\r\n    totalValue1: {},\r\n    discountPayable: \"\",\r\n    discountPayable0: {},\r\n    discountPayable1: {},\r\n    vatPayable: \"\",\r\n    vatPayable0: {},\r\n    vatPayable1: {},\r\n    totalPayableWithVat: \"\",\r\n    totalPayableWithVat0: {},\r\n    totalPayableWithVat1: {},\r\n    unitDiscount: \"\",\r\n    unitDiscount0: {},\r\n    unitDiscount1: {},\r\n    unitProfit: \"\",\r\n    unitProfit0: {},\r\n    unitProfit1: {},\r\n    unitPrice: \"\",\r\n    unitPrice0: {},\r\n    unitPrice1: {},\r\n    unit1000Price: \"\",\r\n    unit1000Price0: {},\r\n    unit1000Price1: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Reveal the Recalculate BTN only when there is need for recalculation\r\n    const displayRecalculateBTN = JSON.parse(\r\n      localStorage.getItem(\"displayRecalculateBTN\")\r\n    );\r\n    // Reveal the saveProformaInvoice BTN only when there is no need for recalculation\r\n    const saveProformaInvoice = JSON.parse(\r\n      localStorage.getItem(\"saveProformaInvoice\")\r\n    );\r\n\r\n    if (displayRecalculateBTN === false) {\r\n      document.getElementById(\"recalculateInvoice\").style.display = \"none\";\r\n    }\r\n\r\n    if (saveProformaInvoice === false) {\r\n      document.getElementById(\"saveProformaInvoice\").style.display = \"none\";\r\n    }\r\n\r\n    this.props.getProformaInvoice();\r\n    this.props.getCurrency();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    // Reveal the Recalculate BTN only when there is need for recalculation\r\n    const displayRecalculateBTN = JSON.parse(\r\n      localStorage.getItem(\"displayRecalculateBTN\")\r\n    );\r\n    // Reveal the saveProformaInvoice BTN only when there is no need for recalculation\r\n    const saveProformaInvoice = JSON.parse(\r\n      localStorage.getItem(\"saveProformaInvoice\")\r\n    );\r\n\r\n    if (displayRecalculateBTN === false) {\r\n      document.getElementById(\"recalculateInvoice\").style.display = \"none\";\r\n    }\r\n\r\n    if (saveProformaInvoice === false) {\r\n      document.getElementById(\"saveProformaInvoice\").style.display = \"none\";\r\n    }\r\n\r\n    const storageCurrency = getStorageCurrency();\r\n\r\n    // Hide Clear BTN\r\n    if (props.proformaInvoice.totalQuoteAmount === 0) {\r\n      document.getElementById(\"clearInvoice\").style.display = \"none\";\r\n    } else {\r\n      document.getElementById(\"clearInvoice\").style.display = \"block\";\r\n    }\r\n\r\n    const totalJobUnit = Big(props.proformaInvoice.totalJobUnit).toFixed();\r\n    const totalJobUnit0 = JSnumberToWordProcessor(String(totalJobUnit))[0];\r\n\r\n    const serviceCharge = Big(props.proformaInvoice.serviceCharge).toFixed(1);\r\n    const serviceCharge0 = JSnumberToWordProcessor(serviceCharge)[0];\r\n    const serviceCharge1 = JSnumberToWordProcessor(serviceCharge)[1];\r\n\r\n    const totalQuoteAmount = Big(\r\n      props.proformaInvoice.totalQuoteAmount\r\n    ).toFixed(5);\r\n    const totalQuoteAmount0 = JSnumberToWordProcessor(totalQuoteAmount)[0];\r\n    const totalQuoteAmount1 = JSnumberToWordProcessor(totalQuoteAmount)[1];\r\n\r\n    const discount = Big(props.proformaInvoice.discount).toFixed();\r\n\r\n    const vat = Big(props.proformaInvoice.vat).toFixed(1);\r\n    const vat0 = JSnumberToWordProcessor(vat)[0];\r\n    const vat1 = JSnumberToWordProcessor(vat)[1];\r\n\r\n    /* ... FORMULA CALCULATIONS ... */\r\n\r\n    // Prevent error as 0 isn't divisible\r\n    let initProfit;\r\n    if (props.proformaInvoice.serviceCharge === \"0\") {\r\n      initProfit = \"0.00\";\r\n    } else {\r\n      initProfit = Big(props.proformaInvoice.serviceCharge)\r\n        .div(100)\r\n        .times(props.proformaInvoice.totalQuoteAmount)\r\n        .toFixed(5);\r\n    }\r\n\r\n    // Prevent error as 0 isn't divisible\r\n    let discountPayable;\r\n    if (props.proformaInvoice.discount === \"0\") {\r\n      discountPayable = \"0.00\";\r\n    } else {\r\n      discountPayable = Big(props.proformaInvoice.discount)\r\n        .div(100)\r\n        .times(initProfit)\r\n        .toFixed(5);\r\n    }\r\n    const discountPayable0 = JSnumberToWordProcessor(discountPayable)[0];\r\n    const discountPayable1 = JSnumberToWordProcessor(discountPayable)[1];\r\n\r\n    const profit = Big(initProfit).minus(discountPayable).toFixed(5);\r\n    const profit0 = JSnumberToWordProcessor(profit)[0];\r\n    const profit1 = JSnumberToWordProcessor(profit)[1];\r\n\r\n    const totalValue = Big(props.proformaInvoice.totalQuoteAmount)\r\n      .plus(profit)\r\n      .plus(discountPayable)\r\n      .toFixed(5);\r\n    const totalValue0 = JSnumberToWordProcessor(totalValue)[0];\r\n    const totalValue1 = JSnumberToWordProcessor(totalValue)[1];\r\n\r\n    const totalValueMinusDiscount = Big(totalValue)\r\n      .minus(discountPayable)\r\n      .toFixed(5);\r\n\r\n    // Prevent error as 0 isn't divisible\r\n    let vatPayable;\r\n    if (props.proformaInvoice.vat === \"0\") {\r\n      vatPayable = \"0.00\";\r\n    } else {\r\n      vatPayable = Big(props.proformaInvoice.vat)\r\n        .div(100)\r\n        .times(totalValueMinusDiscount)\r\n        .toFixed(5);\r\n    }\r\n    const vatPayable0 = JSnumberToWordProcessor(vatPayable)[0];\r\n    const vatPayable1 = JSnumberToWordProcessor(vatPayable)[1];\r\n\r\n    const totalPayableWithVat = Big(totalValue)\r\n      .minus(discountPayable)\r\n      .plus(vatPayable)\r\n      .toFixed(5);\r\n    const totalPayableWithVat0 = JSnumberToWordProcessor(\r\n      totalPayableWithVat\r\n    )[0];\r\n    const totalPayableWithVat1 = JSnumberToWordProcessor(\r\n      totalPayableWithVat\r\n    )[1];\r\n\r\n    let unitDiscount;\r\n    // if (profit === \"0.00000\" && totalJobUnit === \"0\") {\r\n    if (Number(profit) === 0 && Number(totalJobUnit) === 0) {\r\n      unitDiscount = \"0.00\";\r\n    } else {\r\n      // Prevent error as 0 isn't divisible\r\n      if (props.proformaInvoice.totalJobUnit === \"0\") {\r\n        unitDiscount = \"0.00\";\r\n      } else {\r\n        unitDiscount = Big(discountPayable)\r\n          .div(props.proformaInvoice.totalJobUnit)\r\n          .toFixed(5);\r\n      }\r\n    }\r\n\r\n    if (isNaN(unitDiscount) || unitDiscount === undefined) {\r\n      unitDiscount = \"0.00\";\r\n    }\r\n    const unitDiscount0 = JSnumberToWordProcessor(unitDiscount)[0];\r\n    const unitDiscount1 = JSnumberToWordProcessor(unitDiscount)[1];\r\n\r\n    let unitProfit;\r\n    if (Number(profit) === 0 && Number(totalJobUnit) === 0) {\r\n      unitProfit = \"0.00\";\r\n    } else {\r\n      // Prevent error as 0 isn't divisible\r\n      if (props.proformaInvoice.totalJobUnit === \"0\") {\r\n        unitProfit = \"0.00\";\r\n      } else {\r\n        unitProfit = Big(profit)\r\n          .div(props.proformaInvoice.totalJobUnit)\r\n          .toFixed(5);\r\n      }\r\n    }\r\n\r\n    if (isNaN(unitProfit)) {\r\n      unitProfit = \"0.00\";\r\n    }\r\n    const unitProfit0 = JSnumberToWordProcessor(unitProfit)[0];\r\n    const unitProfit1 = JSnumberToWordProcessor(unitProfit)[1];\r\n\r\n    let unitPrice;\r\n    if (Number(totalPayableWithVat) === 0 && Number(totalJobUnit) === 0) {\r\n      unitPrice = \"0.00\";\r\n    } else {\r\n      // Prevent error as 0 isn't divisible\r\n      if (props.proformaInvoice.totalJobUnit === \"0\") {\r\n        unitPrice = \"0.00\";\r\n      } else {\r\n        unitPrice = Big(totalPayableWithVat)\r\n          .div(props.proformaInvoice.totalJobUnit)\r\n          .toFixed(5);\r\n      }\r\n    }\r\n\r\n    if (isNaN(unitPrice)) {\r\n      unitPrice = \"0.00\";\r\n    }\r\n    const unitPrice0 = JSnumberToWordProcessor(unitPrice)[0];\r\n    const unitPrice1 = JSnumberToWordProcessor(unitPrice)[1];\r\n\r\n    let unit1000Price;\r\n    if (Number(totalPayableWithVat) === 0 && Number(totalJobUnit) === 0) {\r\n      unit1000Price = \"0.00\";\r\n    } else {\r\n      // Prevent error as 0 isn't divisible\r\n      if (props.proformaInvoice.totalJobUnit === \"0\") {\r\n        unit1000Price = \"0.00\";\r\n      } else {\r\n        unit1000Price = Big(totalPayableWithVat)\r\n          .div(props.proformaInvoice.totalJobUnit)\r\n          .times(1000)\r\n          .toFixed(5);\r\n      }\r\n    }\r\n\r\n    if (isNaN(unit1000Price)) {\r\n      unit1000Price = \"0.00\";\r\n    }\r\n    const unit1000Price0 = JSnumberToWordProcessor(unit1000Price)[0];\r\n    const unit1000Price1 = JSnumberToWordProcessor(unit1000Price)[1];\r\n\r\n    this.setState({\r\n      storageCurrency,\r\n\r\n      lpoItemName: props.proformaInvoice.lpoItemName,\r\n\r\n      totalJobUnit,\r\n      totalJobUnit0,\r\n      serviceCharge,\r\n      serviceCharge0,\r\n      serviceCharge1,\r\n      totalQuoteAmount,\r\n      totalQuoteAmount0,\r\n      totalQuoteAmount1,\r\n      discount,\r\n      vat,\r\n      vat0,\r\n      vat1,\r\n      profit,\r\n      profit0,\r\n      profit1,\r\n      totalValue,\r\n      totalValue0,\r\n      totalValue1,\r\n      discountPayable,\r\n      discountPayable0,\r\n      discountPayable1,\r\n      vatPayable,\r\n      vatPayable0,\r\n      vatPayable1,\r\n      totalPayableWithVat,\r\n      totalPayableWithVat0,\r\n      totalPayableWithVat1,\r\n      unitDiscount,\r\n      unitDiscount0,\r\n      unitDiscount1,\r\n      unitProfit,\r\n      unitProfit0,\r\n      unitProfit1,\r\n      unitPrice,\r\n      unitPrice0,\r\n      unitPrice1,\r\n      unit1000Price,\r\n      unit1000Price0,\r\n      unit1000Price1,\r\n    });\r\n  }\r\n\r\n  proforma = () => {\r\n    this.setState({ proforma: document.getElementById(\"sel1\").value });\r\n  };\r\n\r\n  clearProformaInvoice = () => {\r\n    if (\r\n      JSON.parse(localStorage.getItem(\"proforma_invoice\")).serviceCharge === \"0\"\r\n    ) {\r\n      alert(\"You Can't Clear An Already Emptied Invoice\");\r\n    } else {\r\n      const confirmDelete = window.confirm(\r\n        \"Confirm Delete Of Proforma Invoice\"\r\n      );\r\n      const nullInvoice = {\r\n        totalQuoteAmount: \"0\",\r\n        lpoItemName: \"\",\r\n        totalJobUnit: \"0\",\r\n        serviceCharge: \"0\",\r\n        vat: \"0\",\r\n        discount: \"0\",\r\n      };\r\n\r\n      if (confirmDelete) {\r\n        this.props.addProformaInvoice(nullInvoice);\r\n\r\n        document.getElementById(\"clearInvoice\").style.display = \"none\";\r\n        document.getElementById(\"recalculateInvoice\").style.display = \"none\";\r\n        // Set recalculateInvoice in LS to false\r\n        localStorage.setItem(\"displayRecalculateBTN\", false);\r\n        // Set saveProformaInvoice in LS to false\r\n        localStorage.setItem(\"saveProformaInvoice\", false);\r\n        // Hide saveProformaInvoice BTN\r\n        document.getElementById(\"saveProformaInvoice\").style.display = \"none\";\r\n\r\n        toast.warning(`Proforma Invoice was Cleared Successfully`);\r\n      }\r\n    }\r\n  };\r\n\r\n  recalculateInvoice = () => {\r\n    const quotations = getStorageQuotations();\r\n\r\n    const storageProformaInvoice = getStorageProformaInvoice();\r\n\r\n    const {\r\n      lpoItemName,\r\n      totalJobUnit,\r\n      serviceCharge,\r\n      vat,\r\n      discount,\r\n    } = storageProformaInvoice;\r\n\r\n    // Only Run If There Are Expences\r\n    if (quotations.length !== 0) {\r\n      // Only Run If There Is An Invoice\r\n      if (serviceCharge !== \"0\") {\r\n        let totalQuoteAmount;\r\n        if (JSON.parse(localStorage.getItem(\"currency\")).senior === \"Naira\") {\r\n          totalQuoteAmount = quotations\r\n            .map((quotation) =>\r\n              Big(quotation.itemUnit).times(quotation.itemPriceNaira)\r\n            )\r\n            .reduce((acc, value) => Big(acc).plus(value).toFixed());\r\n        } else if (\r\n          JSON.parse(localStorage.getItem(\"currency\")).senior === \"Dollar\"\r\n        ) {\r\n          totalQuoteAmount = quotations\r\n            .map((quotation) =>\r\n              Big(quotation.itemUnit).times(quotation.itemPriceDollar)\r\n            )\r\n            .reduce((acc, value) => Big(acc).plus(value).toFixed());\r\n        }\r\n\r\n        const proformaInvioce = {\r\n          totalQuoteAmount: Big(totalQuoteAmount).toFixed(),\r\n          lpoItemName,\r\n          totalJobUnit: Big(totalJobUnit).toFixed(),\r\n          serviceCharge: Big(serviceCharge).toFixed(),\r\n          vat: Big(vat).toFixed(),\r\n          discount: Big(discount).toFixed(),\r\n        };\r\n\r\n        this.props.addProformaInvoice(proformaInvioce);\r\n\r\n        // Show Clear Invoice\r\n        document.getElementById(\"clearInvoice\").style.display = \"block\";\r\n\r\n        // Reveal the Recalculate BTN only when there is need for recalculation\r\n        document.getElementById(\"recalculateInvoice\").style.display = \"none\";\r\n        // Set recalculateInvoice in LS to false\r\n        localStorage.setItem(\"displayRecalculateBTN\", false);\r\n        // Set saveProformaInvoice in LS to false\r\n        localStorage.setItem(\"saveProformaInvoice\", true);\r\n        // Display saveProformaInvoice BTN\r\n        document.getElementById(\"saveProformaInvoice\").style.display = \"block\";\r\n\r\n        toast.info(`Recalculated ${lpoItemName}'s Proforma Invoice `);\r\n\r\n        // Report Button Click To Google Analytics\r\n        ReactGA.event({\r\n          category: \"Button\",\r\n          action: \"Clicked Recalculate BTN\",\r\n          label: \"QuotesCard\",\r\n        });\r\n      } else {\r\n        alert(\"You  Must Fill In Invoice Details In (STEP 2)\");\r\n      }\r\n    } else {\r\n      alert(\"You  Must Enter At Least 1 Expense In (STEP 1)\");\r\n    }\r\n  };\r\n\r\n  saveProformaInvoice = () => {\r\n    // Get Saved Proforma Invoice From LS\r\n    const getSavedProformaInvoiceInStorage = JSON.parse(\r\n      localStorage.getItem(\"Saved Proforma Invoice\")\r\n    );\r\n\r\n    // Get Current Proforma Invoice From LS\r\n    const toggle_exchange_rate_form = JSON.parse(\r\n      localStorage.getItem(\"toggle_exchange_rate_form\")\r\n    );\r\n    const toggle_form2 = JSON.parse(localStorage.getItem(\"toggle_form2\"));\r\n    const currency = JSON.parse(localStorage.getItem(\"currency\"));\r\n    const exchange_rate = JSON.parse(localStorage.getItem(\"exchange_rate\"));\r\n    const proforma_invoice = JSON.parse(\r\n      localStorage.getItem(\"proforma_invoice\")\r\n    );\r\n    const quotations = JSON.parse(localStorage.getItem(\"quotations\"));\r\n    const quotations_length = JSON.parse(\r\n      localStorage.getItem(\"quotations_length\")\r\n    );\r\n    const displayRecalculateBTN = JSON.parse(\r\n      localStorage.getItem(\"displayRecalculateBTN\")\r\n    );\r\n    const saveProformaInvoice = JSON.parse(\r\n      localStorage.getItem(\"saveProformaInvoice\")\r\n    );\r\n\r\n    const newInvoice = {\r\n      dateSaved: new Date().toDateString(),\r\n      timeSaved: new Date().toLocaleTimeString(),\r\n      toggle_exchange_rate_form,\r\n      toggle_form2,\r\n      currency,\r\n      exchange_rate,\r\n      proforma_invoice,\r\n      quotations,\r\n      quotations_length,\r\n      displayRecalculateBTN,\r\n      saveProformaInvoice,\r\n    };\r\n\r\n    const newInvoiceName = newInvoice.proforma_invoice.lpoItemName;\r\n\r\n    /* If LPO Name of Previously Saved Invoice Equals New Invoice LPO Name\r\n    Alert Caution */\r\n    const newProformaInvoice = [];\r\n    let duplicateOverwrite = true;\r\n\r\n    // Check If Invoice Had Previously Been Saved\r\n    getSavedProformaInvoiceInStorage.forEach((invoice) => {\r\n      const invoiceToLowerCase = invoice.proforma_invoice.lpoItemName;\r\n\r\n      if (invoiceToLowerCase.toLowerCase() === newInvoiceName.toLowerCase()) {\r\n        // console.log(\"1\");\r\n        // Overwrite\r\n        if (window.confirm(`Overwrite Saved ${newInvoiceName} LPO`) === false) {\r\n          // console.log(\"2\");\r\n          duplicateOverwrite = false;\r\n          toast.dark(`${newInvoiceName}'s LPO Invoice Was Not Updated`);\r\n          return;\r\n        }\r\n      } else {\r\n        // console.log(\"3\");\r\n        // NO Duplicate\r\n        newProformaInvoice.push(invoice);\r\n      }\r\n    });\r\n\r\n    /* Add New Invoice To New Proforma Invoice\r\n    That Means Either No Duplicate Was Found OR Saving Diplicate was not accepted*/\r\n    if (duplicateOverwrite === true) {\r\n      // console.log(\"4\");\r\n      newProformaInvoice.push(newInvoice);\r\n\r\n      // Display Toastify Indicating Invoice Was Saved\r\n      toast(`${newInvoiceName}'s LPO Invoice Was Successfully Saved`);\r\n      // Save New Sets Of Proforma Invoice To LS\r\n      localStorage.setItem(\r\n        \"Saved Proforma Invoice\",\r\n        JSON.stringify(newProformaInvoice)\r\n      );\r\n\r\n      // Report Button Click To Google Analytics\r\n      ReactGA.event({\r\n        category: \"Button\",\r\n        action: \"Clicked Save BTN\",\r\n        label: \"QuotesCard\",\r\n      });\r\n\r\n      // Hide saveProformaInvoice BTN\r\n      document.getElementById(\"saveProformaInvoice\").style.display = \"none\";\r\n      // Set saveProformaInvoice in LS to false\r\n      localStorage.setItem(\"saveProformaInvoice\", false);\r\n    }\r\n    // Reset duplicateOverwrite To true\r\n    duplicateOverwrite = true;\r\n\r\n    // Rerender Modal Accordion\r\n    this.props.savedLPOsState();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      proforma,\r\n      storageCurrency,\r\n\r\n      lpoItemName,\r\n\r\n      totalJobUnit,\r\n      totalJobUnit0,\r\n      serviceCharge,\r\n      serviceCharge0,\r\n      serviceCharge1,\r\n      discount,\r\n      vat,\r\n      vat0,\r\n      vat1,\r\n      profit,\r\n      profit0,\r\n      profit1,\r\n      totalValue,\r\n      totalValue0,\r\n      totalValue1,\r\n      discountPayable,\r\n      discountPayable0,\r\n      discountPayable1,\r\n      vatPayable,\r\n      vatPayable0,\r\n      vatPayable1,\r\n      totalPayableWithVat,\r\n      totalPayableWithVat0,\r\n      totalPayableWithVat1,\r\n      unitDiscount,\r\n      unitDiscount0,\r\n      unitDiscount1,\r\n      unitProfit,\r\n      unitProfit0,\r\n      unitProfit1,\r\n      unitPrice,\r\n      unitPrice0,\r\n      unitPrice1,\r\n      unit1000Price0,\r\n      unit1000Price1,\r\n    } = this.state;\r\n\r\n    let { proformaInvoice } = this.props;\r\n\r\n    return (\r\n      <div className=\"card my-3 table-dark\" style={boxShadows}>\r\n        <div className=\"card-header text-dark h5\" style={boxShadows}>\r\n          <span className=\"float-left mr-3\">\r\n            <i className=\"fa fa-file-invoice-dollar\" /> PROFORMA INVOICE{\" \"}\r\n          </span>\r\n          <button\r\n            id=\"clearInvoice\"\r\n            className=\"float-right btn btn-danger btn-sm\"\r\n            style={boxShadows}\r\n            onClick={this.clearProformaInvoice}\r\n          >\r\n            Clear Invoice\r\n          </button>\r\n          <button\r\n            id=\"recalculateInvoice\"\r\n            className=\"float-right btn btn-primary btn-sm mr-3\"\r\n            style={boxShadows}\r\n            onClick={this.recalculateInvoice}\r\n          >\r\n            Recalculate\r\n          </button>\r\n          <button\r\n            id=\"saveProformaInvoice\"\r\n            className=\"float-left btn btn-success btn-sm mr-3\"\r\n            style={boxShadows}\r\n            onClick={this.saveProformaInvoice}\r\n          >\r\n            Save Invoice\r\n          </button>\r\n        </div>\r\n        <div className=\"card-body table-responsive text-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary btn-sm float-left savedLPO\"\r\n            style={{\r\n              marginTop: \"-0.5rem\",\r\n              marginBottom: \"0.5rem\",\r\n              boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",\r\n            }}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#QuotesCardModal\"\r\n            onClick={() => {\r\n              // Report Modal View To Google Analytics\r\n              ReactGA.modalview(\"/Saved LPO(s) Modal\");\r\n            }}\r\n          >\r\n            Saved LPO(s)\r\n          </button>\r\n          <table\r\n            className=\"table table-striped table-bordered table-hover table-sm\"\r\n            style={boxShadows}\r\n          >\r\n            <thead className=\"table-success\">\r\n              <tr>\r\n                <th>Material</th>\r\n                <th>Quantity</th>\r\n                <th>Unit Price</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* ......... tableLinnerGraphichs Top......... */}\r\n              <tr\r\n                style={{\r\n                  backgroundImage:\r\n                    \"linear-gradient(to bottom right, #d9d9d9, gray, #d9d9d9, gray, #d9d9d9)\",\r\n                }}\r\n              >\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={borderlessTable}></td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Bottom......... */}\r\n              <tr className=\"h6 text-secondary\">\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(totalValue) !== 0,\r\n                  })}\r\n                  style={{\r\n                    boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                >\r\n                  {proformaInvoice.lpoItemName}\r\n                </td>\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(totalValue) !== 0,\r\n                  })}\r\n                >\r\n                  {Number(totalJobUnit) === 0 ? null : totalJobUnit0.displayNum}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                >\r\n                  {}\r\n                </td>\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(totalValue) !== 0,\r\n                  })}\r\n                >\r\n                  {Number(totalValue) === 0\r\n                    ? null\r\n                    : storageCurrency.sign + totalValue0.displayNum + \".\"}\r\n                  {Number(totalValue) === 0 ? null : (\r\n                    <small>{totalValue1.newDecimalNum}</small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Top......... */}\r\n              <tr\r\n                style={{\r\n                  backgroundImage:\r\n                    \"linear-gradient(to bottom right, #d9d9d9, gray, #d9d9d9, gray, #d9d9d9)\",\r\n                }}\r\n              >\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={borderlessTable}></td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Bottom......... */}\r\n              {Number(discount) === 0 ? null : (\r\n                <tr className=\"h6 text-danger\">\r\n                  <td className=\"pointerScale\">\r\n                    <span>Discount</span>{\" \"}\r\n                    <small className=\"text-muted\">(@ ${discount}%)</small>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                    }}\r\n                  ></td>\r\n                  <td\r\n                    className={classnames({\r\n                      pointerScale: Number(unitDiscount) !== 0,\r\n                    })}\r\n                  >\r\n                    {Number(unitDiscount) === 0\r\n                      ? null\r\n                      : storageCurrency.sign + unitDiscount0.displayNum + \".\"}\r\n                    {Number(unitDiscount) === Infinity ||\r\n                    Number(unitDiscount) === 0 ? null : (\r\n                      <small>{unitDiscount1.newDecimalNum}</small>\r\n                    )}\r\n                  </td>\r\n                  <td\r\n                    className={classnames({\r\n                      pointerScale: Number(discountPayable) !== 0,\r\n                    })}\r\n                    style={{\r\n                      boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                    }}\r\n                  >\r\n                    {Number(discountPayable) === 0\r\n                      ? null\r\n                      : storageCurrency.sign +\r\n                        discountPayable0.displayNum +\r\n                        \".\"}\r\n                    {Number(discountPayable) === 0 ? null : (\r\n                      <small>{discountPayable1.newDecimalNum}</small>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {/* ......... tableLinnerGraphichs Top......... */}\r\n              <tr\r\n                style={{\r\n                  backgroundImage:\r\n                    \"linear-gradient(to bottom right, #d9d9d9, gray, #d9d9d9, gray, #d9d9d9)\",\r\n                }}\r\n              >\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={borderlessTable}></td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Bottom......... */}\r\n              <tr className=\"h6 text-secondary\">\r\n                <td\r\n                  className=\"pointerScale\"\r\n                  style={{\r\n                    boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                >\r\n                  VAT{\" \"}\r\n                  <small>\r\n                    {Number(vat) === 0\r\n                      ? null\r\n                      : \"(@ \" + vat0.displayNum + \".\" + vat1.displayNum + \"%)\"}\r\n                  </small>\r\n                </td>\r\n                <td></td>\r\n                <td\r\n                  style={{\r\n                    boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                ></td>\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(vatPayable) !== 0,\r\n                  })}\r\n                >\r\n                  {Number(vatPayable) === 0\r\n                    ? null\r\n                    : storageCurrency.sign + vatPayable0.displayNum + \".\"}\r\n                  {Number(vatPayable) === 0 ? null : (\r\n                    <small>{vatPayable1.newDecimalNum}</small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Top......... */}\r\n              <tr\r\n                style={{\r\n                  backgroundImage:\r\n                    \"linear-gradient(to bottom right, #d9d9d9, gray, #d9d9d9, gray, #d9d9d9)\",\r\n                }}\r\n              >\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={borderlessTable}></td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Bottom......... */}\r\n              <tr className=\"h5 text-primary\">\r\n                <td className=\"pointerScale\">\r\n                  TOTAL <small className=\"text-secondary\">(VAT inc.)</small>\r\n                </td>\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(totalJobUnit) !== 0,\r\n                  })}\r\n                  style={{\r\n                    boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                >\r\n                  {Number(totalJobUnit) === 0 ? null : totalJobUnit0.displayNum}\r\n                </td>\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(unitPrice) !== 0,\r\n                  })}\r\n                >\r\n                  {Number(unitPrice) === 0\r\n                    ? null\r\n                    : storageCurrency.sign + unitPrice0.displayNum + \".\"}\r\n                  {Number(unitPrice) === Infinity ||\r\n                  Number(unitPrice) === 0 ? null : (\r\n                    <small>{unitPrice1.newDecimalNum}</small>\r\n                  )}\r\n                </td>\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(totalPayableWithVat) !== 0,\r\n                  })}\r\n                  style={{\r\n                    boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                >\r\n                  {Number(totalPayableWithVat) === 0\r\n                    ? null\r\n                    : storageCurrency.sign +\r\n                      totalPayableWithVat0.displayNum +\r\n                      \".\"}\r\n                  {Number(totalPayableWithVat) === 0 ? null : (\r\n                    <small>{totalPayableWithVat1.newDecimalNum}</small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Top......... */}\r\n              <tr\r\n                style={{\r\n                  backgroundImage:\r\n                    \"linear-gradient(to bottom right, #d9d9d9, gray, #d9d9d9, gray, #d9d9d9)\",\r\n                }}\r\n              >\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={borderlessTable}></td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Bottom......... */}\r\n              <tr className=\"h5 text-success\">\r\n                <td\r\n                  className=\"pointerScale\"\r\n                  style={{\r\n                    boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                >\r\n                  PROFIT\r\n                  <small className=\"text-secondary\">\r\n                    (after VAT)\r\n                    <small>\r\n                      {Number(serviceCharge) === 0\r\n                        ? null\r\n                        : \" [@ \" +\r\n                          serviceCharge0.displayNum +\r\n                          \".\" +\r\n                          serviceCharge1.displayNum +\r\n                          \"%]\"}\r\n                    </small>\r\n                  </small>\r\n                </td>\r\n                <td></td>\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(unitProfit) !== 0,\r\n                  })}\r\n                  style={{\r\n                    boxShadow: \"5px 14px 10px 1px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                >\r\n                  {Number(unitProfit) === 0\r\n                    ? null\r\n                    : storageCurrency.sign + unitProfit0.displayNum + \".\"}\r\n                  {Number(unitProfit) === Infinity ||\r\n                  Number(unitProfit) === 0 ? null : (\r\n                    <small>{unitProfit1.newDecimalNum}</small>\r\n                  )}\r\n                </td>\r\n                <td\r\n                  className={classnames({\r\n                    pointerScale: Number(profit) !== 0,\r\n                  })}\r\n                >\r\n                  {Number(profit) === 0\r\n                    ? null\r\n                    : storageCurrency.sign + profit0.displayNum + \".\"}\r\n                  {Number(profit) === 0 ? null : (\r\n                    <small>{profit1.newDecimalNum}</small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Top......... */}\r\n              <tr\r\n                style={{\r\n                  backgroundImage:\r\n                    \"linear-gradient(to bottom right, #d9d9d9, gray, #d9d9d9, gray, #d9d9d9)\",\r\n                }}\r\n              >\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              {/* ......... tableLinnerGraphichs Bottom......... */}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div\r\n          className=\"card-footer bg-secondary text-light col-sm-11 mx-auto\"\r\n          style={(boxShadows, effects)}\r\n        >\r\n          {Number(unitPrice) === 0 ? null : (\r\n            <div className=\"form-group\" style={boxShadows}>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"sel1\"\r\n                onClick={(this, this.proforma)}\r\n              >\r\n                <option value=\"1\">Display Unit Price</option>\r\n                <option value=\"1000\">Display Price Per 1,000 units</option>\r\n                <option value=\"101\">Display TOTAL (VAT inc.)</option>\r\n                <option value=\"102\">\r\n                  PROFIT(after VAT [\r\n                  {vat0.displayNum + \".\" + vat1.displayNum + \"%\"}])\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {Number(unitPrice) === Infinity ||\r\n          Number(unitPrice) === 0 ? null : proforma === \"1\" ? (\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n              <li className=\"h5\">\r\n                <span className=\"h4\">PROFORMA INVOICE</span>{\" \"}\r\n                <hr className=\"bg-light\" />\r\n                {totalJobUnit0.displayNum} Pcs. of {lpoItemName} @{\" \"}\r\n                {storageCurrency.sign}\r\n                {unitPrice0.displayNum + \".\"}\r\n                <small>{unitPrice1.newDecimalNum}</small>\r\n                {Number(unitPrice0.displayNum) === 0\r\n                  ? null\r\n                  : \" (\" +\r\n                    unitPrice0.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.senior}\r\n                {Number(unitPrice0.displayNum) === 0\r\n                  ? \" (\"\r\n                  : Number(unitPrice1.newDecimalNum) === 0\r\n                  ? null\r\n                  : \", and \"}\r\n                {Number(unitPrice1.newDecimalNum) === 0\r\n                  ? null\r\n                  : unitPrice1.newDecimalWord + \" \" + storageCurrency.junior}\r\n                ) each.\r\n              </li>\r\n            </ul>\r\n          ) : proforma === \"1000\" ? (\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n              <li className=\"h5\">\r\n                <span className=\"h4\">PROFORMA INVOICE</span>{\" \"}\r\n                <hr className=\"bg-light\" />\r\n                {totalJobUnit0.displayNum} Pcs. of {lpoItemName} @{\" \"}\r\n                {storageCurrency.sign}\r\n                {unit1000Price0.displayNum + \".\"}\r\n                <small>{unit1000Price1.newDecimalNum}</small>\r\n                {Number(unit1000Price0.displayNum) === 0\r\n                  ? null\r\n                  : \" (\" +\r\n                    unit1000Price0.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.senior}\r\n                {Number(unit1000Price0.displayNum) === 0\r\n                  ? \" (\"\r\n                  : Number(unit1000Price1.newDecimalNum) === 0\r\n                  ? null\r\n                  : \", and \"}\r\n                {Number(unit1000Price1.newDecimalNum) === 0\r\n                  ? null\r\n                  : unit1000Price1.newDecimalWord +\r\n                    \" \" +\r\n                    storageCurrency.junior}\r\n                ) per 1000 units.\r\n              </li>\r\n            </ul>\r\n          ) : proforma === \"101\" ? (\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n              <li className=\"h5\">\r\n                <span className=\"h4\">PROFORMA INVOICE</span>\r\n                <hr className=\"bg-light\" />\r\n                {totalJobUnit0.displayNum} Pcs. of {lpoItemName} @{\" \"}\r\n                {storageCurrency.sign}\r\n                {totalPayableWithVat0.displayNum + \".\"}\r\n                <small>{totalPayableWithVat1.newDecimalNum}</small>\r\n                {Number(totalPayableWithVat0.displayNum) === 0\r\n                  ? null\r\n                  : \" (\" +\r\n                    totalPayableWithVat0.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.senior}\r\n                {Number(totalPayableWithVat0.displayNum) === 0\r\n                  ? \" (\"\r\n                  : Number(totalPayableWithVat1.newDecimalNum) === 0\r\n                  ? null\r\n                  : \", and \"}\r\n                {Number(totalPayableWithVat1.newDecimalNum) === 0\r\n                  ? null\r\n                  : totalPayableWithVat1.newDecimalWord +\r\n                    \" \" +\r\n                    storageCurrency.junior +\r\n                    \").\"}{\" \"}\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n              <li className=\"h5\">\r\n                <span className=\"h4\">PROFORMA INVOICE</span>\r\n                <hr className=\"bg-light\" />\r\n                {totalJobUnit0.displayNum} Pcs. of {lpoItemName} @{\" \"}\r\n                {storageCurrency.sign}\r\n                {totalPayableWithVat0.displayNum + \".\"}\r\n                <small>{totalPayableWithVat1.newDecimalNum}</small>\r\n                {Number(totalPayableWithVat0.displayNum) === 0\r\n                  ? null\r\n                  : \" (\" +\r\n                    totalPayableWithVat0.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.senior}\r\n                {Number(totalPayableWithVat0.displayNum) === 0\r\n                  ? \" (\"\r\n                  : Number(totalPayableWithVat1.newDecimalNum) === 0\r\n                  ? null\r\n                  : \", and \"}\r\n                {Number(totalPayableWithVat1.newDecimalNum) === 0\r\n                  ? null\r\n                  : totalPayableWithVat1.newDecimalWord +\r\n                    \" \" +\r\n                    storageCurrency.junior}\r\n                ). <br />\r\n                <br />\r\n                <div className=\"h4 mt-3\">PROFIT</div>\r\n                <hr className=\"bg-light\" />\r\n                {storageCurrency.sign}\r\n                {profit0.displayNum + \".\"}\r\n                <small>{profit1.newDecimalNum}</small>\r\n                {Number(profit0.displayNum) === 0\r\n                  ? null\r\n                  : \" (\" + profit0.displayWord + \" \" + storageCurrency.senior}\r\n                {Number(profit0.displayNum) === 0\r\n                  ? \" (\"\r\n                  : Number(profit1.newDecimalNum) === 0\r\n                  ? null\r\n                  : \", and \"}\r\n                {Number(profit1.newDecimalNum) === 0\r\n                  ? null\r\n                  : profit1.newDecimalWord + \" \" + storageCurrency.junior}\r\n                ).\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nQuotesCard.propTypes = {\r\n  proformaInvoice: PropTypes.object.isRequired,\r\n  getProformaInvoice: PropTypes.func.isRequired,\r\n  addProformaInvoice: PropTypes.func.isRequired,\r\n  getCurrency: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  proformaInvoice: state.quotation.proformaInvoice,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getProformaInvoice,\r\n  addProformaInvoice,\r\n  getCurrency,\r\n  savedLPOsState,\r\n})(QuotesCard);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n\r\nconst effects = {\r\n  borderRadius: \"15px 15px 50px 50px\",\r\n};\r\n\r\n// Use This Style Props Without Border Instead of .table-responsive\r\nconst borderlessTable = {\r\n  display: \"block\",\r\n  width: \"100%\",\r\n  overflowX: \"auto\",\r\n  border: \"none\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    // Set Footer Year\r\n    const thisYear = new Date(\"2020\").getFullYear();\r\n    let presentYear = new Date().getFullYear();\r\n    return (\r\n      <footer\r\n        className=\"container pointerScale mb-2\"\r\n        style={{\r\n          color: \"gray\",\r\n          textAlign: \"center\",\r\n          marginTop: \"58px\",\r\n          marginBottom: \"7px\",\r\n          paddingBottom: \"7px\",\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-10\">\r\n            Copyright (c){\" \"}\r\n            <span id=\"copyRightYear\">\r\n              {thisYear === presentYear\r\n                ? thisYear\r\n                : thisYear < presentYear\r\n                ? thisYear + \" - \" + presentYear\r\n                : null}{\" \"}\r\n            </span>{\" \"}\r\n            Saheed Odulaja - All Rights Reserved <br />\r\n            <div>\r\n              Get Source Code &lt; v2 From:{\" \"}\r\n              <a\r\n                href=\"https://github.com/Sidodus/Sidodus-proforma-invoice-calculator/\"\r\n                className=\"text-secondary\"\r\n              >\r\n                https://github.com/Sidodus/Sidodus-proforma-invoice-calculator/\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-2 mt-2\">\r\n            {/* Button to Open the Modal  */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary btn-sm float-left\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#myModal\"\r\n              onClick={() => {\r\n                // Report Modal View To Google Analytics\r\n                ReactGA.modalview(\"/Formula Modal\");\r\n              }}\r\n            >\r\n              Formula\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport QuotesForm from \"./QuotesForm\";\r\nimport Quotes from \"./Quotes\";\r\nimport QuotesCard from \"./QuotesCard\";\r\nimport Footer from \"../layouts/Footer\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nclass QuotesHome extends Component {\r\n  componentDidMount() {\r\n    // Report PageView To Google Analytics\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\",\r\n          }}\r\n        >\r\n          <QuotesForm />\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6\">\r\n                <Quotes />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <QuotesCard />\r\n              </div>\r\n            </div>\r\n            <small>\r\n              <Footer />\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuotesHome;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateQuotation } from \"../../actions/quotationTypes\";\r\nimport { getStorageQuotations } from \"../../actions/quotationStorageActions\";\r\nimport Footer from \"../layouts/Footer\";\r\n\r\nimport Big from \"big.js\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nclass EditForm extends React.Component {\r\n  state = {\r\n    currencySign: \"\",\r\n\r\n    id: \"\",\r\n    itemName: \"\",\r\n    itemDescription: \"\",\r\n    itemUnit: \"\",\r\n    itemPrice: \"\",\r\n    toggleRecalculateBtnOnPriceEdit: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Report PageView To Google Analytics\r\n    ReactGA.pageview(\r\n      window.location.pathname + window.location.search + \"/editPage\"\r\n    );\r\n\r\n    const currencySign = JSON.parse(localStorage.getItem(\"currency\")).sign;\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const quotations = getStorageQuotations();\r\n    const data = quotations.filter((quotation) => quotation.id === id);\r\n\r\n    const {\r\n      itemName,\r\n      itemDescription,\r\n      itemUnit,\r\n      itemPriceNaira,\r\n      itemPriceDollar,\r\n    } = data[0];\r\n\r\n    let itemPrice;\r\n    if (JSON.parse(localStorage.getItem(\"currency\")).senior === \"Naira\") {\r\n      itemPrice = itemPriceNaira;\r\n    } else if (\r\n      JSON.parse(localStorage.getItem(\"currency\")).senior === \"Dollar\"\r\n    ) {\r\n      itemPrice = itemPriceDollar;\r\n    }\r\n\r\n    this.setState({\r\n      currencySign,\r\n\r\n      id,\r\n      itemName,\r\n      itemDescription,\r\n      itemUnit,\r\n      itemPrice,\r\n      toggleRecalculateBtnAfterEditingAnExpenseItemUnit: itemUnit,\r\n      toggleRecalculateBtnAfterEditingAnExpenseItemPrice: itemPrice,\r\n    });\r\n  }\r\n\r\n  valueChanged = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  valueSubmited = (e) => {\r\n    e.preventDefault();\r\n\r\n    let { id, itemName, itemDescription, itemUnit, itemPrice } = this.state;\r\n\r\n    /*\r\n     ** Add '0' To ItemPrice If It's e.g '.88'\r\n     ** ItemPrice Would Now Be '0.88'\r\n     */\r\n    let itemPriceSplit = itemPrice.split(\".\");\r\n    if (itemPriceSplit.length === 2) {\r\n      if (itemPriceSplit[0] === \"\") {\r\n        itemPrice = \"0.\" + itemPriceSplit[1];\r\n      }\r\n    }\r\n\r\n    // Set itemUnit Default Value\r\n    if (itemUnit === \"\") {\r\n      itemUnit = \"1\";\r\n    }\r\n\r\n    /*  Split Item Price Into itemPriceNaira & itemPriceDollar\r\n     ** Calculate Both Item Price Based On Exchange Rate\r\n     */\r\n    let itemPriceNaira;\r\n    let itemPriceDollar;\r\n\r\n    const currency = JSON.parse(localStorage.getItem(\"currency\")).senior;\r\n    const ngn = Number(JSON.parse(localStorage.getItem(\"exchange_rate\")).naira);\r\n    const usd = Number(\r\n      JSON.parse(localStorage.getItem(\"exchange_rate\")).dollar\r\n    );\r\n\r\n    let exchangeRate;\r\n    if (ngn > usd) {\r\n      exchangeRate = ngn / usd;\r\n    } else if (usd > ngn) {\r\n      exchangeRate = usd / ngn;\r\n    }\r\n\r\n    if (currency === \"Naira\") {\r\n      itemPriceNaira = itemPrice;\r\n      itemPriceDollar = Big(itemPrice).div(exchangeRate).toFixed();\r\n    } else if (currency === \"Dollar\") {\r\n      itemPriceDollar = itemPrice;\r\n      itemPriceNaira = Big(itemPrice).times(exchangeRate).toFixed();\r\n    }\r\n\r\n    const newQuotationItem = {\r\n      id,\r\n      itemName,\r\n      itemDescription,\r\n      itemUnit,\r\n      itemPriceNaira,\r\n      itemPriceDollar,\r\n    };\r\n\r\n    // Toggle Recalculate & Save Invoice BTN If itemUnit OR itemPriceNaira Editing Occures\r\n    if (currency === \"Naira\") {\r\n      if (\r\n        this.state.toggleRecalculateBtnAfterEditingAnExpenseItemUnit ===\r\n          newQuotationItem.itemUnit &&\r\n        this.state.toggleRecalculateBtnAfterEditingAnExpenseItemPrice ===\r\n          newQuotationItem.itemPriceNaira\r\n      ) {\r\n        localStorage.setItem(\"displayRecalculateBTN\", false);\r\n        localStorage.setItem(\"saveProformaInvoice\", false);\r\n      } else {\r\n        localStorage.setItem(\"displayRecalculateBTN\", true);\r\n        localStorage.setItem(\"saveProformaInvoice\", false);\r\n      }\r\n    } else if (currency === \"Dollar\") {\r\n      if (\r\n        this.state.toggleRecalculateBtnAfterEditingAnExpenseItemUnit ===\r\n          newQuotationItem.itemUnit &&\r\n        this.state.toggleRecalculateBtnAfterEditingAnExpenseItemPrice ===\r\n          newQuotationItem.itemPriceDollar\r\n      ) {\r\n        localStorage.setItem(\"displayRecalculateBTN\", false);\r\n        localStorage.setItem(\"saveProformaInvoice\", false);\r\n      } else {\r\n        localStorage.setItem(\"displayRecalculateBTN\", true);\r\n        localStorage.setItem(\"saveProformaInvoice\", false);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      id: \"\",\r\n      itemName: \"\",\r\n      itemDescription: \"\",\r\n      itemUnit: \"\",\r\n      itemPrice: \"\",\r\n    });\r\n\r\n    this.props.updateQuotation(newQuotationItem);\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currencySign,\r\n      itemName,\r\n      itemDescription,\r\n      itemPrice,\r\n      itemUnit,\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"container-fluid pt-5 pb-3 px-5 mb-1\"\r\n            // Main Background Styling\r\n            style={{\r\n              backgroundImage:\r\n                \"linear-gradient(lightgray 2%, white 5%, gray 15%, lightgray 60%)\",\r\n              transform: \"rotate(180deg)\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"row\"\r\n              // Inner Background Styling\r\n              style={{\r\n                backgroundImage:\r\n                  \"linear-gradient(lightgray 1%, white 30%, rgb(187, 202, 131) 100%)\",\r\n                transform: \"rotate(180deg)\",\r\n                paddingBottom: \"10px\",\r\n                boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\",\r\n              }}\r\n            >\r\n              <div className=\"col-sm-9 mx-auto\">\r\n                <h4 className=\"text-center text-secondary\">\r\n                  <i className=\"fa fa-align-center fa-sm\" /> STEP 1 (update)\r\n                </h4>\r\n                <label>\r\n                  <b>Update Quotation Details...</b>\r\n                </label>\r\n                <form onSubmit={this.valueSubmited}>\r\n                  <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">Item Name</span>\r\n                    </div>\r\n                    <input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"itemName\"\r\n                      className=\"form-control\"\r\n                      value={itemName}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"itemDescription\"\r\n                      className=\"form-control\"\r\n                      value={itemDescription}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <span className=\"input-group-text\">Description</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text btn btn-outline-success form-control\">\r\n                        {currencySign}\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      required\r\n                      type=\"number\"\r\n                      step=\"0.00005\"\r\n                      name=\"itemPrice\"\r\n                      className=\"form-control\"\r\n                      value={itemPrice}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">Item Value</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"itemUnit\"\r\n                      className=\"form-control\"\r\n                      value={itemUnit}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update\"\r\n                    className=\"form-control btn btn-secondary\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <small>\r\n            <Footer />\r\n          </small>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditForm.propTypes = {\r\n  updateQuotation: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quotations: state.quotation.quotations,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateQuotation })(EditForm);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Redirect extends Component {\r\n  UNSAFE_componentWillMount() {\r\n    this.props.history.push(\"/\");\r\n  }\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Footer from \"../layouts/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nfunction NotFound() {\r\n  useEffect(() => {\r\n    // Report PageView To Google Analytics\r\n    ReactGA.pageview(\"Page Not Found\");\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"container-fluid pt-5 pb-3 px-5 mb-1\"\r\n        // Main Background Styling\r\n        style={{\r\n          backgroundImage:\r\n            \"linear-gradient(lightgray 2%, white 5%, gray 15%, lightgray 60%)\",\r\n          transform: \"rotate(180deg)\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"row\"\r\n          // Inner Background Styling\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient(lightgray 1%, white 30%, rgb(187, 202, 131) 100%)\",\r\n            transform: \"rotate(180deg)\",\r\n            paddingBottom: \"10px\",\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\",\r\n          }}\r\n        >\r\n          <div className=\"mx-auto\">\r\n            <h4>\r\n              <span className=\"text-danger display-4\"> 404 </span> Page Not\r\n              Found <hr />\r\n            </h4>\r\n            <p>\r\n              Sorry!!! The Page You Request Is Not Available. This Is A Single\r\n              Page Application (SPA)\r\n            </p>\r\n            <p className=\"h5 text-secondary pb-3\">\r\n              Return To{\" \"}\r\n              <Link to=\"/\">Proforma Invoice Calculator (Application)</Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <small>\r\n        <Footer />\r\n      </small>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nexport default function FormulaModal() {\r\n  return (\r\n    <div>\r\n      {/* The Modal */}\r\n      <div className=\"modal fade\" id=\"myModal\">\r\n        <div className=\"modal-dialog modal-dialog-scrollable\">\r\n          <div className=\"modal-content\">\r\n            {/*  Modal Header */}\r\n            <div className=\"modal-header bg-info text-light\">\r\n              <h4 className=\"modal-title\">\r\n                Proforma Invoice Formula <br />\r\n                <sup style={{ color: \"lightgray\" }}>v4.0.0</sup>\r\n              </h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close btn-outline-danger\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            {/*  Modal body  */}\r\n            <div className=\"modal-body\">\r\n              <ol>\r\n                <li className=\"h5 text-muted\">\r\n                  \"Item Name\" Value\r\n                  <div className=\"text-success h6 text-center mr-5\">\r\n                    <em>\r\n                      <ins>Total Expenses + Profit + Discount</ins>\r\n                    </em>\r\n                  </div>\r\n                  <ul style={{ listStyleType: \"disc\" }}>\r\n                    <li>\r\n                      Total Expenses + (((Service Charge / 100) * Total\r\n                      Expenses) - ((Discount / 100) * ((Service Charge / 100) *\r\n                      Total Expenses))) + ((Discount / 100) * ((Service Charge /\r\n                      100) * Total Expenses))\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <hr />\r\n                <li className=\"h5 text-muted\">\r\n                  Discount (Unit Price)\r\n                  <div className=\"text-success h6 text-center mr-5\">\r\n                    <em>\r\n                      <ins>Discount / Total Job Unit</ins>\r\n                    </em>\r\n                  </div>\r\n                  <ul style={{ listStyleType: \"disc\" }}>\r\n                    <li>\r\n                      ((Discount / 100) * ((Service Charge / 100) * Total\r\n                      Expenses)) / Total Job Unit\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <hr />\r\n                <li className=\"h5 text-muted\">\r\n                  Discount (Total Amount)\r\n                  <div className=\"text-success h6 text-center mr-5\">\r\n                    <em>\r\n                      <ins>Discounted % * Profit-Before-Discount</ins>\r\n                    </em>\r\n                  </div>\r\n                  <ul style={{ listStyleType: \"disc\" }}>\r\n                    <li>\r\n                      (Discount / 100) * ((Service Charge / 100) * Total\r\n                      Expenses)\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <hr />\r\n                <li className=\"h5 text-muted\">\r\n                  VAT\r\n                  <div className=\"text-success h6 text-center mr-5\">\r\n                    <em>\r\n                      <ins>VAT % * (Total Value - Discount)</ins>\r\n                    </em>\r\n                  </div>\r\n                  <ul style={{ listStyleType: \"disc\" }}>\r\n                    <li>\r\n                      (VAT / 100) * ((Total Expenses + (((Service Charge / 100)\r\n                      * Total Expenses) - ((Discount / 100) * ((Service Charge /\r\n                      100) * Total Expenses))) + ((Discount / 100) * ((Service\r\n                      Charge / 100) * Total Expenses))) - ((Discount / 100) *\r\n                      ((Service Charge / 100) * Total Expenses)))\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <hr />\r\n                <li className=\"h5 text-muted\">\r\n                  Proforma Invoice (Price Per Unit)\r\n                  <div className=\"text-success h6 text-center mr-5\">\r\n                    <em>\r\n                      <ins>Total LPO Amount / Total Job Unit</ins>\r\n                    </em>\r\n                  </div>\r\n                  <ul style={{ listStyleType: \"disc\" }}>\r\n                    <li>\r\n                      ((Total Expenses + (((Service Charge / 100) * Total\r\n                      Expenses) - ((Discount / 100) * ((Service Charge / 100) *\r\n                      Total Expenses))) + ((Discount / 100) * ((Service Charge /\r\n                      100) * Total Expenses))) - ((Discount / 100) * ((Service\r\n                      Charge / 100) * Total Expenses)) + ((VAT / 100) * ((Total\r\n                      Expenses + (((Service Charge / 100) * Total Expenses) -\r\n                      ((Discount / 100) * ((Service Charge / 100) * Total\r\n                      Expenses))) + ((Discount / 100) * ((Service Charge / 100)\r\n                      * Total Expenses))) - ((Discount / 100) * ((Service Charge\r\n                      / 100) * Total Expenses))))) / Total Job Unit\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <hr />\r\n                <li className=\"h5 text-muted\">\r\n                  Proforma Invoice (Total Amount)\r\n                  <div className=\"text-success h6 text-center mr-5\">\r\n                    <em>\r\n                      <ins>Total Value - Discount + VAT</ins>\r\n                    </em>\r\n                  </div>\r\n                  <ul style={{ listStyleType: \"disc\" }}>\r\n                    <li>\r\n                      (Total Expenses + (((Service Charge / 100) * Total\r\n                      Expenses) - ((Discount / 100) * ((Service Charge / 100) *\r\n                      Total Expenses))) + ((Discount / 100) * ((Service Charge /\r\n                      100) * Total Expenses))) - ((Discount / 100) * ((Service\r\n                      Charge / 100) * Total Expenses)) + ((VAT / 100) * ((Total\r\n                      Expenses + (((Service Charge / 100) * Total Expenses) -\r\n                      ((Discount / 100) * ((Service Charge / 100) * Total\r\n                      Expenses))) + ((Discount / 100) * ((Service Charge / 100)\r\n                      * Total Expenses))) - ((Discount / 100) * ((Service Charge\r\n                      / 100) * Total Expenses))))\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <hr />\r\n                <li className=\"h5 text-muted\">\r\n                  Profit After VAT (Profit Per Unit)\r\n                  <div className=\"text-success h6 text-center mr-5\">\r\n                    <em>\r\n                      <ins>Profit / Total Job Unit</ins>\r\n                    </em>\r\n                  </div>\r\n                  <ul style={{ listStyleType: \"disc\" }}>\r\n                    <li>\r\n                      ((((Service Charge / 100) * Total Expenses) - ((Discount /\r\n                      100) * ((Service Charge / 100) * Total Expenses))) -\r\n                      ((Discount / 100) * ((Service Charge / 100) * Total\r\n                      Expenses))) / Total Job Unit\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <hr />\r\n                <li className=\"h5 text-muted\">\r\n                  Profit After VAT(Total Profit)\r\n                  <div className=\"text-success h6 text-center mr-5\">\r\n                    <em>\r\n                      <ins>Service Charge % * Total Expenses - Discount</ins>\r\n                    </em>\r\n                  </div>\r\n                  <ul style={{ listStyleType: \"disc\" }}>\r\n                    <li>\r\n                      (((Service Charge / 100) * Total Expenses) - ((Discount /\r\n                      100) * ((Service Charge / 100) * Total Expenses))) -\r\n                      ((Discount / 100) * ((Service Charge / 100) * Total\r\n                      Expenses))\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ol>\r\n            </div>\r\n\r\n            {/* Modal footer */}\r\n            <div\r\n              className=\"modal-footer\"\r\n              style={{ backgroundColor: \"lightgray\" }}\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { savedLPOsState, deleteLpo } from \"../../actions/lpoTypes\";\r\nimport { pushUploadedLpo2Storage } from \"../../actions/lpoStorageActions\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass QuotesCardModalAccordionLpoDetails extends Component {\r\n  state = {\r\n    LPOs: [],\r\n    LPOsArr: [],\r\n  };\r\n\r\n  uploadLpo(LPOs, defaultSavedProformaInvoice) {\r\n    // Get Current Proforma Invoice Name From LS\r\n    const currentInvoiceName = JSON.parse(\r\n      localStorage.getItem(\"proforma_invoice\")\r\n    );\r\n\r\n    const confirmOverwrite = window.confirm(\r\n      `Ensure You Save Processed ${currentInvoiceName.lpoItemName} LPO Details On Home Page Before Overwriting With ${LPOs.lpoItemName} LPO; Else Processed ${currentInvoiceName.lpoItemName} LPO Details On Home Page Would Be Lost` +\r\n        \"\\n \\n Confirming Overwrite...\"\r\n    );\r\n\r\n    if (confirmOverwrite) {\r\n      defaultSavedProformaInvoice.forEach((invoice) => {\r\n        if (invoice.proforma_invoice.lpoItemName === LPOs.lpoItemName) {\r\n          pushUploadedLpo2Storage(invoice);\r\n\r\n          toast.success(\r\n            `${LPOs.lpoItemName}'s Proforma Invoice Was Successfully Uploaded`\r\n          );\r\n\r\n          // Report Button Click To Google Analytics\r\n          ReactGA.event({\r\n            category: \"Button\",\r\n            action: \"Upload Saved LPO To Home (Clicked Upload LPO BTN)\",\r\n          });\r\n\r\n          // Close Modal\r\n          document.getElementById(\"closeModal\").click();\r\n\r\n          // Rerender Home Page\r\n          this.props.history.push(\"/redirect\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteLpo(LPOs) {\r\n    const confirmDelete = window.confirm(\r\n      `Confirm Delete Of ${LPOs.lpoItemName} LPO \\n \\n ${LPOs.lpoItemName} Can't be retrived Once Deleted`\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      this.props.deleteLpo(LPOs);\r\n\r\n      this.props.savedLPOsState();\r\n\r\n      // Report Button Click To Google Analytics\r\n      ReactGA.event({\r\n        category: \"Button\",\r\n        action: \"Deleted Saved LPO (Clicked Delete LPO BTN)\",\r\n      });\r\n\r\n      toast.error(`${LPOs.lpoItemName} LPO Was Successfully Deleted`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      defaultSavedProformaInvoice,\r\n      LPOs,\r\n      dateSaved,\r\n      timeSaved,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <button\r\n            onClick={this.uploadLpo.bind(\r\n              this,\r\n              LPOs,\r\n              defaultSavedProformaInvoice\r\n            )}\r\n            className=\"btn btn-sm btn-outline-success\"\r\n            style={boxShadows}\r\n          >\r\n            Upload LPO\r\n          </button>\r\n          <button\r\n            onClick={this.deleteLpo.bind(\r\n              this,\r\n              LPOs,\r\n              defaultSavedProformaInvoice\r\n            )}\r\n            className=\"btn btn-sm btn-outline-danger float-right\"\r\n            style={boxShadows}\r\n          >\r\n            Delete LPO\r\n          </button>\r\n          <hr style={boxShadows} />\r\n          <div className=\"mt-4 mb-5\">\r\n            <sup className=\"text-muted float-left\">{dateSaved}</sup>\r\n            <sup className=\"text-muted float-right\">{timeSaved}</sup>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h4 className=\"text-muted text-center\">\r\n            <ins>{LPOs.lpoItemName}'s LPO</ins>\r\n          </h4>\r\n          <ul style={{ fontWeight: \"bold\" }}>\r\n            <li>\r\n              Exchange Rate:{\" \"}\r\n              <span style={{ fontWeight: \"500\" }} className=\"text-muted\">\r\n                ${LPOs.dollar} to ₦{LPOs.naira}\r\n              </span>\r\n            </li>\r\n            <li>\r\n              Total Job Unit:{\" \"}\r\n              <span style={{ fontWeight: \"500\" }} className=\"text-muted\">\r\n                {LPOs.totalJobUnit}\r\n              </span>\r\n            </li>\r\n            <li>\r\n              Service Charge:{\" \"}\r\n              <span style={{ fontWeight: \"500\" }} className=\"text-muted\">\r\n                {LPOs.serviceCharge}%\r\n              </span>\r\n            </li>\r\n            <li>\r\n              VAT:{\" \"}\r\n              <span style={{ fontWeight: \"500\" }} className=\"text-muted\">\r\n                {LPOs.vat}%\r\n              </span>\r\n            </li>\r\n            <li>\r\n              Discount:{\" \"}\r\n              <span style={{ fontWeight: \"500\" }} className=\"text-muted\">\r\n                {LPOs.discount}%\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nQuotesCardModalAccordionLpoDetails.propType = {\r\n  savedLPOsInState: PropTypes.array.isRequired,\r\n  newlySavedLPOsAfterDelete: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  savedLPOsInState: state.quotation.savedLPOsInState,\r\n  newlySavedLPOsAfterDelete: state.quotation.newlySavedLPOsAfterDelete,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  savedLPOsState,\r\n  deleteLpo,\r\n})(withRouter(QuotesCardModalAccordionLpoDetails));\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function QuotesCardModalAccordionLpoExpenses(props) {\r\n  const { LPOs } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <table\r\n        className=\"table table-dark table-bordered table-striped table-hover table-responsive\"\r\n        style={boxShadows}\r\n      >\r\n        <thead className=\"bg-success text-light\">\r\n          <tr>\r\n            <th>Item Name</th>\r\n            <th>Description </th>\r\n            <th>Unit</th>\r\n            <th>Naira (₦)</th>\r\n            <th>Dollar ($)</th>\r\n          </tr>\r\n        </thead>\r\n        {LPOs.expenses.map((items) => (\r\n          <tbody key={items.id}>\r\n            <tr>\r\n              <td>{items.itemName}</td>\r\n              <td>{items.itemDescription}</td>\r\n              <td>{items.itemUnit}</td>\r\n              <td>₦{Number(items.itemUnitPriceNaira).toFixed(2)}</td>\r\n              <td>${Number(items.itemUnitPriceDollar).toFixed(2)}</td>\r\n            </tr>\r\n          </tbody>\r\n        ))}\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function QuotesCardModalAccordionLpoExpensesHeader(props) {\r\n  const { LPOs } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <a\r\n        className=\"card-link\"\r\n        data-toggle=\"collapse\"\r\n        href={`#collapse${LPOs.id}`}\r\n      >\r\n        {LPOs.lpoItemName}\r\n      </a>\r\n      <small className=\"badge badge-secondary float-right\">{LPOs.id} </small>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport QuotesCardModalAccordionLpoDetails from \"./QuotesCardModalAccordionLpoDetails\";\r\nimport QuotesCardModalAccordionLpoExpenses, {\r\n  QuotesCardModalAccordionLpoExpensesHeader,\r\n} from \"./QuotesCardModalAccordionLpoExpenses\";\r\n\r\nimport classnames from \"classnames\";\r\n\r\nclass QuotesCardModalAccordion extends Component {\r\n  state = {\r\n    defaultSavedProformaInvoice: \"\",\r\n    lpoArr: \"\",\r\n    newLpoArr: [],\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    const { defaultSavedProformaInvoice, LPOs } = props;\r\n\r\n    let lpo = [];\r\n\r\n    LPOs.map((element) => {\r\n      return lpo.push(element);\r\n    });\r\n\r\n    this.setState({\r\n      defaultSavedProformaInvoice,\r\n      lpoArr: props.LPOs,\r\n      newLpoArr: lpo,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { defaultSavedProformaInvoice, newLpoArr } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"accordion\">\r\n          {newLpoArr.map((element) => (\r\n            <div key={element.id}>\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <QuotesCardModalAccordionLpoExpensesHeader\r\n                    defaultSavedProformaInvoice={defaultSavedProformaInvoice}\r\n                    LPOs={element}\r\n                  />\r\n                </div>\r\n                <div\r\n                  id={`collapse${element.id}`}\r\n                  className={classnames(\"collapse\", {\r\n                    show: element.id === 1,\r\n                  })}\r\n                  data-parent=\"#accordion\"\r\n                >\r\n                  <div className=\"card-body\">\r\n                    <QuotesCardModalAccordionLpoDetails\r\n                      defaultSavedProformaInvoice={defaultSavedProformaInvoice}\r\n                      LPOs={element}\r\n                      dateSaved={defaultSavedProformaInvoice.map((date) =>\r\n                        element.lpoItemName ===\r\n                        date.proforma_invoice.lpoItemName\r\n                          ? date.dateSaved\r\n                          : null\r\n                      )}\r\n                      timeSaved={defaultSavedProformaInvoice.map((time) =>\r\n                        element.lpoItemName ===\r\n                        time.proforma_invoice.lpoItemName\r\n                          ? time.timeSaved\r\n                          : null\r\n                      )}\r\n                    />\r\n                    <hr style={boxShadows} />\r\n                    <QuotesCardModalAccordionLpoExpenses LPOs={element} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuotesCardModalAccordion;\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport QuotesCardModalAccordion from \"./QuotesCardModalAccordion\";\r\n\r\nimport { savedLPOsState } from \"../../actions/lpoTypes\";\r\n\r\nclass QuotesCardModal extends React.Component {\r\n  state = {\r\n    defaultSavedProformaInvoice: \"\",\r\n    LPOs: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Load Saved Proforma Invoice To Modal\r\n    this.props.savedLPOsState();\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    let toggle_exchange_rate_form = [];\r\n    let toggle_form2 = [];\r\n    let currency = [];\r\n    let exchange_rate = [];\r\n    let proforma_invoice = [];\r\n    let quotations = [];\r\n    let quotations_length = [];\r\n    let displayRecalculateBTN = [];\r\n    let saveProformaInvoice = [];\r\n\r\n    // Prevents Application From Init Start Error\r\n    if (localStorage.getItem(\"Saved Proforma Invoice\") === null) {\r\n      localStorage.setItem(\"Saved Proforma Invoice\", \"[]\");\r\n    }\r\n\r\n    // Get Saved Proforma Invoice From LS\r\n    const savedProformaInvoice = props.savedLPOsInState;\r\n\r\n    savedProformaInvoice.forEach((quotes) => {\r\n      toggle_exchange_rate_form.push(quotes.toggle_exchange_rate_form);\r\n      toggle_form2.push(quotes.toggle_form2);\r\n      currency.push(quotes.currency);\r\n      exchange_rate.push(quotes.exchange_rate);\r\n      proforma_invoice.push(quotes.proforma_invoice);\r\n      quotations.push(quotes.quotations);\r\n      quotations_length.push(quotes.quotations_length);\r\n      displayRecalculateBTN.push(quotes.displayRecalculateBTN);\r\n      saveProformaInvoice.push(quotes.saveProformaInvoice);\r\n    });\r\n\r\n    /*\r\n    Create Variables For Indevidual LPO And\r\n    Rearrange All Variables Into Their Individual LPOs\r\n    */\r\n    let lpo = [];\r\n    function createVariables() {\r\n      for (let i = 0; i < proforma_invoice.length; ++i) {\r\n        lpo[i] = [];\r\n\r\n        quotations.forEach((quote, index) => {\r\n          if (index === i) {\r\n            lpo[i].push(quote);\r\n          }\r\n        });\r\n\r\n        proforma_invoice.forEach((invoice, index) => {\r\n          if (index === i) {\r\n            lpo[i].push(invoice);\r\n          }\r\n        });\r\n\r\n        exchange_rate.forEach((fx, index) => {\r\n          if (index === i) {\r\n            lpo[i].push(fx);\r\n          }\r\n        });\r\n      }\r\n\r\n      return lpo;\r\n    }\r\n    const createVariablesArr = createVariables();\r\n\r\n    // Conbine All Objects Within Individual LPO To One Object\r\n    let lpoIndex = {};\r\n    createVariablesArr.forEach((createVariables, index) => {\r\n      lpoIndex[index] = {};\r\n      createVariables.forEach((variables) => {\r\n        lpoIndex[index] = Object.assign({}, lpoIndex[index], variables);\r\n      });\r\n      return lpoIndex;\r\n    });\r\n\r\n    const allProcessedLpoInvoice = [];\r\n    let idIncreament = 0;\r\n    // Loop Through The LPO Objects\r\n    Object.entries(lpoIndex).forEach(([key, valueO], index) => {\r\n      for (let x = 0; x < Object.keys(lpoIndex).length; x++) {\r\n        let allExpenses = [];\r\n        // let allExpenses;\r\n        let lpoObj = {};\r\n        if (index === x) {\r\n          Object.entries(valueO).forEach(([key, value]) => {\r\n            // For LPO Details\r\n            if (value.toString() !== \"[object Object]\") {\r\n              lpoObj[key] = value;\r\n            }\r\n\r\n            // For Quotation Expenses Details\r\n            // Conbine All Objects Within Individual LPO To One Object\r\n            if (value.toString() === \"[object Object]\") {\r\n              let quotationIndexObj = {};\r\n              Object.entries(value).forEach(([key, valueV], indexV) => {\r\n                // Name valueV\r\n                let discriptionName;\r\n                if (indexV === 0) {\r\n                  discriptionName = \"id\";\r\n                } else if (indexV === 1) {\r\n                  discriptionName = \"itemName\";\r\n                } else if (indexV === 2) {\r\n                  discriptionName = \"itemDescription\";\r\n                } else if (indexV === 3) {\r\n                  discriptionName = \"itemUnit\";\r\n                } else if (indexV === 4) {\r\n                  discriptionName = \"itemUnitPriceNaira\";\r\n                } else if (indexV === 5) {\r\n                  discriptionName = \"itemUnitPriceDollar\";\r\n                }\r\n\r\n                quotationIndexObj[discriptionName] = valueV;\r\n                return quotationIndexObj;\r\n              });\r\n              // Push Expenses Objects To All Expenses Array\r\n              allExpenses.push(quotationIndexObj);\r\n            }\r\n          });\r\n\r\n          //   const processedLpoInvoice = { lpoObj, allExpenses };\r\n          const processedLpoInvoice = Object.assign({}, lpoObj);\r\n          processedLpoInvoice.expenses = allExpenses;\r\n\r\n          idIncreament++;\r\n          processedLpoInvoice.id = idIncreament;\r\n\r\n          allProcessedLpoInvoice.push(processedLpoInvoice);\r\n        }\r\n      }\r\n    });\r\n\r\n    state.defaultSavedProformaInvoice = savedProformaInvoice;\r\n    state.LPOs = allProcessedLpoInvoice;\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { defaultSavedProformaInvoice, LPOs } = this.state;\r\n    return (\r\n      // The Modal\r\n      <div className=\"modal fade\" id=\"QuotesCardModal\">\r\n        <div className=\"modal-dialog modal-dialog-scrollable\">\r\n          <div className=\"modal-content\">\r\n            {/*  Modal Header */}\r\n            <div className=\"modal-header bg-info text-light\">\r\n              <h4 className=\"modal-title\">\r\n                Upload From Saved LPO <br />\r\n                <sup style={{ color: \"lightgray\" }}>v4.0.0</sup>\r\n              </h4>\r\n              <button\r\n                type=\"button\"\r\n                id=\"closeModal\"\r\n                className=\"close btn-outline-danger\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            {/*  Modal body  */}\r\n            <div className=\"modal-body\">\r\n              <QuotesCardModalAccordion\r\n                defaultSavedProformaInvoice={defaultSavedProformaInvoice}\r\n                LPOs={LPOs}\r\n              />\r\n            </div>\r\n\r\n            {/* Modal footer */}\r\n            <div\r\n              className=\"modal-footer\"\r\n              style={{ backgroundColor: \"lightgray\" }}\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nQuotesCardModal.propType = {\r\n  savedLPOsInState: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  savedLPOsInState: state.quotation.savedLPOsInState,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  savedLPOsState,\r\n})(QuotesCardModal);\r\n","import React, { Component } from \"react\";\r\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport QuotesHome from \"./components/quotations/QuotesHome\";\r\nimport EditForm from \"./components/quotations/EditForm\";\r\nimport Redirect from \"./components/quotations/Redirect\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\n\r\nimport FormulaModal from \"./components/layouts/FormulaModal\";\r\nimport QuotesCardModal from \"./components/quotations/QuotesCardModal\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport \"./fontawesome/css/all.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          {\r\n            // Intergrate React-ga with Google Analytics\r\n            ReactGA.initialize(\"UA-171142106-1\")\r\n\r\n            // ReactGA.initialize(\"UA-171142106-1\", {\r\n            //   debug: true,\r\n            //   titleCase: false,\r\n            //   gaOptions: {\r\n            //     userId: 123,\r\n            //     name: \"Proforma Invoice Calculator\",\r\n            //     siteSpeedSampleRate: 100,\r\n            //   },\r\n            // })\r\n          }\r\n          <ToastContainer />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={QuotesHome} />\r\n            <Route exact path=\"/update/:id\" component={EditForm} />\r\n            <Route exact path=\"/redirect\" component={Redirect} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n          <QuotesCardModal />\r\n          <FormulaModal />\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config); \n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}