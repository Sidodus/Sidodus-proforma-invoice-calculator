{"version":3,"sources":["reducers/quotationReducer.js","reducers/index.js","actions/types.js","store.js","actions/quotationStorageAction.js","components/JSnumberToWordProcessor/JSnumberToWordProcessor.js","actions/currencyStorageActions.js","actions/quotationTypes.js","components/quotations/Form.js","actions/currencyTypes.js","components/quotations/Form2.js","components/quotations/QuotesForm.js","components/quotations/Quotes.js","components/quotations/QuotesCard.js","components/layouts/Footer.js","components/quotations/QuotesHome.js","components/quotations/EditForm.js","App.js","serviceWorker.js","index.js"],"names":["initialState","quotations","proformaInvoice","currency","exchangeRate","combineReducers","quotation","state","action","type","payload","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","getStorageQuotations","localStorage","getItem","setItem","JSON","stringify","data","parse","length","getStorageProformaInvoice","nullInvoice","totalQuoteAmount","Number","lpoItemName","totalJobUnit","serviceCharge","vat","undefined","addStorageQuotation","newTask","push","addStorageProformaInvoice","proforma","updateStorageQuotation","filter","id","deleteStorageQuotation","JSnumberToWordProcessor","processCurString","curString","curString_16","curString_15","curString_14","curString_13","curString_12","curString_11","curString_10","curString_9","curString_8","curString_7","curString_6","curString_5","curString_4","curString_3","curString_2","curString_1","curStringTenseAndUnit","processedWord","processedWordDummy","illion","subStrStart","subStrLength","mainWord","alternateWord","mainWord2","alternateWord2","substr","processWordRegExMatch","llionRegEx","curStringNUMWord","curStringNUM1","curStringNUM2","NUM","curStringLength","llion1","llion2","llion3","llion4","ifMatchedRegEx","match","processRegExMatch","curString2Word","curString1","curString2","curString_NUM","hundred","tenseAndUnit","curStringTenseAndUnitWord","wordNum","funcTenseAndUnit","curStringTenseAndUnitToWord","tense_Unit","num","processedData","processedDataArray","numProcessor","displayNum","displayWord","Array","isArray","forEach","cur","toString","processNum","String","split","getStorageCurrency","senior","junior","sign","abbrevation","getStorageExchangeRate","naira","dollar","calculateNairaStorageExchangeRate","newQuotationExchangeRate","map","itemName","itemDescription","itemUnit","itemPrice","toFixed","reduce","acc","arr","calculateDollarStorageExchangeRate","addStorageCurrency","toggleStorageExchangeRateForm","toggleStorageForm2","addProformaInvoice","dispatch","a","Form","currencySenior","nigCurrency","initCurrency","getAllQuotation","document","getElementById","style","opacity","props","addCurrency","setState","calculateNairaExchangeRate","click","usaCurrency","calculateDollarExchangeRate","valueChanged","e","target","name","value","valueSubmited","preventDefault","newQuotationItem","uuid","addQuotation","display","toggleForm","this","placeholder1","inputGroupText1","placeholder2","inputGroupText2","placeholder4","inputGroupText4","onSubmit","onFocus","className","boxShadows","required","placeholder","onChange","onClick","React","Component","connect","res","ngn","usd","boxShadow","Form2","proformaInvioce","alert","toggleExchangeRateForm","placeholder3","inputGroupText3","QuotesForm","toggle1","toggle2","exchangedNaira","exchangedDollar","submitExchangeRate","addExchangeRate","getExchangeRate","backgroundImage","transform","paddingBottom","classnames","exchageRate","Quotes","storageCurrency","totalPrice","totalPrice0","totalPrice1","quotes","resetQuotes","clearAllQuotations","clearAllInvoice","confirm","deleteQuote","deleteQuotation","getQuotations","itemId","itemUnit0","itemUnit1","itemPrice0","itemPrice1","itemPriceTotal","itemPriceTotal0","itemPriceTotal1","Fragment","width","overflowX","border","backgroundColor","color","key","to","cursor","bind","propType","PropTypes","array","isRequired","func","QuotesCard","totalJobUnit0","totalJobUnit1","serviceCharge0","serviceCharge1","totalQuoteAmount0","totalQuoteAmount1","vat0","vat1","chargesPercentage","chargesPercentage0","chargesPercentage1","totalValue","totalValue0","totalValue1","vatPayable","vatPayable0","vatPayable1","totalPayableWithVat","totalPayableWithVat0","totalPayableWithVat1","unitPrice","unitPrice0","unitPrice1","unit1000Price","unit1000Price0","unit1000Price1","clearProformaInvoice","recaculateInvoice","storageProformaInvoice","getProformaInvoice","getCurrency","isNaN","Infinity","listStyleType","Footer","thisYear","Date","getFullYear","presentYear","textAlign","marginTop","marginBottom","QuotesHome","EditForm","currencySign","updateQuotation","history","params","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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E,WACAxB,EACAJ,EAAU,IACVA,EAAU,IACV,GACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACA3B,EACAD,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUrB,OAAe,CAG3B,IAAIwE,EAA8BF,EAChClE,OAAOiB,EAAU,GAAKA,EAAU,KAElCkB,GAAiBiC,EAGjB/B,EACE,EACApB,EAAUrB,OACV,eACA,iBACA,eACA,kBAKFiD,EACE,eACAd,EACAd,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAjB,EACAX,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACApB,EACAR,EAAU,GACVA,EAAU,IACV,GACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAvB,EACAL,EAAU,IACVA,EAAU,IACV,GACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACA1B,EACAF,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,IAiMJ,GArLyB,KAArBA,EAAUrB,cAGQS,IAAhB4B,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUrB,OACV,eACA,iBACA,eACA,kBAKFiD,EACE,eACAb,EACAf,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAhB,EACAZ,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAnB,EACAT,EAAU,GACVA,EAAU,GACV,GACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAtB,EACAN,EAAU,IACVA,EAAU,IACV,GACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAzB,EACAH,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUrB,SAIZ8D,EACEzB,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAf,EACAb,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAlB,EACAV,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACArB,EACAP,EAAU,IACVA,EAAU,IACV,GACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAxB,EACAJ,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUrB,OAAe,CAG3B,IAAIwE,EAA8BF,EAChClE,OAAOiB,EAAU,GAAKA,EAAU,KAElCkB,GAAiBiC,EAGjB/B,EACE,EACApB,EAAUrB,OACV,YACA,cACA,YACA,eAKFiD,EACE,YACAd,EACAd,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAjB,EACAX,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACApB,EACAR,EAAU,GACVA,EAAU,IACV,GACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAvB,EACAL,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,IAmKJ,GAvJyB,KAArBA,EAAUrB,cAGQS,IAAhB4B,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUrB,OACV,YACA,cACA,YACA,eAKFiD,EACE,YACAb,EACAf,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAhB,EACAZ,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAnB,EACAT,EAAU,GACVA,EAAU,GACV,GACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAtB,EACAN,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUrB,SAIZ8D,EACEzB,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAf,EACAb,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAlB,EACAV,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACArB,EACAP,EAAU,IACVA,EAAU,IACV,GACA,GACA,GACA,KAYqB,KAArBA,EAAUrB,OAAe,CAG3B,IAAIwE,EAA8BF,EAChClE,OAAOiB,EAAU,GAAKA,EAAU,KAElCkB,GAAiBiC,EAGjB/B,EACE,EACApB,EAAUrB,OACV,WACA,aACA,WACA,cAKFiD,EACE,WACAd,EACAd,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAjB,EACAX,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACApB,EACAR,EAAU,GACVA,EAAU,IACV,GACA,GACA,GACA,IAqIJ,GAzHyB,KAArBA,EAAUrB,cAGQS,IAAhB4B,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUrB,OACV,WACA,aACA,WACA,cAKFiD,EACE,WACAb,EACAf,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAhB,EACAZ,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAnB,EACAT,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAYqB,IAArBA,EAAUrB,SAIZ8D,EACEzB,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,WACA,cAOFiD,EACE,WACAf,EACAb,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAlB,EACAV,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAYqB,IAArBA,EAAUrB,OAAc,CAG1B,IAAIwE,EAA8BF,EAChClE,OAAOiB,EAAU,GAAKA,EAAU,KAElCkB,GAAiBiC,EAGjB/B,EACE,EACApB,EAAUrB,OACV,WACA,aACA,WACA,cAKFiD,EACE,WACAd,EACAd,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAjB,EACAX,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,IAuGJ,GA3FyB,IAArBA,EAAUrB,cAGQS,IAAhB4B,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUrB,OACV,WACA,aACA,WACA,cAKFiD,EACE,WACAb,EACAf,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAhB,EACAZ,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAYqB,IAArBA,EAAUrB,SAIZ8D,EACEzB,EACAhB,EAAU,GACVA,EAAU,GACV,EACAA,EAAUrB,OACV,YACA,eAOFiD,EACE,YACAf,EACAb,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAYqB,IAArBA,EAAUrB,OAAc,CAG1B,IAAIwE,EAA8BF,EAChClE,OAAOiB,EAAU,GAAKA,EAAU,KAElCkB,GAAiBiC,EAGjB/B,EACE,EACApB,EAAUrB,OACV,YACA,cACA,YACA,eAKFiD,EACE,YACAd,EACAd,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,IAmDJ,GAvCyB,IAArBA,EAAUrB,cAGQS,IAAhB4B,IACFE,GAAiBF,GAGnBI,EACE,EACApB,EAAUrB,OACV,YACA,cACA,YACA,eAKFiD,EACE,YACAb,EACAf,EAAU,GACVA,EAAU,GACV,GACA,GACA,GACA,KAaqB,IAArBA,EAAUrB,OAGZ,GAAwB,IAFFI,OAAOiB,EAAU2B,OAAO,EAAG3B,EAAUrB,SAEhC,CACzB,IAAIyE,EAAarE,OAAOiB,EAAU,GAAKA,EAAU,IACjDkB,EACEF,EAAc,gBAAkBiC,EAAQG,QAE1ClC,EAAgBF,EAAc,WAWlC,GAAyB,IAArBhB,EAAUrB,OAAc,CAC1B,IAAIyE,EAAarE,OAAOiB,EAAU,GAAKA,EAAU,IACjDkB,EAAgB+B,EAAQG,GAuB1B,OAbyB,IAArBpD,EAAUrB,SAEVuC,OADkB9B,IAAhB4B,EACcA,EAEA,QASbE,GAIH+B,EAAU,SAASI,GA+GvB,MAvGe,CACb,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,SACA,SACA,WACA,WACA,UACA,UACA,YACA,WACA,WACA,SACA,aACA,aACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,SACA,aACA,aACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,QACA,YACA,YACA,cACA,aACA,aACA,YACA,cACA,cACA,aACA,QACA,YACA,YACA,cACA,aACA,aACA,YACA,cACA,cACA,aACA,QACA,YACA,YACA,cACA,aACA,aACA,YACA,cACA,cACA,aACA,UACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,SACA,aACA,aACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,SACA,aACA,aACA,eACA,cACA,cACA,aACA,eACA,eACA,cACA,WAtGWA,EAAM,IA4GrB,OAAO,SAASA,GAKd,OAtjDiB,SAASA,GAC1B,IAAIrD,EACAsD,EAAgB,GAChBC,EAAqB,GA8BzB,SAASC,EAAaxD,GACpB,IAAIyD,EAAa,EACbC,EAAc,GA6MlB,OA3MI1D,EAAUrB,OAAS,IACrB8E,EAAazD,EAAU2B,OAAO,EAAG3B,EAAUrB,QAG3C+E,EACE,iGAC4B,KAArB1D,EAAUrB,QACnB8E,EACEzD,EAAU2B,OAAO,EAAG,GACpB,IACA3B,EAAU2B,OAAO3B,EAAUrB,OAAS,GAAI,GACxC,IACAqB,EAAU2B,OAAO3B,EAAUrB,OAAS,GAAI,GACxC,IACAqB,EAAU2B,OAAO3B,EAAUrB,OAAS,EAAG,GACvC,IACAqB,EAAU2B,OAAO3B,EAAUrB,OAAS,EAAG,GACvC,IACAqB,EAAU2B,OAAO3B,EAAUrB,OAAS,EAAGqB,EAAUrB,QAGnD+E,EAAc3D,EAAiBC,IACD,KAArBA,EAAUrB,QACnB8E,EACEzD,EAAU2B,OAAO,EAAG,GACpB,IACA3B,EAAU2B,OAAO3B,EAAUrB,OAAS,GAAI,GACxC,IACAqB,EAAU2B,OAAO3B,EAAUrB,OAAS,GAAI,GACxC,IACAqB,EAAU2B,OAAO3B,EAAUrB,OAAS,EAAG,GACvC,IACAqB,EAAU2B,OAAO3B,EAAUrB,OAAS,EAAG,GACvC,IACAqB,EAAU2B,OAAO3B,EAAUrB,OAAS,EAAGqB,EAAUrB,QAGnD+E,EAAc3D,EAAiBC,IACD,KAArB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","file":"static/js/main.b7c74556.chunk.js","sourcesContent":["import {\r\n  GET_QUOTATIONS,\r\n  GET_EDIT_QUOTATION,\r\n  GET_PROFORMA_INVOICE,\r\n  GET_CURRENCY,\r\n  GET_EXCHANGE_RATE,\r\n  NAIRA_EXCHANGE_RATE,\r\n  DOLLAR_EXCHANGE_RATE,\r\n  ADD_QUOTATION,\r\n  CLEAR_ALL_QUOTATIONS,\r\n  ADD_PROFORMA_INVOICE,\r\n  ADD_CURRENCY,\r\n  ADD_EXCHANGE_RATE,\r\n  UPDATE_QUOTATION,\r\n  DELETE_QUOTATION\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  quotations: [],\r\n  proformaInvoice: {},\r\n  currency: {},\r\n  exchangeRate: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_QUOTATIONS:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload\r\n      };\r\n    case GET_EDIT_QUOTATION:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload\r\n      };\r\n    case GET_PROFORMA_INVOICE:\r\n      return {\r\n        ...state,\r\n        proformaInvoice: action.payload\r\n      };\r\n    case GET_CURRENCY:\r\n      return {\r\n        ...state,\r\n        currency: action.payload\r\n      };\r\n    case GET_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        exchangeRate: action.payload\r\n      };\r\n    case NAIRA_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload\r\n      };\r\n    case DOLLAR_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload\r\n      };\r\n    case ADD_QUOTATION:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload\r\n      };\r\n    case CLEAR_ALL_QUOTATIONS:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload\r\n      };\r\n    case ADD_PROFORMA_INVOICE:\r\n      return {\r\n        ...state,\r\n        proformaInvoice: action.payload\r\n      };\r\n    case ADD_CURRENCY:\r\n      return {\r\n        ...state,\r\n        currency: action.payload\r\n      };\r\n    case ADD_EXCHANGE_RATE:\r\n      return {\r\n        ...state,\r\n        exchangeRate: action.payload\r\n      };\r\n    case UPDATE_QUOTATION:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload\r\n      };\r\n    case DELETE_QUOTATION:\r\n      return {\r\n        ...state,\r\n        quotations: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport quotationReducer from \"./quotationReducer\";\r\n\r\nexport default combineReducers({\r\n  quotation: quotationReducer\r\n});\r\n","export const GET_INIT_QUOTATIONS = \"GET_INIT_QUOTATIONS\";\r\nexport const GET_QUOTATIONS = \"GET_QUOTATIONS\";\r\nexport const GET_EDIT_QUOTATION = \"GET_EDIT_QUOTATION\";\r\nexport const GET_PROFORMA_INVOICE = \"GET_PROFORMA_INVOICE\";\r\nexport const GET_CURRENCY = \"GET_CURRENCY\";\r\nexport const GET_EXCHANGE_RATE = \"GET_EXCHANGE_RATE\";\r\nexport const ADD_QUOTATION = \"ADD_QUOTATION\";\r\nexport const CLEAR_ALL_QUOTATIONS = \"CLEAR_ALL_QUOTATIONS\";\r\nexport const ADD_PROFORMA_INVOICE = \"ADD_PROFORMA_INVOICE\";\r\nexport const ADD_CURRENCY = \"ADD_CURRENCY\";\r\nexport const ADD_EXCHANGE_RATE = \"ADD_EXCHANGE_RATE\";\r\nexport const UPDATE_QUOTATION = \"UPDATE_QUOTATION\";\r\nexport const DELETE_QUOTATION = \"DELETE_QUOTATION\";\r\nexport const NAIRA_EXCHANGE_RATE = \"NAIRA_EXCHANGE_RATE\";\r\nexport const DOLLAR_EXCHANGE_RATE = \"DOLLAR_EXCHANGE_RATE\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","export const getStorageQuotations = () => {\r\n  // Check  If Quotations Exist\r\n  if (\r\n    localStorage.getItem(\"quotations\") === null ||\r\n    localStorage.getItem(\"quotations\") === \"\"\r\n  ) {\r\n    localStorage.setItem(\"quotations\", JSON.stringify([]));\r\n  }\r\n\r\n  if (\r\n    localStorage.getItem(\"quotations_length\") === null ||\r\n    localStorage.getItem(\"quotations_length\") === \"\"\r\n  ) {\r\n    localStorage.setItem(\"quotations_length\", JSON.stringify(0));\r\n  }\r\n\r\n  // Get All Quotations\r\n  const data = JSON.parse(localStorage.getItem(\"quotations\"));\r\n\r\n  //  Save Length Of Quotations\r\n  localStorage.setItem(\"quotations_length\", JSON.stringify(data.length));\r\n\r\n  return data;\r\n};\r\n\r\nexport const getStorageProformaInvoice = () => {\r\n  const nullInvoice = {\r\n    totalQuoteAmount: Number(),\r\n    lpoItemName: \"\",\r\n    totalJobUnit: Number(),\r\n    serviceCharge: Number(),\r\n    vat: Number()\r\n  };\r\n  // Check  If Proforma Invoice Exist\r\n  if (\r\n    localStorage.getItem(\"proforma_invoice\") === null ||\r\n    localStorage.getItem(\"proforma_invoice\") === \"\" ||\r\n    localStorage.getItem(\"proforma_invoice\") === undefined\r\n  ) {\r\n    localStorage.setItem(\"proforma_invoice\", JSON.stringify(nullInvoice));\r\n  }\r\n\r\n  // Get Proforma Invoice\r\n  const data = JSON.parse(localStorage.getItem(\"proforma_invoice\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const get_EditStorageQuotation = site_ID => {\r\n  const quotations = getStorageQuotations();\r\n  // Filter Out Todo\r\n  const newQuotations = quotations.filter(\r\n    quotation => quotation.id === site_ID\r\n  );\r\n\r\n  return newQuotations;\r\n};\r\n\r\nexport const addStorageQuotation = newTask => {\r\n  const data = getStorageQuotations();\r\n  // Add New Task To List\r\n  data.push(newTask);\r\n  // Save To Storage\r\n  localStorage.setItem(\"quotations\", JSON.stringify(data));\r\n\r\n  return data;\r\n};\r\n\r\nexport const clearAllStorageQuotations = () => {\r\n  localStorage.setItem(\"quotations\", JSON.stringify([]));\r\n  localStorage.setItem(\"quotations_length\", JSON.stringify(0));\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"quotations\"));\r\n  return data;\r\n};\r\n\r\nexport const addStorageProformaInvoice = proforma => {\r\n  localStorage.setItem(\"proforma_invoice\", JSON.stringify(proforma));\r\n\r\n  // return proforma;\r\n};\r\n\r\nexport const updateStorageQuotation = newTask => {\r\n  const quotations = getStorageQuotations();\r\n  const data = quotations.filter(quotation => quotation.id !== newTask.id);\r\n  // Add New Task To List\r\n  data.push(newTask);\r\n  // Save To Storage\r\n  localStorage.setItem(\"quotations\", JSON.stringify(data));\r\n  //  Save New Length Of Todo\r\n  localStorage.setItem(\"quotations_length\", JSON.stringify(data.length));\r\n\r\n  return data;\r\n};\r\n\r\nexport const deleteStorageQuotation = id => {\r\n  const quotations = getStorageQuotations();\r\n  const data = quotations.filter(quotation => quotation.id !== id);\r\n  localStorage.setItem(\"quotations\", JSON.stringify(data));\r\n  //  Save New Length Of Todo\r\n  localStorage.setItem(\"quotations_length\", JSON.stringify(data.length));\r\n\r\n  return data;\r\n};\r\n","/*\r\n ** JavaScript Number To Word Processor Is Developed By Saheed Odulaja As A JavaScript Coding Exercise.\r\n ** Feel Free To Fork The Repository as There Is Always Room For Improvement.\r\n ** Also Be Kind Enough To Leave A STAR As A Mark Of Encouragement :)\r\n ** Reposiitory @ https://github.com/Sidodus/JavaScript-Number-To-Word-Processor.\r\n */\r\n\r\nexport const JSnumberToWordProcessor = (function() {\r\n  const processNum = function(num) {\r\n    let curString;\r\n    let processedData = \"\";\r\n    let processedDataArray = [];\r\n\r\n    // if(num !== Number()){\r\n    //     console.log('num is not number')\r\n    //     return\r\n    // }\r\n    // Process Number If Number Is An Array OR A Single Number\r\n    if (Array.isArray(num)) {\r\n      num.forEach(function(cur) {\r\n        curString = cur.toString();\r\n\r\n        // Process Number & Get Readable Number With Word\r\n        processedData = numProcessor(curString);\r\n\r\n        // Parse The Object Into An Array\r\n        processedDataArray.push(processedData);\r\n      });\r\n      //  eslint-disable-next-line no-undef\r\n      // } else if (num == BigInt(num)) {\r\n    } else if (num) {\r\n      curString = num.toString();\r\n\r\n      // Process Number & Get Readable Number With Word\r\n      processedData = numProcessor(curString);\r\n\r\n      // Parse The Object Into An Array\r\n      processedDataArray.push(processedData);\r\n    } // END OF if (Array.isArray(num))\r\n\r\n    // Number Processor(Format Number To A Readable Number & Call processCurString() To Process Number To Word)\r\n    function numProcessor(curString) {\r\n      let displayNum = 0;\r\n      let displayWord = \"\";\r\n\r\n      if (curString.length > 18) {\r\n        displayNum = curString.substr(0, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord =\r\n          \"SORRY: THIS APP CURRENTLY SUPPORT ONLY NUMBERS BETWEEN ONE(1) & QUADRILLION ( 10 \\u00B9\\u2077 )\";\r\n      } else if (curString.length === 18) {\r\n        displayNum =\r\n          curString.substr(0, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 15, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 17) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 15, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 16) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 15, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 15) {\r\n        displayNum =\r\n          curString.substr(0, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 14) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 13) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 12) {\r\n        displayNum =\r\n          curString.substr(curString.length - 12, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 11) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 10) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 9) {\r\n        displayNum =\r\n          curString.substr(curString.length - 9, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 8) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 7) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 6, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 6) {\r\n        displayNum =\r\n          curString.substr(0, 3) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 5) {\r\n        displayNum =\r\n          curString.substr(0, 2) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 4) {\r\n        displayNum =\r\n          curString.substr(0, 1) +\r\n          \",\" +\r\n          curString.substr(curString.length - 3, curString.length);\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 3) {\r\n        displayNum = curString;\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 2) {\r\n        displayNum = curString;\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      } else if (curString.length === 1) {\r\n        displayNum = curString;\r\n\r\n        // Call A Function & Pass curString\r\n        displayWord = processCurString(curString);\r\n      }\r\n\r\n      return {\r\n        displayNum,\r\n        displayWord\r\n      };\r\n    } // END OF numProcessor()\r\n\r\n    return processedDataArray;\r\n  }; // END OF processNum(num)\r\n\r\n  // Process Number To Word\r\n  const processCurString = function(curString) {\r\n    let curString_16,\r\n      curString_15,\r\n      curString_14,\r\n      curString_13,\r\n      curString_12,\r\n      curString_11,\r\n      curString_10,\r\n      curString_9,\r\n      curString_8,\r\n      curString_7,\r\n      curString_6,\r\n      curString_5,\r\n      curString_4,\r\n      curString_3,\r\n      curString_2,\r\n      curString_1;\r\n\r\n    let curStringTenseAndUnit = 0;\r\n    let processedWord = \"\";\r\n    let processedWordDummy = \"\";\r\n\r\n    curString_1 = wordNum(Number(curString[0]));\r\n    curString_2 = wordNum(Number(curString[1]));\r\n    curString_3 = wordNum(Number(curString[2]));\r\n    curString_4 = wordNum(Number(curString[3]));\r\n    curString_5 = wordNum(Number(curString[4]));\r\n    curString_6 = wordNum(Number(curString[5]));\r\n    curString_7 = wordNum(Number(curString[6]));\r\n    curString_8 = wordNum(Number(curString[7]));\r\n    curString_9 = wordNum(Number(curString[8]));\r\n    curString_10 = wordNum(Number(curString[9]));\r\n    curString_11 = wordNum(Number(curString[10]));\r\n    curString_12 = wordNum(Number(curString[11]));\r\n    curString_13 = wordNum(Number(curString[12]));\r\n    curString_14 = wordNum(Number(curString[13]));\r\n    curString_15 = wordNum(Number(curString[14]));\r\n    curString_16 = wordNum(Number(curString[15]));\r\n    // curString_17 = wordNum(Number(curString[16]));\r\n    // curString_18 = wordNum(Number(curString[17]));\r\n\r\n    // Format The illion eg Trillion, Billion, Million, Thousand etc\r\n    // NOTE: The mainWord2, & alternateWord2 is For processedWordDummy RegEX match()\r\n    function illion(\r\n      subStrStart,\r\n      subStrLength,\r\n      mainWord,\r\n      alternateWord,\r\n      mainWord2,\r\n      alternateWord2\r\n    ) {\r\n      if (Number(curString.substr(subStrStart, subStrLength)) === 0) {\r\n        processedWord += mainWord;\r\n        // Save To processedWordDummy For RegEX match()\r\n        processedWordDummy = mainWord2;\r\n      } else {\r\n        processedWord += alternateWord;\r\n        // Save To processedWordDummy For RegEX match()\r\n        processedWordDummy = alternateWord2;\r\n      }\r\n    } // END OF illion()\r\n\r\n    /*\r\n     ** Match RegEx With Privious illion eg Trillion, Billion, Million\r\n     ** Matched 'string' Means The If Statement Would Run\r\n     */\r\n    function processWordRegExMatch(\r\n      llionRegEx,\r\n      curStringNUMWord,\r\n      curStringNUM1,\r\n      curStringNUM2,\r\n      NUM,\r\n      curStringLength,\r\n      llion1,\r\n      llion2,\r\n      llion3,\r\n      llion4\r\n    ) {\r\n      let ifMatchedRegEx = llionRegEx;\r\n\r\n      if (processedWordDummy.match(ifMatchedRegEx)) {\r\n        // NOTE: The 2nd Set Of illion(3&4) would Be Parsed To processedWordDummy For RegEX match()\r\n        processRegExMatch(\r\n          curStringNUMWord,\r\n          curStringNUM1,\r\n          curStringNUM2,\r\n          NUM,\r\n          curStringLength,\r\n          llion1,\r\n          llion2,\r\n          llion3,\r\n          llion4\r\n        );\r\n      }\r\n    } // END OF processWordRegExMatch()\r\n\r\n    function processRegExMatch(\r\n      curString2Word,\r\n      curString1,\r\n      curString2,\r\n      NUM,\r\n      curStringLength,\r\n      llion1,\r\n      llion2\r\n    ) {\r\n      // Bind The Tense & Unit to Number\r\n      curStringTenseAndUnit = Number(curString1 + curString2);\r\n\r\n      // Handle The Hundred, Tense, & Unit\r\n      funcTenseAndUnit(curString2Word, \" Hundred\", curStringTenseAndUnit);\r\n\r\n      // Determine How The illion Is Formatted eg. Trillion, Billion, Million etc.\r\n      // This Reformats The Words If The Remaining Number Are Just LEADING ZERO's\r\n      // =================================================================================\r\n      // NOTE: The llion1, & llion2 is To Be Parsed To processedWordDummy For RegEX match()\r\n      // eslint-disable-next-line eqeqeq\r\n      if (curString2Word !== undefined || curStringTenseAndUnit != 0) {\r\n        illion(NUM, curStringLength, llion1, llion2, llion1, llion2);\r\n      } else {\r\n        illion(NUM, curStringLength, \"\", \"\", llion1, llion2);\r\n      }\r\n    } // END OF processRegExMatch()\r\n\r\n    // Convert All Tense & Unit To Word\r\n    function funcTenseAndUnit(curString_NUM, hundred, tenseAndUnit) {\r\n      if (curString_NUM !== undefined) {\r\n        processedWord += curString_NUM + hundred;\r\n      }\r\n      let curStringTenseAndUnitWord = wordNum(tenseAndUnit);\r\n\r\n      // Don't Display if Last Unit Is Zero\r\n      if (curStringTenseAndUnitWord !== undefined) {\r\n        // Prevent processedWord from Displaying Double Spacing Before (and) if curString_NUM == undefined\r\n        if (curString_NUM !== undefined) {\r\n          processedWord += \" and \" + curStringTenseAndUnitWord;\r\n        } else {\r\n          processedWord += \"and \" + curStringTenseAndUnitWord;\r\n        }\r\n      }\r\n    } // END OF funcTenseAndUnit()\r\n\r\n    // Handles 18 Length Number\r\n    if (curString.length === 18) {\r\n      // (1-3) ************************INIT ************************** 100,000,000,000,000,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456,789,012,345,678\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \",\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \"\r\n      );\r\n\r\n      // (4-6) ************************************************\r\n      // Don't Display Trillion If Previous Quadrillion Is Closed eg 100,000,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Quadrillion,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        6,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (7-9) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 100,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_7,\r\n        curString[7],\r\n        curString[8],\r\n        9,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (10-12) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 100,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_10,\r\n        curString[10],\r\n        curString[11],\r\n        12,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (13-15) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 100,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_13,\r\n        curString[13],\r\n        curString[14],\r\n        15,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (16-18) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_16,\r\n        curString[16],\r\n        curString[17],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 18)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 17 Length Number\r\n    if (curString.length === 17) {\r\n      // (1-2) ************************INIT ************************** 10,000,000,000,000,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345,678,901,234,567\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \",\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \"\r\n      );\r\n\r\n      // (3-5) ************************************************\r\n      // Don't Display Trillion If Previous Quadrillion Is Closed eg 10,000,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Quadrillion,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        5,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (6-8) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 10,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_6,\r\n        curString[6],\r\n        curString[7],\r\n        8,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (9-11) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 10,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_9,\r\n        curString[9],\r\n        curString[10],\r\n        11,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (12-14) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 10,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_12,\r\n        curString[12],\r\n        curString[13],\r\n        14,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (15-17) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_15,\r\n        curString[15],\r\n        curString[16],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 17)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 16 Length Number\r\n    if (curString.length === 16) {\r\n      // (1) ************************INIT ************************** 1,000,000,000,000,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \",\r\n        \" Quadrillion\",\r\n        \" Quadrillion, \"\r\n      );\r\n\r\n      // (2-4) ************************************************\r\n      // Don't Display Trillion If Previous Quadrillion Is Closed eg 1,000,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Quadrillion,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        4,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (5-7) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 1,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_5,\r\n        curString[5],\r\n        curString[6],\r\n        7,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (8-10) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 1,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_8,\r\n        curString[8],\r\n        curString[9],\r\n        10,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // 11-13) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 1,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_11,\r\n        curString[11],\r\n        curString[12],\r\n        13,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (14-16) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_14,\r\n        curString[14],\r\n        curString[15],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 16)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 15 Length Number\r\n    if (curString.length === 15) {\r\n      // (1-3) ************************INIT ************************** 100,000,000,000,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456,789,012,345\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (4-6) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 100,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        6,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (7-9) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 100,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_7,\r\n        curString[7],\r\n        curString[8],\r\n        9,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (10-12) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 100,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_10,\r\n        curString[10],\r\n        curString[11],\r\n        12,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (13-15) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_13,\r\n        curString[13],\r\n        curString[14],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 15)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 14 Length Number\r\n    if (curString.length === 14) {\r\n      // (1-2) ************************INIT ************************** 10,000,000,000,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345,678,901,234\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (3-5) ************************************************\r\n      // Don't Display Billion If Previous Billion Is Closed eg 10,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        5,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (6-8) ************************************************\r\n      // Don't Display Billion If Previous Billion Is Closed eg 10,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_6,\r\n        curString[6],\r\n        curString[7],\r\n        8,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (9-11) ************************************************\r\n      // Don't Display Million If Previous Million Is Closed eg 10,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_9,\r\n        curString[9],\r\n        curString[10],\r\n        11,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (12-14) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_12,\r\n        curString[12],\r\n        curString[13],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 14)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 13 Length Number\r\n    if (curString.length === 13) {\r\n      // (1) ************************INIT ************************** 1,000,000,000,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Trillion\",\r\n        \" Trillion, \",\r\n        \" Trillion\",\r\n        \" Trillion, \"\r\n      );\r\n\r\n      // (2-4) ************************************************\r\n      // Don't Display Billion If Previous Trillion Is Closed eg 1,000,000,000,000\r\n      processWordRegExMatch(\r\n        \"Trillion,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        4,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (5-7) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 1,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_5,\r\n        curString[5],\r\n        curString[6],\r\n        7,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (8-10) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 1,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_8,\r\n        curString[8],\r\n        curString[9],\r\n        10,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (11-13) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_11,\r\n        curString[11],\r\n        curString[12],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 13)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 12 Length Number\r\n    if (curString.length === 12) {\r\n      // (1-3) ************************INIT ************************** 100,000,000,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456,789,012\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (4-6) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 100,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        6,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (7-9) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 100,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_7,\r\n        curString[7],\r\n        curString[8],\r\n        9,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (10-12) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_10,\r\n        curString[10],\r\n        curString[11],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 12)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 11 Length Number\r\n    if (curString.length === 11) {\r\n      // (1-2) ************************INIT ************************** 10,000,000,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345,678,901\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (3-5) ************************************************\r\n      // Don't Display Billion If Previous Billion Is Closed eg 10,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        5,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (6-8) ************************************************\r\n      // Don't Display Million If Previous Million Is Closed eg 10,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_6,\r\n        curString[6],\r\n        curString[7],\r\n        8,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (9-11) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_9,\r\n        curString[9],\r\n        curString[10],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 11)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 10 Length Number\r\n    if (curString.length === 10) {\r\n      // (1) ************************INIT ************************** 1,000,000,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Billion\",\r\n        \" Billion, \",\r\n        \" Billion\",\r\n        \" Billion, \"\r\n      );\r\n\r\n      // (2-4) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 1,000,000,000\r\n      processWordRegExMatch(\r\n        \"Billion,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        4,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (5-7) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 1,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_5,\r\n        curString[5],\r\n        curString[6],\r\n        7,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (8-10) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_8,\r\n        curString[8],\r\n        curString[9],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 10)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 9 Length Number\r\n    if (curString.length === 9) {\r\n      // (1-3) ************************INIT ************************** 100,000,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456,789\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (4-6) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 100,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        6,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (7-9) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_7,\r\n        curString[7],\r\n        curString[8],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 9)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 8 Length Number\r\n    if (curString.length === 8) {\r\n      // (1-2) ************************INIT ************************** 10,000,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345,678\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (3-5) ************************************************\r\n      // Don't Display Thousand If Previous Million Is Closed eg 10,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        5,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (6-8) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_6,\r\n        curString[6],\r\n        curString[7],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 8)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 7 Length Number\r\n    if (curString.length === 7) {\r\n      // (1) ************************INIT ************************** 1,000,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Million\",\r\n        \" Million, \",\r\n        \" Million\",\r\n        \" Million, \"\r\n      );\r\n\r\n      // (2-4) ************************************************\r\n      // Don't Display Million If Previous Billion Is Closed eg 1,000,000\r\n      processWordRegExMatch(\r\n        \"Million,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        4,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (5-7) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_5,\r\n        curString[5],\r\n        curString[6],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 7)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 6 Length Number\r\n    if (curString.length === 6) {\r\n      // (1-3) ************************INIT ************************** 100,000 etc.\r\n      // Init For Non-Round Unit e.g 123,456\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      processRegExMatch(\r\n        curString_1,\r\n        curString[1],\r\n        curString[2],\r\n        3,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (4-6) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 100,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_4,\r\n        curString[4],\r\n        curString[5],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 6)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 5 Length Number\r\n    if (curString.length === 5) {\r\n      // (1-2) ************************INIT ************************** 10,000 etc.\r\n      // Init For Non-Round Tense e.g 12,345\r\n      let curStringTenseAndUnitToWord = wordNum(\r\n        Number(curString[0] + curString[1])\r\n      );\r\n      processedWord += curStringTenseAndUnitToWord;\r\n\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        2,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (3-5) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Thousand Is Closed eg 10,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_3,\r\n        curString[3],\r\n        curString[4],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 5)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 4 Length Number\r\n    if (curString.length === 4) {\r\n      // (1) ************************INIT ************************** 1,000 etc.\r\n      // Init illion Unit\r\n      if (curString_1 !== undefined) {\r\n        processedWord += curString_1;\r\n      }\r\n      // NOTE: The 2nd Set Of illion would Be Parsed To processedWordDummy For RegEX match()\r\n      illion(\r\n        1,\r\n        curString.length,\r\n        \" Thousand\",\r\n        \" Thousand, \",\r\n        \" Thousand\",\r\n        \" Thousand, \"\r\n      );\r\n\r\n      // (2-4) ***********************FINAL*************************\r\n      // Determine How The Hundred Is Formatted If Previous Million Is Closed eg 1,000\r\n      processWordRegExMatch(\r\n        \"Thousand,\",\r\n        curString_2,\r\n        curString[2],\r\n        curString[3],\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\"\r\n      );\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 4)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 3 Length Number\r\n    // (1-3) ************************INIT ************************** 123 etc.\r\n    if (curString.length === 3) {\r\n      let curStringSubStr = Number(curString.substr(1, curString.length));\r\n\r\n      if (curStringSubStr !== 0) {\r\n        let tense_Unit = Number(curString[1] + curString[2]);\r\n        processedWord =\r\n          curString_1 + \" Hundred and \" + wordNum(tense_Unit);\r\n      } else {\r\n        processedWord = curString_1 + \" Hundred\";\r\n      }\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 3)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 2 Length Number\r\n    // (1 & 2) ************************INIT ************************** 12 etc.\r\n    if (curString.length === 2) {\r\n      let tense_Unit = Number(curString[0] + curString[1]);\r\n      processedWord = wordNum(tense_Unit);\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 2)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    // Handles 1 Length Number\r\n    // (1) ************************INIT ************************** 1 etc.\r\n    if (curString.length === 1) {\r\n      if (curString_1 !== undefined) {\r\n        processedWord = curString_1;\r\n      } else {\r\n        processedWord = \"Zero\";\r\n      }\r\n\r\n      // // End Word With Full Stop\r\n      // processedWord += '.';\r\n    } // END OF if(curString.length === 1)\r\n\r\n    // ((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\r\n\r\n    return processedWord;\r\n  }; // END OF processCurString()\r\n\r\n  // Default Tense & Unit\r\n  const wordNum = function(num) {\r\n    /*\r\n     ** Num Checking Must Not Include 0, Else It Will Make App Buggy\r\n     ** Leading 0s are Read As undefined and Left Out Within Hundred, Tense & Unit (This Is To Ensure Readability)\r\n     ** 0 ('Zero')  Is Included Within {if(curString.length === 1)} Statement\r\n     */\r\n    let newNum = num - 1;\r\n\r\n    let firstNum = [\r\n      \"One\",\r\n      \"Two\",\r\n      \"Three\",\r\n      \"Four\",\r\n      \"Five\",\r\n      \"Six\",\r\n      \"Seven\",\r\n      \"Eight\",\r\n      \"Nine\",\r\n      \"Ten\",\r\n      \"Eleven\",\r\n      \"Twelve\",\r\n      \"Thirteen\",\r\n      \"Fourteen\",\r\n      \"Fifteen\",\r\n      \"Sixteen\",\r\n      \"Seventeen\",\r\n      \"Eighteen\",\r\n      \"Nineteen\",\r\n      \"Twenty\",\r\n      \"Twenty-One\",\r\n      \"Twenty-Two\",\r\n      \"Twenty-Three\",\r\n      \"Twenty-Four\",\r\n      \"Twenty-Five\",\r\n      \"Twenty-Six\",\r\n      \"Twenty-Seven\",\r\n      \"Twenty-Eight\",\r\n      \"Twenty-Nine\",\r\n      \"Thirty\",\r\n      \"Thirty-One\",\r\n      \"Thirty-Two\",\r\n      \"Thirty-Three\",\r\n      \"Thirty-Four\",\r\n      \"Thirty-Five\",\r\n      \"Thirty-Six\",\r\n      \"Thirty-Seven\",\r\n      \"Thirty-Eight\",\r\n      \"Thirty-Nine\",\r\n      \"Forty\",\r\n      \"Forty-One\",\r\n      \"Forty-Two\",\r\n      \"Forty-Three\",\r\n      \"Forty-Four\",\r\n      \"Forty-Five\",\r\n      \"Forty-Six\",\r\n      \"Forty-Seven\",\r\n      \"Forty-Eight\",\r\n      \"Forty-Nine\",\r\n      \"Fifty\",\r\n      \"Fifty-One\",\r\n      \"Fifty-Two\",\r\n      \"Fifty-Three\",\r\n      \"Fifty-Four\",\r\n      \"Fifty-Five\",\r\n      \"Fifty-Six\",\r\n      \"Fifty-Seven\",\r\n      \"Fifty-Eight\",\r\n      \"Fifty-Nine\",\r\n      \"Sixty\",\r\n      \"Sixty-One\",\r\n      \"Sixty-Two\",\r\n      \"Sixty-Three\",\r\n      \"Sixty-Four\",\r\n      \"Sixty-Five\",\r\n      \"Sixty-Six\",\r\n      \"Sixty-Seven\",\r\n      \"Sixty-Eight\",\r\n      \"Sixty-Nine\",\r\n      \"Seventy\",\r\n      \"Seventy-One\",\r\n      \"Seventy-Two\",\r\n      \"Seventy-Three\",\r\n      \"Seventy-Four\",\r\n      \"Seventy-Five\",\r\n      \"Seventy-Six\",\r\n      \"Seventy-Seven\",\r\n      \"Seventy-Eight\",\r\n      \"Seventy-Nine\",\r\n      \"Eighty\",\r\n      \"Eighty-One\",\r\n      \"Eighty-Two\",\r\n      \"Eighty-Three\",\r\n      \"Eighty-Four\",\r\n      \"Eighty-Five\",\r\n      \"Eighty-Six\",\r\n      \"Eighty-Seven\",\r\n      \"Eighty-Eight\",\r\n      \"Eighty-Nine\",\r\n      \"Ninety\",\r\n      \"Ninety-One\",\r\n      \"Ninety-Two\",\r\n      \"Ninety-Three\",\r\n      \"Ninety-Four\",\r\n      \"Ninety-Five\",\r\n      \"Ninety-Six\",\r\n      \"Ninety-Seven\",\r\n      \"Ninety-Eight\",\r\n      \"Ninety-Nine\",\r\n      \"Hundred\"\r\n    ];\r\n\r\n    return firstNum[newNum];\r\n  }; // END OF wordNum()\r\n\r\n  return function(num) {\r\n    // console.log(\"NUM\", num)\r\n    let numSplit = String(num).split(\".\");\r\n    // console.log(Array.isArray(numSplit))\r\n    // console.log('NUM SPLIT', numSplit)\r\n    return processNum(numSplit);\r\n  }; // END OF process()\r\n})(); // END OF numberToWord\r\n","import { getStorageQuotations } from \"./quotationStorageAction\";\r\nimport { JSnumberToWordProcessor } from \"../components/JSnumberToWordProcessor/JSnumberToWordProcessor\";\r\n\r\nexport const getStorageCurrency = () => {\r\n  if (localStorage.getItem(\"currency\") === null) {\r\n    localStorage.setItem(\r\n      \"currency\",\r\n      JSON.stringify({\r\n        senior: \"Naira\",\r\n        junior: \"kobo\",\r\n        sign: \"₦\",\r\n        abbrevation: \"NGN\"\r\n      })\r\n    );\r\n  }\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"currency\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const getStorageExchangeRate = () => {\r\n  if (localStorage.getItem(\"exchange_rate\") === null) {\r\n    localStorage.setItem(\r\n      \"exchange_rate\",\r\n      JSON.stringify({ naira: 365, dollar: 1 })\r\n    );\r\n  }\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"exchange_rate\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const calculateNairaStorageExchangeRate = exchangeRate => {\r\n  const getAllQuotation = getStorageQuotations();\r\n\r\n  const quotationExchangeRate = getAllQuotation.map(quotations => ({\r\n    id: quotations.id,\r\n    itemName: quotations.itemName,\r\n    itemDescription: quotations.itemDescription,\r\n    itemUnit: quotations.itemUnit,\r\n    itemPrice:\r\n      JSnumberToWordProcessor(\r\n        String(\r\n          Number(quotations.itemPrice).toFixed(2) *\r\n            Number(exchangeRate).toFixed(2)\r\n        )\r\n      ).length === 2\r\n        ? JSnumberToWordProcessor(\r\n            String(\r\n              Number(quotations.itemPrice).toFixed(2) *\r\n                Number(exchangeRate).toFixed(2)\r\n            )\r\n          )[0].displayNum +\r\n          \".\" +\r\n          JSnumberToWordProcessor(\r\n            String(\r\n              (\r\n                Number(quotations.itemPrice).toFixed(2) *\r\n                Number(exchangeRate).toFixed(2)\r\n              ).toFixed(2) // toFixed(2) here to format decimal\r\n            )\r\n          )[1].displayNum\r\n        : JSnumberToWordProcessor(\r\n            String(\r\n              Number(quotations.itemPrice).toFixed(2) *\r\n                Number(exchangeRate).toFixed(2)\r\n            )\r\n          )[0].displayNum\r\n  }));\r\n  const newQuotationExchangeRate = quotationExchangeRate.map(quotations => ({\r\n    id: quotations.id,\r\n    itemName: quotations.itemName,\r\n    itemDescription: quotations.itemDescription,\r\n    itemUnit: quotations.itemUnit,\r\n    itemPrice: quotations.itemPrice.split(\",\").reduce((acc, arr) => {\r\n      return acc + arr;\r\n    })\r\n  }));\r\n\r\n  localStorage.setItem(\"quotations\", JSON.stringify(newQuotationExchangeRate));\r\n\r\n  return newQuotationExchangeRate;\r\n};\r\n\r\nexport const calculateDollarStorageExchangeRate = exchangeRate => {\r\n  const getAllQuotation = getStorageQuotations();\r\n\r\n  const quotationExchangeRate = getAllQuotation.map(quotations => ({\r\n    id: quotations.id,\r\n    itemName: quotations.itemName,\r\n    itemDescription: quotations.itemDescription,\r\n    itemUnit: quotations.itemUnit,\r\n    itemPrice:\r\n      JSnumberToWordProcessor(\r\n        String(\r\n          Number(quotations.itemPrice).toFixed(2) /\r\n            Number(exchangeRate).toFixed(2)\r\n        )\r\n      ).length === 2\r\n        ? JSnumberToWordProcessor(\r\n            String(\r\n              Number(quotations.itemPrice).toFixed(2) /\r\n                Number(exchangeRate).toFixed(2)\r\n            )\r\n          )[0].displayNum +\r\n          \".\" +\r\n          JSnumberToWordProcessor(\r\n            String(\r\n              (\r\n                Number(quotations.itemPrice).toFixed(2) /\r\n                Number(exchangeRate).toFixed(2)\r\n              ).toFixed(2) // toFixed(2) here to format decimal\r\n            )\r\n          )[1].displayNum\r\n        : JSnumberToWordProcessor(\r\n            String(\r\n              Number(quotations.itemPrice).toFixed(2) /\r\n                Number(exchangeRate).toFixed(2)\r\n            )\r\n          )[0].displayNum\r\n  }));\r\n\r\n  const newQuotationExchangeRate = quotationExchangeRate.map(quotations => ({\r\n    id: quotations.id,\r\n    itemName: quotations.itemName,\r\n    itemDescription: quotations.itemDescription,\r\n    itemUnit: quotations.itemUnit,\r\n    itemPrice: quotations.itemPrice.split(\",\").reduce((acc, arr) => {\r\n      return acc + arr;\r\n    })\r\n  }));\r\n\r\n  localStorage.setItem(\"quotations\", JSON.stringify(newQuotationExchangeRate));\r\n\r\n  return newQuotationExchangeRate;\r\n};\r\n\r\nexport const addStorageCurrency = currency => {\r\n  localStorage.setItem(\r\n    \"currency\",\r\n    JSON.stringify({\r\n      senior: currency.senior,\r\n      junior: currency.junior,\r\n      sign: currency.sign,\r\n      abbrevation: currency.abbrevation\r\n    })\r\n  );\r\n};\r\n\r\nexport const addStorageExchangeRate = exchageRate => {\r\n  localStorage.setItem(\r\n    \"exchange_rate\",\r\n    JSON.stringify({\r\n      naira: exchageRate.naira,\r\n      dollar: exchageRate.dollar\r\n    })\r\n  );\r\n};\r\n\r\nexport const toggleStorageExchangeRateForm = () => {\r\n  if (localStorage.getItem(\"toggle_exchange_rate_form\") === null) {\r\n    localStorage.setItem(\"toggle_exchange_rate_form\", JSON.stringify(false));\r\n  }\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"toggle_exchange_rate_form\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const toggleStorageForm2 = () => {\r\n  if (localStorage.getItem(\"toggle_form2\") === null) {\r\n    localStorage.setItem(\"toggle_form2\", JSON.stringify(false));\r\n  }\r\n\r\n  const data = JSON.parse(localStorage.getItem(\"toggle_form2\"));\r\n\r\n  return data;\r\n};\r\n","import {\r\n  GET_QUOTATIONS,\r\n  GET_EDIT_QUOTATION,\r\n  GET_PROFORMA_INVOICE,\r\n  ADD_QUOTATION,\r\n  CLEAR_ALL_QUOTATIONS,\r\n  ADD_PROFORMA_INVOICE,\r\n  UPDATE_QUOTATION,\r\n  DELETE_QUOTATION\r\n} from \"./types\";\r\n\r\nimport {\r\n  getStorageQuotations,\r\n  get_EditStorageQuotation,\r\n  addStorageQuotation,\r\n  clearAllStorageQuotations,\r\n  updateStorageQuotation,\r\n  deleteStorageQuotation,\r\n  addStorageProformaInvoice,\r\n  getStorageProformaInvoice\r\n} from \"./quotationStorageAction\";\r\n\r\nexport const getQuotations = () => async dispatch => {\r\n  // Get Quotations From Storage & Push To State\r\n  const res = await getStorageQuotations();\r\n  dispatch({\r\n    type: GET_QUOTATIONS,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const getProformaInvoice = () => async dispatch => {\r\n  // Get Quotations From Storage & Push To State\r\n  const res = await getStorageProformaInvoice();\r\n  dispatch({\r\n    type: GET_PROFORMA_INVOICE,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const get_editQuotation = quotation => async dispatch => {\r\n  // Get & Edit Quotation From Storage & State\r\n  const res = await get_EditStorageQuotation(quotation.id);\r\n  dispatch({\r\n    type: GET_EDIT_QUOTATION,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const addQuotation = quotation => async dispatch => {\r\n  // Add Quotation To Storage & State\r\n  const res = await addStorageQuotation(quotation);\r\n  dispatch({\r\n    type: ADD_QUOTATION,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const clearAllQuotations = () => dispatch => {\r\n  // Add Quotation To Storage & State\r\n  const res = clearAllStorageQuotations();\r\n  dispatch({\r\n    type: CLEAR_ALL_QUOTATIONS,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const addProformaInvoice = proforma => async dispatch => {\r\n  // Add Proforma Invoice To Storage & State\r\n  addStorageProformaInvoice(proforma);\r\n\r\n  dispatch({\r\n    type: ADD_PROFORMA_INVOICE,\r\n    payload: proforma\r\n  });\r\n};\r\n\r\nexport const updateQuotation = quotation => async dispatch => {\r\n  // Update Quotation In Storage & State\r\n  const res = await updateStorageQuotation(quotation);\r\n  dispatch({\r\n    type: UPDATE_QUOTATION,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const deleteQuotation = id => async dispatch => {\r\n  // Delete Quotation From Storage & State\r\n  const res = await deleteStorageQuotation(id);\r\n  dispatch({\r\n    type: DELETE_QUOTATION,\r\n    payload: res\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\n// import uuid from \"uuid\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addQuotation } from \"../../actions/quotationTypes\";\r\n\r\nimport {\r\n  addCurrency,\r\n  calculateNairaExchangeRate,\r\n  calculateDollarExchangeRate\r\n} from \"../../actions/currencyTypes\";\r\nimport {\r\n  getStorageCurrency,\r\n  getStorageExchangeRate,\r\n  toggleStorageExchangeRateForm,\r\n  toggleStorageForm2\r\n} from \"../../actions/currencyStorageActions\";\r\nimport {\r\n  getStorageQuotations,\r\n  getStorageProformaInvoice\r\n} from \"../../actions/quotationStorageAction\";\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    itemName: \"\",\r\n    itemDescription: \"\",\r\n    itemUnit: \"\",\r\n    itemPrice: \"\",\r\n    currencySenior: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    // set toggle For ExchangeRate Form\r\n    toggleStorageExchangeRateForm();\r\n    toggleStorageForm2();\r\n\r\n    let currency = getStorageCurrency();\r\n\r\n    // Set Currency Flag Display\r\n    if (currency.senior === \"Naira\") {\r\n      // addCurrency\r\n      document.getElementById(\"nigCurr\").style.opacity = \"1\";\r\n      document.getElementById(\"usaCurr\").style.opacity = \"0.5\";\r\n    } else if (currency.senior === \"Dollar\") {\r\n      document.getElementById(\"usaCurr\").style.opacity = \"1\";\r\n      document.getElementById(\"nigCurr\").style.opacity = \"0.5\";\r\n    }\r\n\r\n    this.setState({ currencySenior: currency.senior });\r\n  }\r\n\r\n  nigCurrency = () => {\r\n    let initCurrency = getStorageCurrency();\r\n    let getAllQuotation = getStorageQuotations();\r\n\r\n    const exchangeRate = getStorageExchangeRate();\r\n    const naira = Number(exchangeRate.naira);\r\n    const dollar = Number(exchangeRate.dollar);\r\n\r\n    const currency = {\r\n      senior: \"Naira\",\r\n      junior: \"kobo\",\r\n      sign: \"₦\",\r\n      abbrevation: \"NGN\"\r\n    };\r\n\r\n    document.getElementById(\"nigCurr\").style.opacity = \"1\";\r\n    document.getElementById(\"usaCurr\").style.opacity = \"0.5\";\r\n\r\n    this.props.addCurrency(currency);\r\n    this.setState({ currencySenior: currency.senior });\r\n\r\n    if (initCurrency.senior !== currency.senior) {\r\n      if (getAllQuotation.length !== 0) {\r\n        this.props.calculateNairaExchangeRate(naira, dollar);\r\n\r\n        // Recaculate Proforma Invoice\r\n        const getProformaInvoice = getStorageProformaInvoice();\r\n        if (getProformaInvoice.totalQuoteAmount !== 0) {\r\n          document.getElementById(\"recaculateInvoice\").click();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  usaCurrency = () => {\r\n    let initCurrency = getStorageCurrency();\r\n    let getAllQuotation = getStorageQuotations();\r\n\r\n    const exchangeRate = getStorageExchangeRate();\r\n    const naira = Number(exchangeRate.naira);\r\n    const dollar = Number(exchangeRate.dollar);\r\n\r\n    const currency = {\r\n      senior: \"Dollar\",\r\n      junior: \"cent\",\r\n      sign: \"$\",\r\n      abbrevation: \"USD\"\r\n    };\r\n\r\n    document.getElementById(\"usaCurr\").style.opacity = \"1\";\r\n    document.getElementById(\"nigCurr\").style.opacity = \"0.5\";\r\n\r\n    this.props.addCurrency(currency);\r\n    this.setState({ currencySenior: currency.senior });\r\n\r\n    if (initCurrency.senior !== currency.senior) {\r\n      if (getAllQuotation.length !== 0) {\r\n        this.props.calculateDollarExchangeRate(naira, dollar);\r\n\r\n        // Recaculate Proforma Invoice\r\n        const getProformaInvoice = getStorageProformaInvoice();\r\n        if (getProformaInvoice.totalQuoteAmount !== 0) {\r\n          document.getElementById(\"recaculateInvoice\").click();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  valueChanged = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  valueSubmited = e => {\r\n    e.preventDefault();\r\n\r\n    // Save Init Currency On 1st Expense Save\r\n    // To Be Used To Manage (Set Exchange Rate)\r\n    if (JSON.parse(localStorage.getItem(\"quotations\")).length === 0) {\r\n      const initCurrency = JSON.parse(localStorage.getItem(\"currency\")).senior;\r\n\r\n      localStorage.setItem(\"initCurrency\", JSON.stringify(initCurrency));\r\n    }\r\n\r\n    let { itemName, itemDescription, itemUnit, itemPrice } = this.state;\r\n\r\n    // Set itemUnit Default Value\r\n    if (itemUnit === \"\") {\r\n      itemUnit = \"1\";\r\n    }\r\n\r\n    const newQuotationItem = {\r\n      id: uuid(),\r\n      itemName,\r\n      itemDescription,\r\n      itemUnit,\r\n      itemPrice\r\n    };\r\n\r\n    this.setState({\r\n      itemName: \"\",\r\n      itemDescription: \"\",\r\n      itemUnit: \"\",\r\n      itemPrice: \"\"\r\n    });\r\n\r\n    this.props.addQuotation(newQuotationItem);\r\n\r\n    document.getElementById(\"clearAllInvoice\").style.display = \"block\";\r\n  };\r\n\r\n  toggleForm = () => {\r\n    // Colapse Exchange Rate Form OnFocus\r\n    if (toggleStorageExchangeRateForm() === true) {\r\n      document.getElementById(\"setExchangeRateBtn\").click();\r\n    }\r\n\r\n    // Colapse Form2 On Focus\r\n    if (toggleStorageForm2() === true) {\r\n      document.getElementById(\"generateInvoice\").click();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      itemName,\r\n      itemDescription,\r\n      itemPrice,\r\n      itemUnit,\r\n      currencySenior\r\n    } = this.state;\r\n\r\n    const {\r\n      placeholder1,\r\n      inputGroupText1,\r\n      placeholder2,\r\n      inputGroupText2,\r\n      placeholder4,\r\n      inputGroupText4\r\n    } = this.props;\r\n    return (\r\n      <form onSubmit={this.valueSubmited} onFocus={this.toggleForm}>\r\n        <div className=\"input-group mb-3 boxShadows\" style={boxShadows}>\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText1}</span>\r\n          </div>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"itemName\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder1}\r\n            value={itemName}\r\n            onChange={this.valueChanged}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"itemDescription\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder2}\r\n            value={itemDescription}\r\n            onChange={this.valueChanged}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">{inputGroupText2}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3 boxShadows\" style={boxShadows}>\r\n          <div className=\"input-group-prepend\">\r\n            <span\r\n              id=\"nigCurr\"\r\n              className=\"input-group-text nigeriaCurrencyImage btn btn-outline-success form-control\"\r\n              onClick={this.nigCurrency}\r\n            >\r\n              <input type=\"button\" />\r\n            </span>\r\n            <span\r\n              id=\"usaCurr\"\r\n              className=\"input-group-text usaCurrencyImage btn btn-outline-success form-control\"\r\n              onClick={this.usaCurrency}\r\n            >\r\n              <input type=\"button\" className=\"usaCurrencyImage2\" />\r\n            </span>\r\n          </div>\r\n          <input\r\n            required\r\n            type=\"number\"\r\n            name=\"itemPrice\"\r\n            className=\"form-control\"\r\n            placeholder={\"Enter Amount In \" + currencySenior}\r\n            value={itemPrice}\r\n            onChange={this.valueChanged}\r\n          />\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText4}</span>\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            name=\"itemUnit\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder4}\r\n            value={itemUnit}\r\n            onChange={this.valueChanged}\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"form-control btn btn-secondary\"\r\n          style={boxShadows}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  quotations: PropTypes.array.isRequired,\r\n  addQuotation: PropTypes.func.isRequired,\r\n  addCurrency: PropTypes.func.isRequired,\r\n  calculateNairaExchangeRate: PropTypes.func.isRequired,\r\n  calculateDollarExchangeRate: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  quotations: state.quotation.quotations\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addQuotation,\r\n  addCurrency,\r\n  calculateNairaExchangeRate,\r\n  calculateDollarExchangeRate\r\n})(Form);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n};\r\n","import {\r\n  GET_CURRENCY,\r\n  ADD_CURRENCY,\r\n  GET_EXCHANGE_RATE,\r\n  ADD_EXCHANGE_RATE,\r\n  NAIRA_EXCHANGE_RATE,\r\n  DOLLAR_EXCHANGE_RATE\r\n} from \"./types\";\r\nimport {\r\n  getStorageExchangeRate,\r\n  getStorageCurrency,\r\n  addStorageCurrency,\r\n  addStorageExchangeRate,\r\n  calculateNairaStorageExchangeRate,\r\n  calculateDollarStorageExchangeRate\r\n} from \"./currencyStorageActions\";\r\n\r\nexport const getCurrency = () => async dispatch => {\r\n  // Get Quotations From Storage & Push To State\r\n  const res = await getStorageCurrency();\r\n  dispatch({\r\n    type: GET_CURRENCY,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const getExchangeRate = () => async dispatch => {\r\n  // Get Quotations From Storage & Push To State\r\n  const res = await getStorageExchangeRate();\r\n  dispatch({\r\n    type: GET_EXCHANGE_RATE,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const addCurrency = currency => async dispatch => {\r\n  // Add Proforma Invoice To Storage & State\r\n  addStorageCurrency(currency);\r\n\r\n  dispatch({\r\n    type: ADD_CURRENCY,\r\n    payload: currency\r\n  });\r\n};\r\n\r\nexport const addExchangeRate = exchangeRate => async dispatch => {\r\n  // Add Proforma Invoice To Storage & State\r\n  addStorageExchangeRate(exchangeRate);\r\n\r\n  dispatch({\r\n    type: ADD_EXCHANGE_RATE,\r\n    payload: exchangeRate\r\n  });\r\n};\r\n\r\nexport const calculateNairaExchangeRate = (ngn, usd) => async dispatch => {\r\n  let exchangeRate;\r\n  if (ngn > usd) {\r\n    exchangeRate = ngn / usd;\r\n  } else if (usd > ngn) {\r\n    exchangeRate = usd / ngn;\r\n  }\r\n  // Add Proforma Invoice To Storage & State\r\n  const res = calculateNairaStorageExchangeRate(exchangeRate);\r\n  dispatch({\r\n    type: NAIRA_EXCHANGE_RATE,\r\n    payload: res\r\n  });\r\n};\r\n\r\nexport const calculateDollarExchangeRate = (ngn, usd) => async dispatch => {\r\n  let exchangeRate;\r\n  if (ngn > usd) {\r\n    exchangeRate = ngn / usd;\r\n  } else if (usd > ngn) {\r\n    exchangeRate = usd / ngn;\r\n  }\r\n  // Add Proforma Invoice To Storage & State\r\n  const res = calculateDollarStorageExchangeRate(exchangeRate);\r\n  dispatch({\r\n    type: DOLLAR_EXCHANGE_RATE,\r\n    payload: res\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProformaInvoice } from \"../../actions/quotationTypes\";\r\n\r\nimport { getStorageQuotations } from \"../../actions/quotationStorageAction\";\r\nimport { toggleStorageExchangeRateForm } from \"../../actions/currencyStorageActions\";\r\n\r\nclass Form2 extends React.Component {\r\n  state = {\r\n    lpoItemName: \"\",\r\n    totalJobUnit: \"\",\r\n    serviceCharge: \"\",\r\n    vat: \"\"\r\n  };\r\n\r\n  valueChanged = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  valueSubmited = e => {\r\n    e.preventDefault();\r\n\r\n    let { lpoItemName, totalJobUnit, serviceCharge, vat } = this.state;\r\n\r\n    const quotations = getStorageQuotations();\r\n\r\n    // Only Run If There Are Expences\r\n    if (quotations.length !== 0) {\r\n      const totalQuoteAmount = quotations\r\n        .map(quotation => Number(quotation.itemUnit * quotation.itemPrice))\r\n        .reduce((acc, value) => acc + value);\r\n\r\n      const proformaInvioce = {\r\n        totalQuoteAmount: Number(totalQuoteAmount),\r\n        lpoItemName,\r\n        totalJobUnit: Number(totalJobUnit),\r\n        serviceCharge: Number(serviceCharge),\r\n        vat: Number(vat)\r\n      };\r\n\r\n      this.props.addProformaInvoice(proformaInvioce);\r\n\r\n      this.setState({\r\n        lpoItemName: \"\",\r\n        totalJobUnit: \"\",\r\n        serviceCharge: \"\",\r\n        vat: \"\"\r\n      });\r\n      // Show Clear Invoice & Recaculate BTN\r\n      document.getElementById(\"clearInvoice\").style.display = \"block\";\r\n      document.getElementById(\"recaculateInvoice\").style.display = \"block\";\r\n      // Close Form\r\n      document.getElementById(\"generateInvoice\").click();\r\n    } else {\r\n      alert(\"You  Must Enter At Least 1 Expense In (STEP 1)\");\r\n    }\r\n  };\r\n\r\n  toggleExchangeRateForm = () => {\r\n    if (toggleStorageExchangeRateForm() === true) {\r\n      // Colapse Exchange Rate Form\r\n      document.getElementById(\"setExchangeRateBtn\").click();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { lpoItemName, totalJobUnit, serviceCharge, vat } = this.state;\r\n\r\n    const {\r\n      placeholder1,\r\n      inputGroupText1,\r\n      placeholder2,\r\n      inputGroupText2,\r\n      placeholder3,\r\n      inputGroupText3,\r\n      placeholder4,\r\n      inputGroupText4\r\n    } = this.props;\r\n    return (\r\n      <form\r\n        onSubmit={this.valueSubmited}\r\n        onFocus={this.toggleExchangeRateForm}\r\n        className=\"card card-header table-responsive\"\r\n      >\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            name=\"lpoItemName\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder4}\r\n            value={lpoItemName}\r\n            onChange={this.valueChanged}\r\n          />\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText4}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText3}</span>\r\n          </div>\r\n          <input\r\n            required\r\n            type=\"number\"\r\n            name=\"totalJobUnit\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder3}\r\n            value={totalJobUnit}\r\n            onChange={this.valueChanged}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <input\r\n            required\r\n            type=\"number\"\r\n            name=\"serviceCharge\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder2}\r\n            value={serviceCharge}\r\n            onChange={this.valueChanged}\r\n          />\r\n          <div className=\"input-group-append\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText2}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-group mb-3\" style={boxShadows}>\r\n          <div className=\"input-group-prepend\" style={boxShadows}>\r\n            <span className=\"input-group-text\">{inputGroupText1}</span>\r\n          </div>\r\n          <input\r\n            type=\"number\"\r\n            name=\"vat\"\r\n            className=\"form-control\"\r\n            placeholder={placeholder1}\r\n            value={vat}\r\n            onChange={this.valueChanged}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 mx-auto p-1\" style={boxShadows}>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Calculate\"\r\n              className=\"form-control btn btn-success btn-sm\"\r\n              style={boxShadows}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm2.propTypes = {\r\n  addProformaInvoice: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addProformaInvoice })(Form2);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExchangeRate, getExchangeRate } from \"../../actions/currencyTypes\";\r\nimport { getStorageExchangeRate } from \"../../actions/currencyStorageActions\";\r\nimport Form from \"./Form\";\r\nimport Form2 from \"./Form2\";\r\n\r\nimport classnames from \"classnames\";\r\n\r\nclass QuotesForm extends Component {\r\n  state = {\r\n    toggle1: false,\r\n    toggle2: false,\r\n    naira: \"\",\r\n    dollar: \"\",\r\n    exchangedNaira: \"\",\r\n    exchangedDollar: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getExchangeRate();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    const exchangeRate = getStorageExchangeRate();\r\n\r\n    this.setState({\r\n      exchangedNaira: exchangeRate.naira,\r\n      exchangedDollar: exchangeRate.dollar\r\n    });\r\n  }\r\n\r\n  toggle1 = () => {\r\n    this.setState({ toggle1: !this.state.toggle1 });\r\n\r\n    // Manage Exchange Form Toggle\r\n    if (this.state.toggle1 === true) {\r\n      localStorage.setItem(\"toggle_exchange_rate_form\", JSON.stringify(false));\r\n    } else if (this.state.toggle1 === false) {\r\n      localStorage.setItem(\"toggle_exchange_rate_form\", JSON.stringify(true));\r\n    }\r\n  };\r\n\r\n  toggle2 = () => {\r\n    this.setState({ toggle2: !this.state.toggle2 });\r\n\r\n    // Manage Exchange Form Toggle\r\n    if (this.state.toggle2 === true) {\r\n      localStorage.setItem(\"toggle_form2\", JSON.stringify(false));\r\n    } else if (this.state.toggle2 === false) {\r\n      localStorage.setItem(\"toggle_form2\", JSON.stringify(true));\r\n    }\r\n  };\r\n\r\n  valueChanged = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitExchangeRate = e => {\r\n    e.preventDefault();\r\n\r\n    let { naira, dollar } = this.state;\r\n\r\n    // Set itemUnit Default Value\r\n    if (Number(naira) === Number(dollar)) {\r\n      alert(\"New Corresponding Exchange Rate Values Must be different\");\r\n    } else if (Number(naira) < Number(dollar)) {\r\n      alert(\"(@ the moment) Naira Value Cant Be Less Than Dollar Value\");\r\n    } else if (Number(naira) === 0 || Number(dollar) === 0) {\r\n      alert(\"New Exchange Rate Must Have A Corresponding Value\");\r\n    } else {\r\n      const exchangeRate = {\r\n        naira,\r\n        dollar\r\n      };\r\n\r\n      // Get Proforma Length\r\n      if (JSON.parse(localStorage.getItem(\"quotations\")).length !== 0) {\r\n        // click the init Currency\r\n        const initCurrency = JSON.parse(localStorage.getItem(\"initCurrency\"));\r\n\r\n        if (initCurrency === \"Dollar\") {\r\n          document.getElementById(\"usaCurr\").click();\r\n        } else if (initCurrency === \"Naira\") {\r\n          document.getElementById(\"nigCurr\").click();\r\n        }\r\n\r\n        this.props.addExchangeRate(exchangeRate);\r\n        this.setState({ naira: \"\", dollar: \"\" });\r\n      } else {\r\n        this.props.addExchangeRate(exchangeRate);\r\n        this.setState({ naira: \"\", dollar: \"\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      toggle1,\r\n      toggle2,\r\n      naira,\r\n      dollar,\r\n      exchangedNaira,\r\n      exchangedDollar\r\n    } = this.state;\r\n    return (\r\n      <div\r\n        className=\"container-fluid pt-5 pb-3 px-5 mb-1\"\r\n        // Main Background Styling\r\n        style={{\r\n          backgroundImage:\r\n            \"linear-gradient(lightgray 2%, white 5%, gray 15%, lightgray 60%)\",\r\n          transform: \"rotate(180deg)\"\r\n        }}\r\n      >\r\n        <div\r\n          className=\"row\"\r\n          // Inner Background Styling\r\n          style={{\r\n            backgroundImage:\r\n              \"linear-gradient(lightgray 1%, white 30%, rgb(187, 202, 131) 100%)\",\r\n            transform: \"rotate(180deg)\",\r\n            paddingBottom: \"10px\",\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\"\r\n          }}\r\n        >\r\n          <div className=\"col-sm-7\">\r\n            <h4 className=\"text-center text-secondary\">\r\n              <i className=\"fa fa-align-center fa-sm\" /> STEP 1\r\n            </h4>\r\n            <div>\r\n              <label>\r\n                <b>Enter Quotation Details...</b>\r\n              </label>\r\n              {toggle1 ? (\r\n                <form\r\n                  onSubmit={this.submitExchangeRate}\r\n                  id=\"form2\"\r\n                  className=\"input-group mb-3\"\r\n                  style={boxShadows}\r\n                >\r\n                  <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text bg-dark text-white\">\r\n                      ₦{exchangedNaira}\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"naira\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nigerian Naira (NGN)\"\r\n                    value={naira}\r\n                    onChange={this.valueChanged}\r\n                  />\r\n                  <button className=\"btn btn-sm btn-info\" style={boxShadows}>\r\n                    SET EXCHANGE RATE\r\n                  </button>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"dollar\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"US Dollar (USD)\"\r\n                    value={dollar}\r\n                    onChange={this.valueChanged}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text bg-dark text-white\">\r\n                      ${exchangedDollar}\r\n                    </span>\r\n                  </div>\r\n                </form>\r\n              ) : null}\r\n              <div\r\n                onClick={this.toggle1}\r\n                id=\"setExchangeRateBtn\"\r\n                className=\"btn btn-outline-primary btn-sm float-right mb-2\"\r\n                style={boxShadows}\r\n              >\r\n                Set Exchange Rate\r\n              </div>\r\n            </div>\r\n            <Form\r\n              placeholder1=\"e.g. Graphics Design\"\r\n              inputGroupText1=\"Item Name\"\r\n              placeholder2=\"e.g. Designing Flyer Artwork Based On Spec\"\r\n              inputGroupText2=\"Desccription\"\r\n              placeholder4=\"(1 Unit is the default value)\"\r\n              inputGroupText4=\"Item Unit\"\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-5 mt-4 pt-2\">\r\n            <h4 className=\"text-center text-secondary\">\r\n              <i className=\"fa fa-align-center fa-sm\" /> STEP 2\r\n            </h4>\r\n            <button\r\n              id=\"generateInvoice\"\r\n              className={classnames(\"btn form-control\", {\r\n                \"btn-secondary\": !this.state.toggle2,\r\n                \"btn-outline-success\": this.state.toggle2\r\n              })}\r\n              style={boxShadows}\r\n              onClick={this.toggle2}\r\n            >\r\n              Generate Invoice\r\n            </button>\r\n            {toggle2 ? (\r\n              <div className=\"mt-1 col-sm-12\">\r\n                <Form2\r\n                  placeholder1=\"% (0 is the default value)\"\r\n                  inputGroupText1=\"VAT\"\r\n                  placeholder2=\"e.g. 25%\"\r\n                  inputGroupText2=\"Service Charge (in %)\"\r\n                  placeholder3=\"Total Job (Unit Number)\"\r\n                  inputGroupText3=\"(000s)\"\r\n                  placeholder4=\"Job Name\"\r\n                  inputGroupText4=\"LPO Item Name\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nQuotesForm.propTypes = {\r\n  addExchangeRate: PropTypes.func.isRequired,\r\n  getExchangeRate: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  exchangeRate: state.quotation.exchangeRate\r\n});\r\n\r\nexport default connect(mapStateToProps, { addExchangeRate, getExchangeRate })(\r\n  QuotesForm\r\n);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getQuotations,\r\n  deleteQuotation,\r\n  clearAllQuotations,\r\n  addProformaInvoice\r\n} from \"../../actions/quotationTypes\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { JSnumberToWordProcessor } from \"../JSnumberToWordProcessor/JSnumberToWordProcessor\";\r\nimport { getStorageQuotations } from \"../../actions/quotationStorageAction\";\r\nimport { getStorageCurrency } from \"../../actions/currencyStorageActions\";\r\n\r\nclass Quotes extends Component {\r\n  state = {\r\n    storageCurrency: {},\r\n\r\n    totalPrice: \"\",\r\n    totalPrice0: \"\",\r\n    totalPrice1: \"\",\r\n    quotes: []\r\n  };\r\n  componentDidMount() {\r\n    this.props.getQuotations();\r\n\r\n    // Hide The Recaculate Btn Under Invoice if No Invoice\r\n    if (\r\n      JSON.parse(localStorage.getItem(\"proforma_invoice\")) === null ||\r\n      JSON.parse(localStorage.getItem(\"proforma_invoice\")).serviceCharge === 0\r\n    ) {\r\n      document.getElementById(\"recaculateInvoice\").style.display = \"none\";\r\n    }\r\n\r\n    // Hide Clear Btn If No Expenses\r\n    if (JSON.parse(localStorage.getItem(\"quotations\")).length === 0) {\r\n      document.getElementById(\"clearAllInvoice\").style.display = \"none\";\r\n    } else {\r\n      document.getElementById(\"clearAllInvoice\").style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    const storageCurrency = getStorageCurrency();\r\n\r\n    const { quotations } = props;\r\n\r\n    if (quotations !== undefined) {\r\n      const quotes = quotations.map(quotation => {\r\n        const itemId = quotation.id;\r\n        const itemName = quotation.itemName;\r\n        const itemDescription = quotation.itemDescription;\r\n\r\n        const itemUnit = Number(quotation.itemUnit).toFixed(2);\r\n        const itemUnit0 = JSnumberToWordProcessor(String(itemUnit))[0];\r\n        const itemUnit1 = JSnumberToWordProcessor(String(itemUnit))[1];\r\n\r\n        const itemPrice = Number(quotation.itemPrice).toFixed(2);\r\n        const itemPrice0 = JSnumberToWordProcessor(String(itemPrice))[0];\r\n        const itemPrice1 = JSnumberToWordProcessor(String(itemPrice))[1];\r\n\r\n        const itemPriceTotal = Number(\r\n          quotation.itemUnit * quotation.itemPrice\r\n        ).toFixed(2);\r\n        const itemPriceTotal0 = JSnumberToWordProcessor(\r\n          String(itemPriceTotal)\r\n        )[0];\r\n        const itemPriceTotal1 = JSnumberToWordProcessor(\r\n          String(itemPriceTotal)\r\n        )[1];\r\n\r\n        return {\r\n          itemId,\r\n          itemName,\r\n          itemDescription,\r\n          itemUnit,\r\n          itemUnit0,\r\n          itemUnit1,\r\n          itemPrice,\r\n          itemPrice0,\r\n          itemPrice1,\r\n          itemPriceTotal,\r\n          itemPriceTotal0,\r\n          itemPriceTotal1\r\n        };\r\n      });\r\n\r\n      // Calculate Total Price\r\n      let totalPrice = \"0.00\";\r\n      let totalPrice0 = JSnumberToWordProcessor(String(totalPrice))[0];\r\n      let totalPrice1 = JSnumberToWordProcessor(String(totalPrice))[1];\r\n\r\n      if (props.quotations.length !== 0) {\r\n        totalPrice = Number(\r\n          props.quotations\r\n            .map(quotation => Number(quotation.itemUnit * quotation.itemPrice))\r\n            .reduce((acc, value) => acc + value)\r\n        ).toFixed(2);\r\n        totalPrice0 = JSnumberToWordProcessor(String(totalPrice))[0];\r\n        totalPrice1 = JSnumberToWordProcessor(String(totalPrice))[1];\r\n      }\r\n\r\n      this.setState({\r\n        storageCurrency,\r\n\r\n        totalPrice,\r\n        totalPrice0,\r\n        totalPrice1,\r\n\r\n        quotes\r\n      });\r\n    }\r\n  }\r\n\r\n  resetQuotes = () => {\r\n    const nullInvoice = {\r\n      totalQuoteAmount: Number(),\r\n      lpoItemName: \"\",\r\n      totalJobUnit: Number(),\r\n      serviceCharge: Number(),\r\n      vat: Number()\r\n    };\r\n\r\n    // Clear Expenses & Invoice\r\n    this.props.addProformaInvoice(nullInvoice);\r\n    this.props.clearAllQuotations();\r\n\r\n    // Hide clearAllInvoice, Recaculate  & Clear Btn Under Invoice\r\n    document.getElementById(\"clearInvoice\").style.display = \"none\";\r\n    document.getElementById(\"recaculateInvoice\").style.display = \"none\";\r\n    document.getElementById(\"clearAllInvoice\").style.display = \"none\";\r\n  };\r\n\r\n  clearAllInvoice = () => {\r\n    const confirmDelete = window.confirm(\"Confirm Delete\");\r\n\r\n    if (confirmDelete) {\r\n      this.resetQuotes();\r\n    }\r\n  };\r\n\r\n  deleteQuote = id => {\r\n    const confirmDelete = window.confirm(\"Confirm Delete\");\r\n    // Dispatch\r\n    if (confirmDelete) {\r\n      this.props.deleteQuotation(id);\r\n\r\n      const quotationsLength = getStorageQuotations();\r\n\r\n      if (quotationsLength.length === 0) {\r\n        this.resetQuotes();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      storageCurrency,\r\n      totalPrice,\r\n      totalPrice0,\r\n      totalPrice1,\r\n      quotes\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <table\r\n          className=\"table table-striped table-bordered\"\r\n          // Use This Style Props Without Border Instead of .table-responsive\r\n          style={{\r\n            display: \"block\",\r\n            width: \"100%\",\r\n            overflowX: \"auto\",\r\n            border: \"none\"\r\n          }}\r\n        >\r\n          <thead className=\"thead-inverse\">\r\n            <tr className=\"table-borderless text-centeer\">\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"firebrick\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                EXPENSES\r\n              </th>\r\n              <th></th>\r\n              <th></th>\r\n              <th></th>\r\n              <th\r\n                id=\"clearAllInvoice\"\r\n                className=\"text-center btn btn-sm btn-danger float-right\"\r\n                style={boxShadows}\r\n                onClick={this.clearAllInvoice}\r\n              >\r\n                Clear All\r\n              </th>\r\n            </tr>\r\n            <tr className=\"table-primary\">\r\n              <th>Item Name</th>\r\n              <th>Description</th>\r\n              <th>Unit</th>\r\n              <th>Unit Price</th>\r\n              <th>Total Price</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {quotes.map(quotation => (\r\n              <tr key={quotation.itemId}>\r\n                <td>{quotation.itemName}</td>\r\n                <td>{quotation.itemDescription}</td>\r\n                <td>{quotation.itemUnit0.displayNum}</td>\r\n                <td>\r\n                  {storageCurrency.sign}\r\n                  {quotation.itemPrice0.displayNum + \".\"}\r\n                  <small>{quotation.itemPrice1.displayNum}</small>{\" \"}\r\n                </td>\r\n                <td>\r\n                  {storageCurrency.sign}\r\n                  {quotation.itemPriceTotal0.displayNum + \".\"}\r\n                  <small>{quotation.itemPriceTotal1.displayNum}</small>{\" \"}\r\n                </td>\r\n                <td>\r\n                  <Link to={`/update/${quotation.itemId}`}>\r\n                    <i\r\n                      className=\"fa fa-pencil-alt text-success\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />{\" \"}\r\n                  </Link>\r\n                  {\"\"}\r\n                  <i\r\n                    className=\"fa fa-times text-danger\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={this.deleteQuote.bind(this, quotation.itemId)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            <tr className=\"h5 text-secondary\">\r\n              <td className=\"text-primary\">TOTAL</td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              {Number(totalPrice) === 0 ? (\r\n                <td className=\"text-success\">\r\n                  {storageCurrency.sign}\r\n                  {totalPrice0.displayNum + \".\"}\r\n                  <small>{totalPrice1.displayNum}</small>{\" \"}\r\n                </td>\r\n              ) : (\r\n                <td className=\"text-danger\">\r\n                  {storageCurrency.sign}\r\n                  {totalPrice0.displayNum + \".\"}\r\n                  <small>{totalPrice1.displayNum}</small>{\" \"}\r\n                </td>\r\n              )}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nQuotes.propType = {\r\n  quotations: PropTypes.array.isRequired,\r\n  getQuotations: PropTypes.func.isRequired,\r\n  deleteQuotation: PropTypes.func.isRequired,\r\n  clearAllQuotations: PropTypes.func.isRequired,\r\n  addProformaInvoice: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  quotations: state.quotation.quotations\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuotations,\r\n  deleteQuotation,\r\n  clearAllQuotations,\r\n  addProformaInvoice\r\n})(Quotes);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProformaInvoice,\r\n  addProformaInvoice\r\n} from \"../../actions/quotationTypes\";\r\n\r\nimport { JSnumberToWordProcessor } from \"../JSnumberToWordProcessor/JSnumberToWordProcessor\";\r\nimport {\r\n  getStorageQuotations,\r\n  getStorageProformaInvoice\r\n} from \"../../actions/quotationStorageAction\";\r\nimport { getCurrency } from \"../../actions/currencyTypes\";\r\nimport { getStorageCurrency } from \"../../actions/currencyStorageActions\";\r\n\r\nclass QuotesCard extends Component {\r\n  state = {\r\n    proforma: \"1\",\r\n    storageCurrency: {},\r\n\r\n    lpoItemName: \"\",\r\n\r\n    totalJobUnit: \"\",\r\n    totalJobUnit0: {},\r\n    totalJobUnit1: {},\r\n    serviceCharge: \"\",\r\n    serviceCharge0: {},\r\n    serviceCharge1: {},\r\n    totalQuoteAmount: \"\",\r\n    totalQuoteAmount0: {},\r\n    totalQuoteAmount1: {},\r\n    vat: \"\",\r\n    vat0: {},\r\n    vat1: {},\r\n    chargesPercentage: \"\",\r\n    chargesPercentage0: {},\r\n    chargesPercentage1: {},\r\n    totalValue: \"\",\r\n    totalValue0: {},\r\n    totalValue1: {},\r\n    vatPayable: \"\",\r\n    vatPayable0: {},\r\n    vatPayable1: {},\r\n    totalPayableWithVat: \"\",\r\n    totalPayableWithVat0: {},\r\n    totalPayableWithVat1: {},\r\n    unitPrice: \"\",\r\n    unitPrice0: {},\r\n    unitPrice1: {},\r\n    unit1000Price: \"\",\r\n    unit1000Price0: {},\r\n    unit1000Price1: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getProformaInvoice();\r\n    this.props.getCurrency();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    const storageCurrency = getStorageCurrency();\r\n\r\n    // Hide Clear BTN\r\n    if (props.proformaInvoice.totalQuoteAmount === 0) {\r\n      document.getElementById(\"clearInvoice\").style.display = \"none\";\r\n    } else {\r\n      document.getElementById(\"clearInvoice\").style.display = \"block\";\r\n    }\r\n\r\n    const totalJobUnit = Number(props.proformaInvoice.totalJobUnit).toFixed(2);\r\n    const totalJobUnit0 = JSnumberToWordProcessor(String(totalJobUnit))[0];\r\n    const totalJobUnit1 = JSnumberToWordProcessor(String(totalJobUnit))[1];\r\n\r\n    const serviceCharge = Number(props.proformaInvoice.serviceCharge).toFixed(\r\n      1\r\n    );\r\n    const serviceCharge0 = JSnumberToWordProcessor(String(serviceCharge))[0];\r\n    const serviceCharge1 = JSnumberToWordProcessor(String(serviceCharge))[1];\r\n\r\n    const totalQuoteAmount = Number(\r\n      props.proformaInvoice.totalQuoteAmount\r\n    ).toFixed(2);\r\n    const totalQuoteAmount0 = JSnumberToWordProcessor(\r\n      String(totalQuoteAmount)\r\n    )[0];\r\n    const totalQuoteAmount1 = JSnumberToWordProcessor(\r\n      String(totalQuoteAmount)\r\n    )[1];\r\n\r\n    const vat = Number(props.proformaInvoice.vat).toFixed(1);\r\n    const vat0 = JSnumberToWordProcessor(String(vat))[0];\r\n    const vat1 = JSnumberToWordProcessor(String(vat))[1];\r\n\r\n    const chargesPercentage = (\r\n      (Number(props.proformaInvoice.serviceCharge) / 100) *\r\n      Number(props.proformaInvoice.totalQuoteAmount)\r\n    ).toFixed(2);\r\n    const chargesPercentage0 = JSnumberToWordProcessor(\r\n      String(chargesPercentage)\r\n    )[0];\r\n    const chargesPercentage1 = JSnumberToWordProcessor(\r\n      String(chargesPercentage)\r\n    )[1];\r\n\r\n    const totalValue = (\r\n      Number(props.proformaInvoice.totalQuoteAmount) + Number(chargesPercentage)\r\n    ).toFixed(2);\r\n    const totalValue0 = JSnumberToWordProcessor(String(totalValue))[0];\r\n    const totalValue1 = JSnumberToWordProcessor(String(totalValue))[1];\r\n\r\n    const vatPayable = (\r\n      (Number(props.proformaInvoice.vat) / 100) *\r\n      Number(totalValue)\r\n    ).toFixed(2);\r\n    const vatPayable0 = JSnumberToWordProcessor(String(vatPayable))[0];\r\n    const vatPayable1 = JSnumberToWordProcessor(String(vatPayable))[1];\r\n\r\n    const totalPayableWithVat = (\r\n      Number(totalValue) + Number(vatPayable)\r\n    ).toFixed(2);\r\n    const totalPayableWithVat0 = JSnumberToWordProcessor(\r\n      String(totalPayableWithVat)\r\n    )[0];\r\n    const totalPayableWithVat1 = JSnumberToWordProcessor(\r\n      String(totalPayableWithVat)\r\n    )[1];\r\n\r\n    let unitPrice = (\r\n      Number(totalPayableWithVat) / Number(props.proformaInvoice.totalJobUnit)\r\n    ).toFixed(2);\r\n    if (isNaN(unitPrice)) {\r\n      unitPrice = \"0.00\";\r\n    }\r\n    const unitPrice0 = JSnumberToWordProcessor(String(unitPrice))[0];\r\n    const unitPrice1 = JSnumberToWordProcessor(String(unitPrice))[1];\r\n\r\n    let unit1000Price = Number(\r\n      Number(totalPayableWithVat / Number(props.proformaInvoice.totalJobUnit)) *\r\n        1000\r\n    ).toFixed(2);\r\n    if (isNaN(unit1000Price)) {\r\n      unit1000Price = \"0.00\";\r\n    }\r\n    const unit1000Price0 = JSnumberToWordProcessor(String(unit1000Price))[0];\r\n    const unit1000Price1 = JSnumberToWordProcessor(String(unit1000Price))[1];\r\n\r\n    this.setState({\r\n      storageCurrency,\r\n\r\n      lpoItemName: props.proformaInvoice.lpoItemName,\r\n\r\n      totalJobUnit,\r\n      totalJobUnit0,\r\n      totalJobUnit1,\r\n      serviceCharge,\r\n      serviceCharge0,\r\n      serviceCharge1,\r\n      totalQuoteAmount,\r\n      totalQuoteAmount0,\r\n      totalQuoteAmount1,\r\n      vat,\r\n      vat0,\r\n      vat1,\r\n      chargesPercentage,\r\n      chargesPercentage0,\r\n      chargesPercentage1,\r\n      totalValue,\r\n      totalValue0,\r\n      totalValue1,\r\n      vatPayable,\r\n      vatPayable0,\r\n      vatPayable1,\r\n      totalPayableWithVat,\r\n      totalPayableWithVat0,\r\n      totalPayableWithVat1,\r\n      unitPrice,\r\n      unitPrice0,\r\n      unitPrice1,\r\n      unit1000Price,\r\n      unit1000Price0,\r\n      unit1000Price1\r\n    });\r\n  }\r\n\r\n  proforma = () => {\r\n    this.setState({ proforma: document.getElementById(\"sel1\").value });\r\n  };\r\n\r\n  clearProformaInvoice = () => {\r\n    const confirmDelete = window.confirm(\"Confirm Delete\");\r\n\r\n    if (confirmDelete) {\r\n      const nullInvoice = {\r\n        totalQuoteAmount: Number(),\r\n        lpoItemName: \"\",\r\n        totalJobUnit: Number(),\r\n        serviceCharge: Number(),\r\n        vat: Number()\r\n      };\r\n\r\n      this.props.addProformaInvoice(nullInvoice);\r\n\r\n      document.getElementById(\"clearInvoice\").style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  recaculateInvoice = () => {\r\n    const quotations = getStorageQuotations();\r\n\r\n    const storageProformaInvoice = getStorageProformaInvoice();\r\n\r\n    const {\r\n      lpoItemName,\r\n      totalJobUnit,\r\n      serviceCharge,\r\n      vat\r\n    } = storageProformaInvoice;\r\n\r\n    // Only Run If There Are Expences\r\n    if (quotations.length !== 0) {\r\n      const totalQuoteAmount = quotations\r\n        .map(quotation => Number(quotation.itemUnit * quotation.itemPrice))\r\n        .reduce((acc, value) => acc + value);\r\n\r\n      const proformaInvioce = {\r\n        totalQuoteAmount: Number(totalQuoteAmount),\r\n        lpoItemName,\r\n        totalJobUnit: Number(totalJobUnit),\r\n        serviceCharge: Number(serviceCharge),\r\n        vat: Number(vat)\r\n      };\r\n\r\n      this.props.addProformaInvoice(proformaInvioce);\r\n\r\n      // Show Clear Invoice & Recaculate BTN\r\n      document.getElementById(\"clearInvoice\").style.display = \"block\";\r\n      document.getElementById(\"recaculateInvoice\").style.display = \"block\";\r\n    } else {\r\n      alert(\"You  Must Enter At Least 1 Expense In (STEP 1)\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      proforma,\r\n      storageCurrency,\r\n\r\n      lpoItemName,\r\n\r\n      totalJobUnit,\r\n      totalJobUnit0,\r\n      // totalJobUnit1,\r\n      serviceCharge,\r\n      serviceCharge0,\r\n      serviceCharge1,\r\n      // totalQuoteAmount,\r\n      // totalQuoteAmount0,\r\n      // totalQuoteAmount1,\r\n      vat,\r\n      vat0,\r\n      vat1,\r\n      chargesPercentage,\r\n      chargesPercentage0,\r\n      chargesPercentage1,\r\n      totalValue,\r\n      totalValue0,\r\n      totalValue1,\r\n      vatPayable,\r\n      vatPayable0,\r\n      vatPayable1,\r\n      totalPayableWithVat,\r\n      totalPayableWithVat0,\r\n      totalPayableWithVat1,\r\n      unitPrice,\r\n      unitPrice0,\r\n      unitPrice1,\r\n      // unit1000Price,\r\n      unit1000Price0,\r\n      unit1000Price1\r\n    } = this.state;\r\n\r\n    let { proformaInvoice } = this.props;\r\n\r\n    return (\r\n      <div className=\"card my-3 table-dark\" style={boxShadows}>\r\n        <div className=\"card-header text-dark h5\" style={boxShadows}>\r\n          <i className=\"fa fa-file-invoice-dollar\" /> PROFORMA INVOICE{\" \"}\r\n          <button\r\n            id=\"clearInvoice\"\r\n            className=\"float-right btn btn-danger btn-sm\"\r\n            style={boxShadows}\r\n            onClick={this.clearProformaInvoice}\r\n          >\r\n            Clear Invoice\r\n          </button>\r\n          <button\r\n            id=\"recaculateInvoice\"\r\n            className=\"float-right btn btn-primary btn-sm mr-3\"\r\n            style={boxShadows}\r\n            onClick={this.recaculateInvoice}\r\n          >\r\n            Recaculate\r\n          </button>\r\n        </div>\r\n        <div className=\"card-body table-responsive text-center\">\r\n          <table\r\n            className=\"table table-striped table-bordered table-hover table-sm\"\r\n            style={boxShadows}\r\n          >\r\n            <thead className=\"table-success\">\r\n              <tr>\r\n                <th>Material</th>\r\n                <th>Quantity</th>\r\n                <th>Unit Price</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr className=\"h6 text-secondary\">\r\n                <td>{proformaInvoice.lpoItemName}</td>\r\n                <td>\r\n                  {Number(totalJobUnit) === 0 ? null : totalJobUnit0.displayNum}\r\n                </td>\r\n                <td>{}</td>\r\n                <td>\r\n                  {Number(totalValue) === 0\r\n                    ? null\r\n                    : storageCurrency.sign + totalValue0.displayNum + \".\"}\r\n                  {Number(totalValue) === 0 ? null : (\r\n                    <small>{totalValue1.displayNum}</small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"h6 text-secondary\">\r\n                <td>\r\n                  VAT{\" \"}\r\n                  <small>\r\n                    {Number(vat) === 0\r\n                      ? null\r\n                      : \"(@\" + vat0.displayNum + \".\" + vat1.displayNum + \"%)\"}\r\n                  </small>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  {Number(vatPayable) === 0\r\n                    ? null\r\n                    : storageCurrency.sign + vatPayable0.displayNum + \".\"}\r\n                  {Number(vatPayable) === 0 ? null : (\r\n                    <small>{vatPayable1.displayNum}</small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr className=\"h5 text-secondary\">\r\n                <td className=\"text-primary\">\r\n                  TOTAL <small className=\"text-secondary\">(VAT inc.)</small>\r\n                </td>\r\n                <td>\r\n                  {Number(totalJobUnit) === 0 ? null : totalJobUnit0.displayNum}\r\n                </td>\r\n                <td>\r\n                  {Number(unitPrice) === 0\r\n                    ? null\r\n                    : storageCurrency.sign + unitPrice0.displayNum + \".\"}\r\n                  {Number(unitPrice) === Infinity ||\r\n                  Number(unitPrice) === 0 ? null : (\r\n                    <small>{unitPrice1.displayNum}</small>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {Number(totalPayableWithVat) === 0\r\n                    ? null\r\n                    : storageCurrency.sign +\r\n                      totalPayableWithVat0.displayNum +\r\n                      \".\"}\r\n                  {Number(totalPayableWithVat) === 0 ? null : (\r\n                    <small>{totalPayableWithVat1.displayNum}</small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr className=\"h5 text-secondary\">\r\n                <td className=\"text-success\">\r\n                  PROFIT\r\n                  <small className=\"text-secondary\">\r\n                    (after vat)\r\n                    <small>\r\n                      {Number(serviceCharge) === 0\r\n                        ? null\r\n                        : \" [@\" +\r\n                          serviceCharge0.displayNum +\r\n                          \".\" +\r\n                          serviceCharge1.displayNum +\r\n                          \"%]\"}\r\n                    </small>\r\n                  </small>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                  {Number(chargesPercentage) === 0\r\n                    ? null\r\n                    : storageCurrency.sign +\r\n                      chargesPercentage0.displayNum +\r\n                      \".\"}\r\n                  {Number(chargesPercentage) === 0 ? null : (\r\n                    <small>{chargesPercentage1.displayNum}</small>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"card-footer\" style={boxShadows}>\r\n          {Number(unitPrice) === 0 ? null : (\r\n            <div className=\"form-group\" style={boxShadows}>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"sel1\"\r\n                onClick={(this, this.proforma)}\r\n              >\r\n                <option value=\"1\">Display Unit Price</option>\r\n                <option value=\"1000\">Display Price Per 1,000 units</option>\r\n                <option value=\"101\">Display TOTAL (VAT inc.)</option>\r\n                <option value=\"102\">\r\n                  PROFIT(after vat [\r\n                  {vat0.displayNum + \".\" + vat1.displayNum + \"%\"}])\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {Number(unitPrice) === Infinity ||\r\n          Number(unitPrice) === 0 ? null : proforma === \"1\" ? (\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n              <li className=\"text-secondary h5\">\r\n                <span className=\"h4 text-primary\">PROFORMA INVOICE</span> <hr />\r\n                {totalJobUnit0.displayNum} pcs of {lpoItemName} @{\" \"}\r\n                {storageCurrency.sign}\r\n                {unitPrice0.displayNum + \".\"}\r\n                <small>{unitPrice1.displayNum}</small>\r\n                {\" (\" + unitPrice0.displayWord + \" \" + storageCurrency.senior}\r\n                {Number(unitPrice1.displayNum) === 0\r\n                  ? null\r\n                  : \", and \" +\r\n                    unitPrice1.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.junior}\r\n                ) each.\r\n              </li>\r\n            </ul>\r\n          ) : proforma === \"1000\" ? (\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n              <li className=\"text-secondary h5\">\r\n                <span className=\"h4 text-primary\">PROFORMA INVOICE</span> <hr />\r\n                {totalJobUnit0.displayNum} pcs of {lpoItemName} @{\" \"}\r\n                {storageCurrency.sign}\r\n                {unit1000Price0.displayNum + \".\"}\r\n                <small>{unit1000Price1.displayNum}</small>\r\n                {\" (\" +\r\n                  unit1000Price0.displayWord +\r\n                  \" \" +\r\n                  storageCurrency.senior}\r\n                {Number(unit1000Price1.displayNum) === 0\r\n                  ? null\r\n                  : \", and \" +\r\n                    unit1000Price1.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.junior}\r\n                ) per 1000 units.\r\n              </li>\r\n            </ul>\r\n          ) : proforma === \"101\" ? (\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n              <li className=\"text-secondary h5\">\r\n                <span className=\"h4 text-primary\">PROFORMA INVOICE</span> <hr />\r\n                {totalJobUnit0.displayNum} pcs of {lpoItemName} @{\" \"}\r\n                {storageCurrency.sign}\r\n                {totalPayableWithVat0.displayNum + \".\"}\r\n                <small>{totalPayableWithVat1.displayNum}</small>\r\n                {\" (\" +\r\n                  totalPayableWithVat0.displayWord +\r\n                  \" \" +\r\n                  storageCurrency.senior}\r\n                {Number(totalPayableWithVat1.displayNum) === 0\r\n                  ? null\r\n                  : \", and \" +\r\n                    totalPayableWithVat1.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.junior +\r\n                    \").\"}{\" \"}\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul style={{ listStyleType: \"none\" }}>\r\n              <li className=\"text-secondary h5\">\r\n                <span className=\"h4 text-primary\">PROFORMA INVOICE</span> <hr />\r\n                {totalJobUnit0.displayNum} pcs of {lpoItemName} @{\" \"}\r\n                {storageCurrency.sign}\r\n                {totalPayableWithVat0.displayNum + \".\"}\r\n                <small>{totalPayableWithVat1.displayNum}</small>\r\n                {\" (\" +\r\n                  totalPayableWithVat0.displayWord +\r\n                  \" \" +\r\n                  storageCurrency.senior}\r\n                {Number(totalPayableWithVat1.displayNum) === 0\r\n                  ? null\r\n                  : \", and \" +\r\n                    totalPayableWithVat1.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.junior}\r\n                ). <br />\r\n                <br />\r\n                <span className=\"h4 text-success\">PROFIT</span> <hr />\r\n                {storageCurrency.sign}\r\n                {chargesPercentage0.displayNum + \".\"}\r\n                <small>{chargesPercentage1.displayNum}</small>\r\n                {\" (\" +\r\n                  chargesPercentage0.displayWord +\r\n                  \" \" +\r\n                  storageCurrency.senior}\r\n                {Number(chargesPercentage1.displayNum) === 0\r\n                  ? null\r\n                  : \", and \" +\r\n                    chargesPercentage1.displayWord +\r\n                    \" \" +\r\n                    storageCurrency.junior}\r\n                ).{\" \"}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nQuotesCard.propTypes = {\r\n  proformaInvoice: PropTypes.object.isRequired,\r\n  getProformaInvoice: PropTypes.func.isRequired,\r\n  addProformaInvoice: PropTypes.func.isRequired,\r\n  getCurrency: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  proformaInvoice: state.quotation.proformaInvoice\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getProformaInvoice,\r\n  addProformaInvoice,\r\n  getCurrency\r\n})(QuotesCard);\r\n\r\nconst boxShadows = {\r\n  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    // Set Footer Year\r\n    const thisYear = new Date(\"2020\").getFullYear();\r\n    let presentYear = new Date().getFullYear();\r\n    return (\r\n      <footer\r\n        style={{\r\n          color: \"gray\",\r\n          textAlign: \"center\",\r\n          marginTop: \"58px\",\r\n          marginBottom: \"7px\",\r\n          paddingBottom: \"7px\"\r\n        }}\r\n      >\r\n        {\" \"}\r\n        &copy; Copyright{\" \"}\r\n        <span id=\"copyRightYear\">\r\n          {thisYear === presentYear\r\n            ? thisYear\r\n            : thisYear < presentYear\r\n            ? thisYear + \" - \" + presentYear\r\n            : null}{\" \"}\r\n        </span>{\" \"}\r\n        by Saheed Odulaja <br />\r\n        <div>\r\n          <Link\r\n            to=\"https://github.com/Sidodus/Sidodus-proforma-invoice-calculator/\"\r\n            className=\"text-secondary\"\r\n          >\r\n            Get Source Code From:\r\n            https://github.com/Sidodus/Sidodus-proforma-invoice-calculator/\r\n          </Link>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport QuotesForm from \"./QuotesForm\";\r\nimport Quotes from \"./Quotes\";\r\nimport QuotesCard from \"./QuotesCard\";\r\nimport Footer from \"../layouts/Footer\";\r\n\r\nclass QuotesHome extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\"\r\n          }}\r\n        >\r\n          <QuotesForm />\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6\">\r\n                <Quotes />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <QuotesCard />\r\n              </div>\r\n            </div>\r\n            <small>\r\n              <Footer />\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuotesHome;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateQuotation } from \"../../actions/quotationTypes\";\r\nimport { getStorageQuotations } from \"../../actions/quotationStorageAction\";\r\nimport Footer from \"../layouts/Footer\";\r\n\r\nclass EditForm extends React.Component {\r\n  state = {\r\n    currencySign: \"\",\r\n\r\n    id: \"\",\r\n    itemName: \"\",\r\n    itemDescription: \"\",\r\n    itemUnit: \"\",\r\n    itemPrice: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const currencySign = JSON.parse(localStorage.getItem(\"currency\")).sign;\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const quotations = getStorageQuotations();\r\n    const data = quotations.filter(quotation => quotation.id === id);\r\n\r\n    const { itemName, itemDescription, itemUnit, itemPrice } = data[0];\r\n    this.setState({\r\n      currencySign,\r\n\r\n      id,\r\n      itemName,\r\n      itemDescription,\r\n      itemUnit,\r\n      itemPrice\r\n    });\r\n  }\r\n\r\n  valueChanged = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  valueSubmited = e => {\r\n    e.preventDefault();\r\n\r\n    let { id, itemName, itemDescription, itemUnit, itemPrice } = this.state;\r\n\r\n    // Set itemUnit Default Value\r\n    if (itemUnit === \"\") {\r\n      itemUnit = \"1\";\r\n    }\r\n\r\n    const newQuotationItem = {\r\n      id,\r\n      itemName,\r\n      itemDescription,\r\n      itemUnit,\r\n      itemPrice\r\n    };\r\n\r\n    this.setState({\r\n      id: \"\",\r\n      itemName: \"\",\r\n      itemDescription: \"\",\r\n      itemUnit: \"\",\r\n      itemPrice: \"\"\r\n    });\r\n\r\n    this.props.updateQuotation(newQuotationItem);\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currencySign,\r\n      itemName,\r\n      itemDescription,\r\n      itemPrice,\r\n      itemUnit\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          style={{\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\"\r\n          }}\r\n        >\r\n          <div\r\n            className=\"container-fluid pt-5 pb-3 px-5 mb-1\"\r\n            // Main Background Styling\r\n            style={{\r\n              backgroundImage:\r\n                \"linear-gradient(lightgray 2%, white 5%, gray 15%, lightgray 60%)\",\r\n              transform: \"rotate(180deg)\"\r\n            }}\r\n          >\r\n            <div\r\n              className=\"row\"\r\n              // Inner Background Styling\r\n              style={{\r\n                backgroundImage:\r\n                  \"linear-gradient(lightgray 1%, white 30%, rgb(187, 202, 131) 100%)\",\r\n                transform: \"rotate(180deg)\",\r\n                paddingBottom: \"10px\",\r\n                boxShadow: \"0px 2px 4px rgba(0, 0, 0, .5)\"\r\n              }}\r\n            >\r\n              <div className=\"col-sm-9 mx-auto\">\r\n                <h4 className=\"text-center text-secondary\">\r\n                  <i className=\"fa fa-align-center fa-sm\" /> STEP 1 (update)\r\n                </h4>\r\n                <label>\r\n                  <b>Update Quotation Details...</b>\r\n                </label>\r\n                <form onSubmit={this.valueSubmited}>\r\n                  <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">Item Name</span>\r\n                    </div>\r\n                    <input\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"itemName\"\r\n                      className=\"form-control\"\r\n                      value={itemName}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"itemDescription\"\r\n                      className=\"form-control\"\r\n                      value={itemDescription}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <span className=\"input-group-text\">Description</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text btn btn-outline-success form-control\">\r\n                        {currencySign}\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      required\r\n                      type=\"number\"\r\n                      name=\"itemPrice\"\r\n                      className=\"form-control\"\r\n                      value={itemPrice}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">Item Value</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"itemUnit\"\r\n                      className=\"form-control\"\r\n                      value={itemUnit}\r\n                      onChange={this.valueChanged}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update\"\r\n                    className=\"form-control btn btn-secondary\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <small>\r\n            <Footer />\r\n          </small>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditForm.propTypes = {\r\n  updateQuotation: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  quotations: state.quotation.quotations\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateQuotation })(EditForm);\r\n","import React, { Component } from \"react\";\r\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport QuotesHome from \"./components/quotations/QuotesHome\";\r\nimport EditForm from \"./components/quotations/EditForm\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport \"./fontawesome/css/all.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={QuotesHome} />\r\n            <Route exact path=\"/update/:id\" component={EditForm} />\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config); \n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}